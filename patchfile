diff --git a/client/containers/cdl/card-replacement.jsx b/client/containers/cdl/card-replacement.jsx
index 9fa6d64b..ae4f679c 100644
--- a/client/containers/cdl/card-replacement.jsx
+++ b/client/containers/cdl/card-replacement.jsx
@@ -30,7 +30,8 @@ function mapStateToProps(state) {
     cardAction          : state.application.cardAction,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-certificates.jsx b/client/containers/cdl/cdl-certificates.jsx
index 36953ae3..33b5ea2c 100644
--- a/client/containers/cdl/cdl-certificates.jsx
+++ b/client/containers/cdl/cdl-certificates.jsx
@@ -27,7 +27,8 @@ const mapStateToProps = (state) => {
     licenseClass     : state.cdl.licenseClass,
     focused          : state.ui.focus,
     validations      : state.ui.validations,
-    locale           : state.ui.locale
+    locale           : state.ui.locale,
+    flow             : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-certification.jsx b/client/containers/cdl/cdl-certification.jsx
index bc7d0a03..7094222d 100644
--- a/client/containers/cdl/cdl-certification.jsx
+++ b/client/containers/cdl/cdl-certification.jsx
@@ -32,7 +32,8 @@ function mapStateToProps(state) {
     dateOfBirth:    state.cdl.basics.dateOfBirth,
     certification:  state.cdl.certification,
     locale:         state.ui.locale,
-    validations:    state.ui.validations
+    validations:    state.ui.validations,
+    flow:           state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-current-card.jsx b/client/containers/cdl/cdl-current-card.jsx
index 0d48b6e6..2909ca74 100644
--- a/client/containers/cdl/cdl-current-card.jsx
+++ b/client/containers/cdl/cdl-current-card.jsx
@@ -30,7 +30,8 @@ function mapStateToProps(state) {
     currentCardInfo   : state.cdl.currentCardInfo,
     cardAction        : state.cdl.cardAction,
     validations       : state.ui.validations,
-    locale            : state.ui.locale
+    locale            : state.ui.locale,
+    flow              : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-endorsements.jsx b/client/containers/cdl/cdl-endorsements.jsx
index ec61c608..1de7920a 100644
--- a/client/containers/cdl/cdl-endorsements.jsx
+++ b/client/containers/cdl/cdl-endorsements.jsx
@@ -27,7 +27,8 @@ const mapStateToProps = (state) => {
     licenseClass     : state.cdl.licenseClass,
     focused          : state.ui.focus,
     validations      : state.ui.validations,
-    locale           : state.ui.locale
+    locale           : state.ui.locale,
+    flow             : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-organ-donation.jsx b/client/containers/cdl/cdl-organ-donation.jsx
index b7a7470b..0c37fba2 100644
--- a/client/containers/cdl/cdl-organ-donation.jsx
+++ b/client/containers/cdl/cdl-organ-donation.jsx
@@ -33,7 +33,8 @@ function mapStateToProps(state) {
     dateOfBirth:    state.cdl.basics.dateOfBirth,
     focused:        state.ui.focus,
     validations:    state.ui.validations,
-    locale:         state.ui.locale
+    locale:         state.ui.locale,
+    flow:           state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-real-id.jsx b/client/containers/cdl/cdl-real-id.jsx
index 798a3c68..c46579e5 100644
--- a/client/containers/cdl/cdl-real-id.jsx
+++ b/client/containers/cdl/cdl-real-id.jsx
@@ -28,7 +28,8 @@ const mapStateToProps = (state) => {
     realID :      state.cdl.realID,
     focused:      state.ui.focus,
     validations:  state.ui.validations,
-    locale:       state.ui.locale
+    locale:       state.ui.locale,
+    flow:         state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/cdl-welcome.jsx b/client/containers/cdl/cdl-welcome.jsx
new file mode 100644
index 00000000..343cdd21
--- /dev/null
+++ b/client/containers/cdl/cdl-welcome.jsx
@@ -0,0 +1,31 @@
+'use strict';
+
+import React                  from 'react';
+import connectForm            from '../../helpers/connect-form';
+import handlers               from '../../helpers/handlers';
+import Presentation           from '../../presentations/cdl/cdl-page.jsx';
+
+const Page = (props) => {
+  let validations       = {
+    isValid: () => true
+  };
+  let onSubmit          =   handlers.navigateOrShowErrors('cdl', props, validations);
+  let onBack            =   handlers.navigateOnBack(props);
+
+  return (
+    <Presentation
+      {...props}
+      onSubmit = { onSubmit }
+      onBack = {onBack}
+    />
+  );
+};
+
+function mapStateToProps(state) {
+  return {
+    focused:      state.ui.focus,
+    locale:       state.ui.locale
+  };
+};
+
+export default connectForm(mapStateToProps, null, Page);
\ No newline at end of file
diff --git a/client/containers/cdl/cdl-what-do-you-want-to-do-today-page.jsx b/client/containers/cdl/cdl-what-do-you-want-to-do-today-page.jsx
index 5006054e..ff967fac 100644
--- a/client/containers/cdl/cdl-what-do-you-want-to-do-today-page.jsx
+++ b/client/containers/cdl/cdl-what-do-you-want-to-do-today-page.jsx
@@ -28,9 +28,10 @@ const Page = (props) => {
 function mapStateToProps(state) {
   return {
     cardAction:       state.cdl.cardAction,
+    currentCardInfo:  state.cdl.currentCardInfo,
     focused:          state.ui.focus,
     validations:      state.ui.validations,
-    addApp:           state.ui.addApp,
+    flow:             state.ui.flow,
     locale:           state.ui.locale
   };
 };
diff --git a/client/containers/cdl/change-details.jsx b/client/containers/cdl/change-details.jsx
index 51d9283d..b74eac56 100644
--- a/client/containers/cdl/change-details.jsx
+++ b/client/containers/cdl/change-details.jsx
@@ -32,7 +32,8 @@ function mapStateToProps(state) {
     cardAction          : state.application.cardAction,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/license-class.jsx b/client/containers/cdl/license-class.jsx
index e22adef5..b8258539 100644
--- a/client/containers/cdl/license-class.jsx
+++ b/client/containers/cdl/license-class.jsx
@@ -29,7 +29,8 @@ const mapStateToProps = (state) => {
     licenseClass  : state.cdl.licenseClass,
     focused       : state.ui.focus,
     validations   : state.ui.validations,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/motorcycle.jsx b/client/containers/cdl/motorcycle.jsx
index 230bef2a..910d14a6 100644
--- a/client/containers/cdl/motorcycle.jsx
+++ b/client/containers/cdl/motorcycle.jsx
@@ -31,7 +31,8 @@ function mapStateToProps(state) {
     classM              : state.cdl.classM,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/cdl-date-of-birth.jsx b/client/containers/cdl/my-basics/cdl-date-of-birth.jsx
index ed43f84f..0655e592 100644
--- a/client/containers/cdl/my-basics/cdl-date-of-birth.jsx
+++ b/client/containers/cdl/my-basics/cdl-date-of-birth.jsx
@@ -19,6 +19,7 @@ const Page = (props) => {
       onBack      = {onBack}
       onSubmit    = { onSubmit }
       validations = { validations }
+      chooseApp   = 'cdl'
     />
   );
 };
@@ -28,8 +29,8 @@ function mapStateToProps(state) {
     dateOfBirth:  state.cdl.basics.dateOfBirth,
     validations:  state.ui.validations,
     focused:      state.ui.focus,
-    addApp:       state.ui.addApp,
-    locale:       state.ui.locale
+    locale:       state.ui.locale,
+    flow:         state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/cdl-height-weight.jsx b/client/containers/cdl/my-basics/cdl-height-weight.jsx
index 2d37ec63..c110a844 100644
--- a/client/containers/cdl/my-basics/cdl-height-weight.jsx
+++ b/client/containers/cdl/my-basics/cdl-height-weight.jsx
@@ -30,7 +30,8 @@ function mapStateToProps(state) {
     traitsHeightWeight: state.cdl.basics.traitsHeightWeight,
     focused:            state.ui.focus,
     validations:        state.ui.validations,
-    locale:             state.ui.locale
+    locale:             state.ui.locale,
+    flow:               state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/cdl-legal-name.jsx b/client/containers/cdl/my-basics/cdl-legal-name.jsx
index b4a4883f..1a1f257f 100644
--- a/client/containers/cdl/my-basics/cdl-legal-name.jsx
+++ b/client/containers/cdl/my-basics/cdl-legal-name.jsx
@@ -29,7 +29,8 @@ function mapStateToProps(state) {
     validations:  state.ui.validations,
     focused:      state.ui.focus,
     hover:        state.ui.hover,
-    locale:       state.ui.locale
+    locale:       state.ui.locale,
+    flow:         state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/cdl-physical-traits.jsx b/client/containers/cdl/my-basics/cdl-physical-traits.jsx
index e24f5c9a..e7962d44 100644
--- a/client/containers/cdl/my-basics/cdl-physical-traits.jsx
+++ b/client/containers/cdl/my-basics/cdl-physical-traits.jsx
@@ -29,7 +29,8 @@ function mapStateToProps(state) {
     physicalTraits: state.cdl.basics.physicalTraits,
     focused:        state.ui.focus,
     validations:    state.ui.validations,
-    locale:         state.ui.locale
+    locale:         state.ui.locale,
+    flow:           state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/cdl-residency.jsx b/client/containers/cdl/my-basics/cdl-residency.jsx
index ed336f68..36078a0e 100644
--- a/client/containers/cdl/my-basics/cdl-residency.jsx
+++ b/client/containers/cdl/my-basics/cdl-residency.jsx
@@ -29,7 +29,8 @@ function mapStateToProps(state) {
     validations:    state.ui.validations,
     focused:        state.ui.focus,
     hover:          state.ui.hover,
-    locale:         state.ui.locale
+    locale:         state.ui.locale,
+    flow:           state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/cdl-social-security.jsx b/client/containers/cdl/my-basics/cdl-social-security.jsx
index 4d084a71..5ed2f989 100644
--- a/client/containers/cdl/my-basics/cdl-social-security.jsx
+++ b/client/containers/cdl/my-basics/cdl-social-security.jsx
@@ -29,7 +29,8 @@ const mapStateToProps = (state) => {
     cardAction    : state.cdl.cardAction,
     focused       : state.ui.focus,
     validations   : state.ui.validations,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-basics/routes.jsx b/client/containers/cdl/my-basics/routes.jsx
index 0cea4f59..e1d0e69f 100644
--- a/client/containers/cdl/my-basics/routes.jsx
+++ b/client/containers/cdl/my-basics/routes.jsx
@@ -2,15 +2,21 @@
 
 import React                        from 'react';
 import { Route }                    from 'react-router-dom';
-import { cdlPath }                  from '../../../helpers/alice-path';
+import {
+  cdlPath,
+  editCDLPath
+ } from '../../../helpers/alice-path';
 import PhysicalTraits               from './cdl-physical-traits.jsx';
 import HeightWeight                 from './cdl-height-weight.jsx';
 
 const MyHistory = () => {
   return (
     <div>
-      <Route path={ cdlPath('/physical-traits')}            component={PhysicalTraits} />
-      <Route path={ cdlPath('/traits-height-weight')}       component={HeightWeight} />
+      <Route path={ cdlPath('/physical-traits')}              component={PhysicalTraits}   />
+      <Route path={ editCDLPath('/physical-traits')}          component={PhysicalTraits}   />
+
+      <Route path={ cdlPath('/traits-height-weight')}         component={HeightWeight}    />
+      <Route path={ editCDLPath('/traits-height-weight')}     component={HeightWeight}    />
     </div>
   )
 };
diff --git a/client/containers/cdl/my-history/cdl-current-dl.jsx b/client/containers/cdl/my-history/cdl-current-dl.jsx
index 48d74d67..4927bf6e 100644
--- a/client/containers/cdl/my-history/cdl-current-dl.jsx
+++ b/client/containers/cdl/my-history/cdl-current-dl.jsx
@@ -28,7 +28,8 @@ function mapStateToProps(state) {
     currentCardInfo:  state.cdl.history.currentDLInfo,
     validations:      state.ui.validations,
     focused:          state.ui.focus,
-    addApp:           state.ui.addApp,
+    flow:             state.ui.flow,
+    classM:           state.cdl.classM,
     locale:           state.ui.locale
   };
 };
diff --git a/client/containers/cdl/my-history/license-issues.jsx b/client/containers/cdl/my-history/license-issues.jsx
index 2ddd0fbb..2592b7c5 100644
--- a/client/containers/cdl/my-history/license-issues.jsx
+++ b/client/containers/cdl/my-history/license-issues.jsx
@@ -28,7 +28,8 @@ function mapStateToProps(state) {
     licenseIssues   : state.cdl.history.licenseIssues,
     focused         : state.ui.focus,
     validations     : state.ui.validations,
-    locale          : state.ui.locale
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-history/medical-history.jsx b/client/containers/cdl/my-history/medical-history.jsx
index d8e7b465..e4a0344f 100644
--- a/client/containers/cdl/my-history/medical-history.jsx
+++ b/client/containers/cdl/my-history/medical-history.jsx
@@ -29,7 +29,8 @@ function mapStateToProps(state) {
     cardAction        : state.cdl.cardAction,
     focused           : state.ui.focus,
     validations       : state.ui.validations,
-    locale            : state.ui.locale
+    locale            : state.ui.locale,
+    flow              : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-history/names-history.jsx b/client/containers/cdl/my-history/names-history.jsx
index 90d494d9..b716bb5d 100644
--- a/client/containers/cdl/my-history/names-history.jsx
+++ b/client/containers/cdl/my-history/names-history.jsx
@@ -10,7 +10,7 @@ import Presentation               from '../../../presentations/cdl/my-history/na
 const Page = (props) => {
   let locale      = props.locale;
   let validations = new NamesValidator(Object.assign(props.namesHistory, {locale}), props.validations, 'selectionMissing');
-  let onSubmit    = handlers.navigateOrShowErrors('cdlNamesHistory', props, validations);
+  let onSubmit    = handlers.navigateOrShowErrors('cdlNameHistory', props, validations);
   let onBack      = handlers.navigateOnBack(props, validations);
 
   return (
@@ -29,7 +29,8 @@ function mapStateToProps(state) {
     cardAction        : state.cdl.cardAction,
     focused           : state.ui.focus,
     validations       : state.ui.validations,
-    locale            : state.ui.locale
+    locale            : state.ui.locale,
+    flow              : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-history/other-state-licenses.jsx b/client/containers/cdl/my-history/other-state-licenses.jsx
index c04e1755..ec99a4b5 100644
--- a/client/containers/cdl/my-history/other-state-licenses.jsx
+++ b/client/containers/cdl/my-history/other-state-licenses.jsx
@@ -28,7 +28,8 @@ function mapStateToProps(state) {
     otherStateLicenses  : state.cdl.history.otherStateLicenses,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/cdl/my-history/routes.jsx b/client/containers/cdl/my-history/routes.jsx
index 551f3c75..deb53e06 100644
--- a/client/containers/cdl/my-history/routes.jsx
+++ b/client/containers/cdl/my-history/routes.jsx
@@ -2,19 +2,29 @@
 
 import React                        from 'react';
 import { Route }                    from 'react-router-dom';
-import { cdlPath }                  from '../../../helpers/alice-path';
-import medicalHistory               from './medical-history.jsx';
-import namesHistory                 from './names-history.jsx';
-import otherStateLicenses           from './other-state-licenses.jsx';
-import licenseIssues                from './license-issues.jsx';
+import {
+  cdlPath,
+  editCDLPath
+} from '../../../helpers/alice-path';
+import MedicalHistory               from './medical-history.jsx';
+import NamesHistory                 from './names-history.jsx';
+import OtherStateLicenses           from './other-state-licenses.jsx';
+import LicenseIssues                from './license-issues.jsx';
 
 const CDLHistory = () => {
   return (
     <div>
-      <Route path={ cdlPath('/my-history/medical')}  component={medicalHistory} />
-      <Route path={ cdlPath('/my-history/names')}    component={namesHistory} />
-      <Route path={ cdlPath('/my-history/other-state-licenses')}    component={otherStateLicenses} />
-      <Route path={ cdlPath('/my-history/issues')}    component={licenseIssues} />
+      <Route path={ cdlPath('/my-history/medical')}                       component={MedicalHistory} />
+      <Route path={ editCDLPath('/my-history/medical')}                   component={MedicalHistory} />
+
+      <Route path={ cdlPath('/my-history/names')}                         component={NamesHistory}  />
+      <Route path={ editCDLPath('/my-history/names')}                     component={NamesHistory}  />
+
+      <Route path={ cdlPath('/my-history/other-state-licenses')}          component={OtherStateLicenses} />
+      <Route path={ editCDLPath('/my-history/other-state-licenses')}      component={OtherStateLicenses} />
+
+      <Route path={ cdlPath('/my-history/issues')}                        component={LicenseIssues}  />
+      <Route path={ editCDLPath('/my-history/issues')}                    component={LicenseIssues}  />
     </div>
   )
 };
diff --git a/client/containers/cdl/routes.jsx b/client/containers/cdl/routes.jsx
index 7da22c01..2219506e 100644
--- a/client/containers/cdl/routes.jsx
+++ b/client/containers/cdl/routes.jsx
@@ -2,47 +2,83 @@
 
 import React                            from 'react';
 import { Route }                        from 'react-router-dom';
-import { cdlPath }                      from '../../helpers/alice-path';
+import {
+  cdlPath,
+  editCDLPath
+} from '../../helpers/alice-path';
+
 import DateOfBirth                      from './my-basics/cdl-date-of-birth.jsx';
 import LegalName                        from './my-basics/cdl-legal-name.jsx';
-import cdlWdywtdt                       from './cdl-what-do-you-want-to-do-today-page.jsx';
+import CdlWdywtdt                       from './cdl-what-do-you-want-to-do-today-page.jsx';
 import Residency                        from './my-basics/cdl-residency.jsx';
 import UpdatesAndCorrections            from './change-details.jsx';
-import cdlSocialSecurity                from './my-basics/cdl-social-security.jsx';
+import CdlSocialSecurity                from './my-basics/cdl-social-security.jsx';
 import CardReplacement                  from './card-replacement.jsx';
-import cdlEndorsements                  from './cdl-endorsements.jsx';
-import cdlCertificates                  from './cdl-certificates.jsx';
-import cdlCurrentLicense                from './my-history/cdl-current-dl.jsx';
-import cdlCurrentCard                   from './cdl-current-card.jsx';
-import cdlRealID                        from './cdl-real-id.jsx';
+import CdlEndorsements                  from './cdl-endorsements.jsx';
+import CdlCertificates                  from './cdl-certificates.jsx';
+import CdlCurrentLicense                from './my-history/cdl-current-dl.jsx';
+import CdlCurrentCard                   from './cdl-current-card.jsx';
+import CdlRealID                        from './cdl-real-id.jsx';
 import Motorcycle                       from './motorcycle.jsx';
 import LicenseClass                     from './license-class.jsx';
-import cdlCertification                 from './cdl-certification.jsx';
+import CdlCertification                 from './cdl-certification.jsx';
 import MyBasics                         from './my-basics/routes.jsx';
 import CDLVoterRegistration             from './voter-registration/routes.jsx';
 import CDLHistory                       from './my-history/routes.jsx';
-import cdlOrganDonation                 from './cdl-organ-donation.jsx';
+import CdlOrganDonation                 from './cdl-organ-donation.jsx';
 import Summary                          from './cdl-summary.jsx';
 
 const CDLRoutes = () => {
   return (
     <div>
-      <Route path={ cdlPath('/true-name')}                      component={LegalName}   />
-      <Route path={ cdlPath('/date-of-birth')}                  component={DateOfBirth} />
-      <Route path={ cdlPath('/what-do-you-want-to-do-today')}   component={cdlWdywtdt} />
-      <Route path={ cdlPath('/current-card-information')}       component={cdlCurrentCard} />
-      <Route path={ cdlPath('/change-details')}                 component={UpdatesAndCorrections} />
-      <Route path={ cdlPath('/replacement-details')}            component={CardReplacement} />
-      <Route path={ cdlPath('/california-residency')}           component={Residency} />
-      <Route path={ cdlPath('/social-security')}                component={cdlSocialSecurity} />
-      <Route path={ cdlPath('/current-ca-license')}             component={cdlCurrentLicense} />
-      <Route path={ cdlPath('/real-id')}                        component={cdlRealID} />
-      <Route path={ cdlPath('/motorcycle')}                     component={Motorcycle} />
-      <Route path={ cdlPath('/license-class')}                  component={LicenseClass} />
-      <Route path={ cdlPath('/self-certification')}             component={cdlCertification} />
-      <Route path={ cdlPath('/endorsements')}                   component={cdlEndorsements} />
-      <Route path={ cdlPath('/certificates')}                   component={cdlCertificates} />
-      <Route path={ cdlPath('/organ-donation')}                 component={cdlOrganDonation} />
+
+      <Route path={ cdlPath('/true-name')}                              component={LegalName}  />
+      <Route path={ editCDLPath('/true-name')}                          component={LegalName}  />
+
+      <Route path={ cdlPath('/date-of-birth')}                          component={DateOfBirth}  />
+      <Route path={ editCDLPath('/date-of-birth')}                      component={DateOfBirth}  />
+
+      <Route path={ cdlPath('/what-do-you-want-to-do-today')}           component={CdlWdywtdt}   />
+      <Route path={ editCDLPath('/what-do-you-want-to-do-today')}       component={CdlWdywtdt}   />
+
+      <Route path={ cdlPath('/current-card-information')}               component={CdlCurrentCard} />
+      <Route path={ editCDLPath('/current-card-information')}           component={CdlCurrentCard} />
+
+      <Route path={ cdlPath('/change-details')}                         component={UpdatesAndCorrections} />
+      <Route path={ editCDLPath('/change-details')}                     component={UpdatesAndCorrections} />
+
+      <Route path={ cdlPath('/replacement-details')}                    component={CardReplacement} />
+      <Route path={ editCDLPath('/replacement-details')}                component={CardReplacement} />
+
+      <Route path={ cdlPath('/california-residency')}                   component={Residency}   />
+      <Route path={ editCDLPath('/california-residency')}               component={Residency}   />
+
+      <Route path={ cdlPath('/social-security')}                        component={CdlSocialSecurity}  />
+      <Route path={ editCDLPath('/social-security')}                    component={CdlSocialSecurity}  />
+
+      <Route path={ cdlPath('/current-ca-license')}                     component={CdlCurrentLicense}  />
+      <Route path={ editCDLPath('/current-ca-license')}                 component={CdlCurrentLicense}  />
+
+      <Route path={ cdlPath('/real-id')}                                component={CdlRealID}  />
+      <Route path={ editCDLPath('/real-id')}                            component={CdlRealID}  />
+
+      <Route path={ cdlPath('/motorcycle')}                             component={Motorcycle}  />
+      <Route path={ editCDLPath('/motorcycle')}                         component={Motorcycle}  />
+
+      <Route path={ cdlPath('/license-class')}                          component={LicenseClass} />
+      <Route path={ editCDLPath('/license-class')}                      component={LicenseClass} />
+
+      <Route path={ cdlPath('/self-certification')}                     component={CdlCertification}  />
+      <Route path={ editCDLPath('/self-certification')}                 component={CdlCertification}  />
+
+      <Route path={ cdlPath('/endorsements')}                           component={CdlEndorsements} />
+      <Route path={ editCDLPath('/endorsements')}                       component={CdlEndorsements} />
+
+      <Route path={ cdlPath('/certificates')}                           component={CdlCertificates} />
+      <Route path={ editCDLPath('/certificates')}                       component={CdlCertificates} />
+
+      <Route path={ cdlPath('/organ-donation')}                         component={CdlOrganDonation} />
+      <Route path={ editCDLPath('/organ-donation')}                     component={CdlOrganDonation} />
 
       <CDLHistory />
 
diff --git a/client/containers/cdl/voter-registration/routes.jsx b/client/containers/cdl/voter-registration/routes.jsx
index f2e3850f..61257d66 100644
--- a/client/containers/cdl/voter-registration/routes.jsx
+++ b/client/containers/cdl/voter-registration/routes.jsx
@@ -2,7 +2,10 @@
 
 import React                   from 'react';
 import { Route }               from 'react-router-dom';
-import { cdlPath }             from '../../../helpers/alice-path';
+import {
+  cdlPath,
+  editCDLPath
+ } from '../../../helpers/alice-path';
 import citizenStatus           from './cdl-citizen-status.jsx';
 import eligibilityRequirements from './cdl-eligibility-requirements.jsx';
 import optOut                  from './cdl-opt-out.jsx';
@@ -11,8 +14,13 @@ const CDLVoterRegistration = () => {
   return (
     <div>
       <Route path={ cdlPath('/voting-registration/citizenship')}  component={citizenStatus} />
+      <Route path={ editCDLPath('/voting-registration/citizenship')}  component={citizenStatus} />
+
       <Route path={ cdlPath('/voting-registration/eligibility')}    component={eligibilityRequirements} />
+      <Route path={ editCDLPath('/voting-registration/eligibility')}    component={eligibilityRequirements} />
+
       <Route path={ cdlPath('/voting-registration/opt-out')}    component={optOut} />
+      <Route path={ editCDLPath('/voting-registration/opt-out')}    component={optOut} />
     </div>
   )
 };
diff --git a/client/containers/get-started/correct-or-update-page.jsx b/client/containers/get-started/correct-or-update-page.jsx
index 73242a57..0d9f2bfd 100644
--- a/client/containers/get-started/correct-or-update-page.jsx
+++ b/client/containers/get-started/correct-or-update-page.jsx
@@ -13,7 +13,7 @@ import { getCorrectApp }      from '../../helpers/data/card-type';
 const Page = (props) => {
   let locale            = props.locale;
   let validations       = new ChangeValidator(Object.assign(props.cardChanges, {locale}), props.validations, 'applicationActionMissing');
-  let onSubmit          = handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          = handlers.navigateOrShowErrors('updateAndCorrect', props, validations);
   let onBack            = handlers.navigateOnBack(props, validations);
 
   return (
@@ -21,7 +21,7 @@ const Page = (props) => {
       {...props}
       onSubmit          = { onSubmit }
       onBack            = { onBack }
-      selectedValue     = { props.cardChanges.correctOrUpdate }
+      cardChanges       = { props.cardChanges }
       validations       = { validations }
       translations      = { translations }
     />
@@ -32,11 +32,14 @@ function mapStateToProps(state) {
   return {
     cardChanges         : getCorrectApp(state.application).cardChanges,
     cardType            : state.application.cardType,
+    licenseAndIdHistory : state.application.history.licenseAndIdHistory,
     cardAction          : state.application.cardAction,
     dateOfBirth         : state.application.basics.dateOfBirth,
+    seniorID            : state.application.IDApp.seniorID,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/current-card-page.jsx b/client/containers/get-started/current-card-page.jsx
index ed3ad7a0..2c410c78 100644
--- a/client/containers/get-started/current-card-page.jsx
+++ b/client/containers/get-started/current-card-page.jsx
@@ -12,13 +12,14 @@ import { getCorrectApp }          from '../../helpers/data/card-type';
 const Page = (props) => {
   let locale = props.locale;
   let validations = new CurrentCardValidator(Object.assign(props.currentCardInfo, {locale}), props.validations);
-  let onSubmit = handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit = handlers.navigateOrShowErrors('currentCardInfo', props, validations);
   let onBack   = handlers.navigateOnBack(props, validations);
   return (
     <Presentation
       {...props}
       onSubmit          = { onSubmit }
       onBack            = { onBack }
+      currentCardInfo   = { props.currentCardInfo }
       validations       = { validations }
       onBlur            = { props.onBlurValidate }
       onFocus           = { props.onFocusClearValidation }
@@ -29,12 +30,13 @@ const Page = (props) => {
 function mapStateToProps(state) {
   return {
     currentCardInfo   : getCorrectApp(state.application).currentCard,
+    licenseAndIdHistory: state.application.history.licenseAndIdHistory,
     cardType          : state.application.cardType,
-    IDApp             : state.application.IDApp,
     cardAction        : state.application.cardAction,
     dateOfBirth       : state.application.basics.dateOfBirth,
     validations       : state.ui.validations,
-    locale            : state.ui.locale
+    locale            : state.ui.locale,
+    flow              : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/date-of-birth-page.jsx b/client/containers/get-started/date-of-birth-page.jsx
index 1e629019..c5ea2589 100644
--- a/client/containers/get-started/date-of-birth-page.jsx
+++ b/client/containers/get-started/date-of-birth-page.jsx
@@ -27,9 +27,14 @@ const Page = (props) => {
 
 const mapStateToProps = (state) => {
   return {
-    dateOfBirth:  state.application.basics.dateOfBirth,
-    validations:  state.ui.validations,
-    locale:       state.ui.locale
+    dateOfBirth   : state.application.basics.dateOfBirth,
+    cardType      : state.application.cardType,
+    seniorID      : state.application.IDApp.seniorID,
+    youthIDInstead: state.application.youthIDInstead,
+    chooseApp     : state.ui.chooseApp,
+    validations   : state.ui.validations,
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/license-type-page.jsx b/client/containers/get-started/license-type-page.jsx
index 2cd65b31..e107e2fb 100644
--- a/client/containers/get-started/license-type-page.jsx
+++ b/client/containers/get-started/license-type-page.jsx
@@ -11,7 +11,7 @@ import { LicenseTypeValidator } from '../../helpers/validations';
 const Page = (props) => {
 
   let validations = new LicenseTypeValidator(props, props.validations);
-  let onSubmit    = handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit    = handlers.navigateOrShowErrors('chooseLicenseClass', props, validations);
   let onBack      = handlers.navigateOnBack(props, validations);
 
   return <Presentation
@@ -24,14 +24,14 @@ const Page = (props) => {
 
 const mapStateToProps = (state) => {
   return {
-    IDApp         : state.application.IDApp,
     DLApp         : state.application.DLApp,
     cardType      : state.application.cardType,
     seniorID      : state.application.IDApp.seniorID,
     licenseType   : state.application.DLApp.licenseType,
     focused       : state.ui.focus,
     validations   : state.ui.validations,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/name-page.jsx b/client/containers/get-started/name-page.jsx
index 8e7b65b3..7111fec1 100644
--- a/client/containers/get-started/name-page.jsx
+++ b/client/containers/get-started/name-page.jsx
@@ -31,7 +31,9 @@ const mapStateToProps = (state) => {
     focused:      state.ui.focus,
     validations:  state.ui.validations,
     hover:        state.ui.hover,
-    locale:       state.ui.locale
+    locale:       state.ui.locale,
+    flow: state.ui.flow
+
   };
 };
 
diff --git a/client/containers/get-started/real-id-page.jsx b/client/containers/get-started/real-id-page.jsx
index ba1f0021..ef67d499 100644
--- a/client/containers/get-started/real-id-page.jsx
+++ b/client/containers/get-started/real-id-page.jsx
@@ -30,7 +30,8 @@ const mapStateToProps = (state) => {
     seniorID:     state.application.IDApp.seniorID,
     focused:      state.ui.focus,
     validations:  state.ui.validations,
-    locale:       state.ui.locale
+    locale:       state.ui.locale,
+    flow :        state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/reduced-fee-page.jsx b/client/containers/get-started/reduced-fee-page.jsx
index 3113ee0f..db6683a0 100644
--- a/client/containers/get-started/reduced-fee-page.jsx
+++ b/client/containers/get-started/reduced-fee-page.jsx
@@ -9,7 +9,7 @@ import { ReducedFeeValidator }from '../../helpers/validations';
 
 const Page = (props) => {
   let validations       = new ReducedFeeValidator(props, props.validations);
-  let onSubmit          = handlers.navigateOrShowErrors(props.addressName, props, validations)
+  let onSubmit          = handlers.navigateOrShowErrors('reducedFeeID', props, validations)
   let onBack            = handlers.navigateOnBack(props, validations);
 
   return (
@@ -28,7 +28,8 @@ const mapStateToProps = (state) => {
     cardType    : state.application.cardType,
     focused     : state.ui.focus,
     validations : state.ui.validations,
-    locale      : state.ui.locale
+    locale      : state.ui.locale,
+    flow        : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/replacement-details-page.jsx b/client/containers/get-started/replacement-details-page.jsx
index 58f2190e..70387db4 100644
--- a/client/containers/get-started/replacement-details-page.jsx
+++ b/client/containers/get-started/replacement-details-page.jsx
@@ -13,7 +13,7 @@ import { getCorrectApp }          from '../../helpers/data/card-type';
 const Page = (props) => {
   let locale            =   props.locale;
   let validations       =   new ReplaceValidator(Object.assign(props.cardReplacement, {locale}), props.validations);
-  let onSubmit          =   handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          =   handlers.navigateOrShowErrors('replacementDetails', props, validations);
   let onBack            =   handlers.navigateOnBack(props, validations);
 
   return (
@@ -31,10 +31,13 @@ function mapStateToProps(state) {
   return {
     cardReplacement     : getCorrectApp(state.application).replacementDetails,
     cardType            : state.application.cardType,
+    cardAction          : state.application.cardAction,
+    licenseAndIdHistory : state.application.history.licenseAndIdHistory,
     dateOfBirth         : state.application.basics.dateOfBirth,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/routes.jsx b/client/containers/get-started/routes.jsx
index 82b2a820..216a8df3 100644
--- a/client/containers/get-started/routes.jsx
+++ b/client/containers/get-started/routes.jsx
@@ -17,26 +17,58 @@ import ReducedFee                             from './reduced-fee-page.jsx';
 import GetStarted                             from './get-started-page.jsx';
 import {
   iddlPath,
-  addPath
- }                           from '../../helpers/alice-path';
+  addPath,
+  editPath
+} from '../../helpers/alice-path';
 
 
 const GetStartedRoutes = () => {
   return (
     <div>
-      <Route path={ iddlPath('/my-basics/legal-name') }       component={LegalName} />
-      <Route path={ iddlPath('/my-basics/date-of-birth') }    component={DateOfBirth} />
-      <Route path={ iddlPath('/what-do-you-want-to-do-today') } exact render={(props) => <WhatDoYouWantToDoToday {...props} addressName='wdywtdt' />} />
-      <Route path={ iddlPath('/select-id-dl') }               component={ChooseCard} />
-      <Route path={ iddlPath('/current-card-information') }   exact render={(props) => <CurrentCardInfo {...props} addressName='currentCardInfo' />}/>
-      <Route path={ iddlPath('/updates-and-corrections') }    exact render={(props) => <UpdatesCorrects {...props} addressName='updateAndCorrect' />} />
-      <Route path={ iddlPath('/replacement-details') }        exact render={(props) => <ReplacementDetails {...props} addressName='replacementDetails' />} />
-      <Route path={ iddlPath('/senior-id') }                  exact render={(props) => <SeniorID addressName='seniorID' {...props}/>}/>
-      <Route path={ iddlPath('/youth-license-notification') } component={YouthLicenseNotification} />
-      <Route path={ iddlPath('/real-id') }                    component={RealID} />
-      <Route path={ iddlPath('/license-type') }               exact render={(props) => <LicenseType {...props} addressName='chooseLicenseClass'/>}/>
-      <Route path={ iddlPath('/reduced-fee')}                 exact render={(props) => <ReducedFee {...props} addressName='reducedFeeID' />}/>
-      <Route path={ iddlPath('/get-started') }                component={GetStarted} />
+      <Route path={ iddlPath('/my-basics/legal-name') }           component={LegalName}               />
+      <Route path={ editPath('/my-basics/legal-name') }           component={LegalName}               />
+
+      <Route path={ iddlPath('/my-basics/date-of-birth') }        component={DateOfBirth}             />
+      <Route path={ editPath('/my-basics/date-of-birth') }        component={DateOfBirth}             />
+
+      <Route path={ iddlPath('/what-do-you-want-to-do-today') }   component={WhatDoYouWantToDoToday}  />
+      <Route path={ editPath('/what-do-you-want-to-do-today') }   component={WhatDoYouWantToDoToday}  />
+      <Route path={ addPath('/what-do-you-want-to-do-today') }    component={WhatDoYouWantToDoToday}  />
+
+      <Route path={ iddlPath('/select-id-dl') }                   component={ChooseCard}              />
+
+      <Route path={ iddlPath('/current-card-information') }       component={CurrentCardInfo}         />
+      <Route path={ editPath('/current-card-information') }       component={CurrentCardInfo}         />
+      <Route path={ addPath('/current-card-information') }        component={CurrentCardInfo}         />
+
+      <Route path={ iddlPath('/updates-and-corrections') }        component={UpdatesCorrects}         />
+      <Route path={ editPath('/updates-and-corrections') }        component={UpdatesCorrects}         />
+      <Route path={ addPath('/updates-and-corrections') }         component={UpdatesCorrects}         />
+
+      <Route path={ iddlPath('/replacement-details') }            component={ReplacementDetails}      />
+      <Route path={ editPath('/replacement-details') }            component={ReplacementDetails}      />
+      <Route path={ addPath('/replacement-details') }             component={ReplacementDetails}      />
+
+      <Route path={ iddlPath('/senior-id') }                      component={SeniorID}                />
+      <Route path={ editPath('/senior-id') }                      component={SeniorID}                />
+      <Route path={ addPath('/senior-id') }                       component={SeniorID}                />
+
+      <Route path={ iddlPath('/youth-license-notification') }     component={YouthLicenseNotification}  />
+      <Route path={ editPath('/youth-license-notification') }     component={YouthLicenseNotification}  />
+
+      <Route path={ iddlPath('/real-id') }                        component={RealID}                  />
+      <Route path={ editPath('/real-id') }                        component={RealID}                  />
+      <Route path={ addPath('/real-id') }                         component={RealID}                  />
+
+      <Route path={ iddlPath('/license-type') }                   component={LicenseType}             />
+      <Route path={ editPath('/license-type') }                   component={LicenseType}             />
+      <Route path={ addPath('/license-type') }                    component={LicenseType}             />
+
+      <Route path={ iddlPath('/reduced-fee')}                     component={ReducedFee}              />
+      <Route path={ editPath('/reduced-fee')}                     component={ReducedFee}              />
+      <Route path={ addPath('/reduced-fee')}                      component={ReducedFee}              />
+
+      <Route path={ iddlPath('/get-started') }                    component={GetStarted}              />
     </div>
     );
 };
diff --git a/client/containers/get-started/senior-id-page.jsx b/client/containers/get-started/senior-id-page.jsx
index d0ac28b8..41acd5bc 100644
--- a/client/containers/get-started/senior-id-page.jsx
+++ b/client/containers/get-started/senior-id-page.jsx
@@ -12,7 +12,7 @@ import Presentation           from "../../presentations/get-started/senior-id-pa
 const Page = (props) => {
   let locale            =   props.locale;
   let validations       =   new SeniorIDValidator(Object.assign(props.seniorID, {locale}), props.validations);
-  let onSubmit          =   handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          =   handlers.navigateOrShowErrors('seniorID', props, validations);
   let onBack            =   handlers.navigateOnBack(props, validations);
 
   return (
@@ -28,11 +28,13 @@ const Page = (props) => {
 
 const mapStateToProps = (state) => {
   return {
-    seniorID:       state.application.IDApp.seniorID,
-    IDApp:          state.application.IDApp,
-    focused:        state.ui.focus,
-    validations:    state.ui.validations,
-    locale:         state.ui.locale
+    seniorID            : state.application.IDApp.seniorID,
+    reducedFee          : state.application.IDApp.reducedFee,
+    licenseAndIdHistory : state.application.history.licenseAndIdHistory,
+    focused             : state.ui.focus,
+    validations         : state.ui.validations,
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/get-started/what-do-you-want-to-do-today-page.jsx b/client/containers/get-started/what-do-you-want-to-do-today-page.jsx
index 2fe48e92..749b0138 100644
--- a/client/containers/get-started/what-do-you-want-to-do-today-page.jsx
+++ b/client/containers/get-started/what-do-you-want-to-do-today-page.jsx
@@ -8,12 +8,12 @@ import { WDYWTDTValidator }   from '../../helpers/validations';
 import { updateCardAction }   from "../../actions/index";
 import { getCorrectApp }      from '../../helpers/data/card-type';
 import Presentation           from "../../presentations/get-started/what-do-you-want-to-do-today-page.jsx";
-import { getActionFromState } from '../../helpers/data/pathnames';
+import { getActionFromState}  from '../../helpers/data/pathnames';
 
 const Page = (props) => {
   let locale            =   props.locale;
   let validations       =   new WDYWTDTValidator(Object.assign(props.cardAction, {locale}), props.validations);
-  let onSubmit          =   handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          =   handlers.navigateOrShowErrors('wdywtdt', props, validations);
   let onBack            =   handlers.navigateOnBack(props, validations);
 
   return (
@@ -29,14 +29,16 @@ const Page = (props) => {
 
 function mapStateToProps(state) {
   return {
+    currentCardInfo:  getCorrectApp(state.application).currentCard,
     cardAction:       getActionFromState(state),
     cardType:         state.application.cardType,
+    seniorID:         state.application.IDApp.seniorID,
     dateOfBirth:      state.application.basics.dateOfBirth,
+    licenseAndIdHistory:  state.application.history.licenseAndIdHistory,
     focused:          state.ui.focus,
     validations:      state.ui.validations,
-    addApp:           state.ui.addApp,
-    currentCardInfo:  getCorrectApp(state.application).currentCard,
-    locale:           state.ui.locale
+    locale:           state.ui.locale,
+    flow:             state.ui.flow
   };
 };
 
diff --git a/client/containers/my-basics/address-page.jsx b/client/containers/my-basics/address-page.jsx
index ead53eb4..74a555f0 100644
--- a/client/containers/my-basics/address-page.jsx
+++ b/client/containers/my-basics/address-page.jsx
@@ -36,7 +36,8 @@ function mapStateToProps(state) {
     focused       : state.ui.focus,
     validations   : state.ui.validations,
     cardType      : state.application.cardType,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-basics/physical-traits-form-container.jsx b/client/containers/my-basics/physical-traits-form-container.jsx
index 4b212079..bd6659e0 100644
--- a/client/containers/my-basics/physical-traits-form-container.jsx
+++ b/client/containers/my-basics/physical-traits-form-container.jsx
@@ -26,10 +26,11 @@ const Page = (props) => {
 
 function mapStateToProps(state) {
   return {
-    physicalTraits: state.application.basics.physicalTraits,
-    focused:        state.ui.focus,
-    validations:    state.ui.validations,
-    locale:         state.ui.locale
+    physicalTraits  : state.application.basics.physicalTraits,
+    focused         : state.ui.focus,
+    validations     : state.ui.validations,
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-basics/routes.jsx b/client/containers/my-basics/routes.jsx
index 65e575be..9e8917c8 100644
--- a/client/containers/my-basics/routes.jsx
+++ b/client/containers/my-basics/routes.jsx
@@ -2,7 +2,10 @@
 
 import React                                  from 'react';
 import { Route }                              from 'react-router-dom';
-import { iddlPath }                           from '../../helpers/alice-path';
+import {
+  iddlPath,
+  editPath
+} from '../../helpers/alice-path';
 import Address                                from './address-page.jsx';
 import TraitsHeightWeight                     from './traits-height-weight-form-container.jsx';
 import PhysicalTraits                         from './physical-traits-form-container.jsx';
@@ -11,10 +14,17 @@ import SocialSecurity                         from './social-security-form-conta
 const MyBasicsRoutes = () => {
   return (
     <div>
-      <Route path={ iddlPath('/my-basics/address') }          component={Address} />
-      <Route path={ iddlPath('/my-basics/traits-height-weight')} component={TraitsHeightWeight} />
-      <Route path={ iddlPath('/my-basics/physical-traits') }  component={PhysicalTraits} />
-      <Route path={ iddlPath('/my-basics/social-security' ) } component={SocialSecurity} />
+      <Route path={ iddlPath('/my-basics/address') }                component={Address}  />
+      <Route path={ editPath('/my-basics/address') }                component={Address}  />
+
+      <Route path={ iddlPath('/my-basics/traits-height-weight')}    component={TraitsHeightWeight} />
+      <Route path={ editPath('/my-basics/traits-height-weight')}    component={TraitsHeightWeight} />
+
+      <Route path={ iddlPath('/my-basics/physical-traits') }        component={PhysicalTraits} />
+      <Route path={ editPath('/my-basics/physical-traits') }        component={PhysicalTraits} />
+
+      <Route path={ iddlPath('/my-basics/social-security' ) }       component={SocialSecurity} />
+      <Route path={ editPath('/my-basics/social-security' ) }       component={SocialSecurity} />
     </div>
   );
 };
diff --git a/client/containers/my-basics/social-security-form-container.jsx b/client/containers/my-basics/social-security-form-container.jsx
index f93c69ae..d7004d4f 100644
--- a/client/containers/my-basics/social-security-form-container.jsx
+++ b/client/containers/my-basics/social-security-form-container.jsx
@@ -12,7 +12,7 @@ const Page = (props) => {
   let locale            =   props.locale;
   let validations       =   new SSNValidator(Object.assign(props.socialSecurity, {locale}), props.validations);
   let onSubmit          =   handlers.navigateOrShowErrors('socialSecurity', props, validations);
-  let onBack            =   handlers.navigateOnBack(props);
+  let onBack            =   handlers.navigateOnBack(props, validations);
 
   return (
     <Presentation
@@ -32,7 +32,8 @@ const mapStateToProps = (state) => {
     DLApp         : state.application.DLApp,
     focused       : state.ui.focus,
     validations   : state.ui.validations,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-basics/traits-height-weight-form-container.jsx b/client/containers/my-basics/traits-height-weight-form-container.jsx
index 7c679cc1..2db02d97 100644
--- a/client/containers/my-basics/traits-height-weight-form-container.jsx
+++ b/client/containers/my-basics/traits-height-weight-form-container.jsx
@@ -27,10 +27,11 @@ const Page = (props) => {
 
 function mapStateToProps(state) {
   return {
-    traitsHeightWeight: state.application.basics.traitsHeightWeight,
-    focused:            state.ui.focus,
-    validations:        state.ui.validations,
-    locale:             state.ui.locale
+    traitsHeightWeight  : state.application.basics.traitsHeightWeight,
+    focused             : state.ui.focus,
+    validations         : state.ui.validations,
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-history/card-history-page.jsx b/client/containers/my-history/card-history-page.jsx
index 08298cd3..23a5baf0 100644
--- a/client/containers/my-history/card-history-page.jsx
+++ b/client/containers/my-history/card-history-page.jsx
@@ -11,7 +11,7 @@ import Presentation                   from '../../presentations/my-history/card-
 const Page = (props) => {
   let locale            = props.locale;
   let validations       = new LicenseHistoryValidator(Object.assign(props.licenseAndIdHistory, {locale}), props.validations);
-  let onSubmit          = handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          = handlers.navigateOrShowErrors('cardHistory', props, validations);
   let onBack            = handlers.navigateOnBack(props, validations);
 
   return (
@@ -30,7 +30,8 @@ function mapStateToProps(state) {
     cardType            : state.application.cardType,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-history/license-issues-form-container.jsx b/client/containers/my-history/license-issues-form-container.jsx
index 38128252..763fdccd 100644
--- a/client/containers/my-history/license-issues-form-container.jsx
+++ b/client/containers/my-history/license-issues-form-container.jsx
@@ -10,7 +10,7 @@ import Presentation             from '../../presentations/my-history/license-iss
 const Page = (props) => {
   let locale            = props.locale;
   let validations       = new LicenseIssuesValidator(Object.assign(props.licenseIssues, {locale}), props.validations);
-  let onSubmit          = handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          = handlers.navigateOrShowErrors('licenseIssues', props, validations);
   let onBack            = handlers.navigateOnBack(props, validations);
 
   return (
@@ -28,7 +28,8 @@ function mapStateToProps(state) {
     licenseIssues   : state.application.history.licenseIssues,
     focused         : state.ui.focus,
     validations     : state.ui.validations,
-    locale          : state.ui.locale
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-history/medical-history-form-container.jsx b/client/containers/my-history/medical-history-form-container.jsx
index 385c65db..8f0e6d40 100644
--- a/client/containers/my-history/medical-history-form-container.jsx
+++ b/client/containers/my-history/medical-history-form-container.jsx
@@ -11,7 +11,7 @@ import { MedicalValidator }       from '../../helpers/validations';
 const Page = (props) => {
   let locale            = props.locale;
   let validations       = new MedicalValidator(Object.assign(props.medicalHistory, {locale}), props.validations, 'selectionMissing');
-  let onSubmit          = handlers.navigateOrShowErrors(props.addressName, props, validations);
+  let onSubmit          = handlers.navigateOrShowErrors('medicalHistory', props, validations);
   let onBack            = handlers.navigateOnBack(props, validations);
 
   return (
@@ -28,11 +28,11 @@ function mapStateToProps(state) {
   return {
     medicalHistory    : state.application.history.medicalHistory,
     cardAction        : state.application.cardAction,
-    IDApp             : state.application.IDApp,
     DLApp             : state.application.DLApp,
     focused           : state.ui.focus,
     validations       : state.ui.validations,
-    locale            : state.ui.locale
+    locale            : state.ui.locale,
+    flow              : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-history/names-history-form-container.jsx b/client/containers/my-history/names-history-form-container.jsx
index 4175eb8d..08b5c7e8 100644
--- a/client/containers/my-history/names-history-form-container.jsx
+++ b/client/containers/my-history/names-history-form-container.jsx
@@ -26,12 +26,12 @@ const Page = (props) => {
 function mapStateToProps(state) {
   return {
     namesHistory: state.application.history.namesHistory,
-    IDApp       : state.application.IDApp,
-    DLApp       : state.application.DLApp,
     cardType    : state.application.cardType,
     focused     : state.ui.focus,
     validations : state.ui.validations,
-    locale      : state.ui.locale
+    licenseAndIdHistory:  state.application.history.licenseAndIdHistory,
+    locale      : state.ui.locale,
+    flow        : state.ui.flow
   };
 };
 
diff --git a/client/containers/my-history/routes.jsx b/client/containers/my-history/routes.jsx
index 6beb05e2..d5d42071 100644
--- a/client/containers/my-history/routes.jsx
+++ b/client/containers/my-history/routes.jsx
@@ -2,23 +2,41 @@
 
 import React                                  from 'react';
 import { Route }                              from 'react-router-dom';
-import { iddlPath }                           from '../../helpers/alice-path';
+
 import MedicalHistory                         from './medical-history-form-container.jsx';
 import CardHistory                            from './card-history-page.jsx';
 import NamesHistory                           from './names-history-form-container.jsx';
 import LicenseIssues                          from './license-issues-form-container.jsx';
 import VeteransService                        from './veterans-service-form-container.jsx';
 
+import {
+  iddlPath,
+  editPath,
+  addPath
+}      from '../../helpers/alice-path';
+
 const MyHistoryRoutes = () => {
   return (
     <div>
-      <Route path={ iddlPath('/my-history/medical' ) }        exact render={(props) => <MedicalHistory {...props} addressName='medicalHistory' />} />
-      <Route path={ iddlPath('/my-history/license-and-id')}   exact render={(props) => <CardHistory {...props} addressName='cardHistory' />} />
-      <Route path={ iddlPath('/my-history/names' ) }          component={NamesHistory} />
-      <Route path={ iddlPath('/my-history/license-issues')}   exact render={(props) => <LicenseIssues {...props} addressName='licenseIssues' />} />
-      <Route path={ iddlPath('/my-history/veterans-service')} component={VeteransService} />
+      <Route path={ iddlPath('/my-history/medical-history' ) }        component={MedicalHistory} />
+      <Route path={ editPath('/my-history/medical-history' ) }        component={MedicalHistory} />
+      <Route path={ addPath('/my-history/medical-history' ) }         component={MedicalHistory} />
+
+      <Route path={ iddlPath('/my-history/license-and-id')}           component={CardHistory} />
+      <Route path={ editPath('/my-history/license-and-id')}           component={CardHistory} />
+      <Route path={ addPath('/my-history/license-and-id')}            component={CardHistory} />
+
+      <Route path={ iddlPath('/my-history/names' ) }                  component={NamesHistory} />
+      <Route path={ editPath('/my-history/names' ) }                  component={NamesHistory} />
+
+      <Route path={ iddlPath('/my-history/license-issues')}           component={LicenseIssues} />
+      <Route path={ editPath('/my-history/license-issues')}           component={LicenseIssues} />
+      <Route path={ addPath('/my-history/license-issues')}            component={LicenseIssues} />
+
+      <Route path={ iddlPath('/my-history/veterans-service')}         component={VeteransService}   />
+      <Route path={ editPath('/my-history/veterans-service')}         component={VeteransService}   />
     </div>
-    );
+  );
 };
 
 export default MyHistoryRoutes;
\ No newline at end of file
diff --git a/client/containers/my-history/veterans-service-form-container.jsx b/client/containers/my-history/veterans-service-form-container.jsx
index 2a3178f7..78cc5cb5 100644
--- a/client/containers/my-history/veterans-service-form-container.jsx
+++ b/client/containers/my-history/veterans-service-form-container.jsx
@@ -33,7 +33,8 @@ function mapStateToProps(state) {
     cardType        : state.application.cardType,
     focused         : state.ui.focus,
     validations     : state.ui.validations,
-    locale          : state.ui.locale
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/organ-donation/organ-donation-form-container.jsx b/client/containers/organ-donation/organ-donation-form-container.jsx
index 4129b652..4735da60 100644
--- a/client/containers/organ-donation/organ-donation-form-container.jsx
+++ b/client/containers/organ-donation/organ-donation-form-container.jsx
@@ -29,11 +29,12 @@ const Page = (props) => {
 
 function mapStateToProps(state) {
   return {
-    organDonation:  state.application.organDonation,
-    dateOfBirth:    state.application.basics.dateOfBirth,
-    focused:        state.ui.focus,
-    validations:    state.ui.validations,
-    locale:         state.ui.locale
+    organDonation   : state.application.organDonation,
+    dateOfBirth     : state.application.basics.dateOfBirth,
+    focused         : state.ui.focus,
+    validations     : state.ui.validations,
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/organ-donation/routes.jsx b/client/containers/organ-donation/routes.jsx
new file mode 100644
index 00000000..53f64fe0
--- /dev/null
+++ b/client/containers/organ-donation/routes.jsx
@@ -0,0 +1,21 @@
+'use strict';
+
+import React                                  from 'react';
+import { Route }                              from 'react-router-dom';
+import OrganDonation                          from './organ-donation-form-container.jsx';
+
+import {
+  iddlPath,
+  editPath
+}      from '../../helpers/alice-path';
+
+const MyHistoryRoutes = () => {
+  return (
+    <div>
+      <Route path={ iddlPath('/organ-donation' ) }     component = {OrganDonation}  />
+      <Route path={ editPath('/organ-donation' ) }     component = {OrganDonation}  />
+    </div>
+    );
+};
+
+export default MyHistoryRoutes;
\ No newline at end of file
diff --git a/client/containers/page-summary-link.jsx b/client/containers/page-summary-link.jsx
new file mode 100644
index 00000000..70cb4e90
--- /dev/null
+++ b/client/containers/page-summary-link.jsx
@@ -0,0 +1,26 @@
+'use strict'
+
+import React              from 'react';
+import { connect }        from 'react-redux';
+import handlers           from '../helpers/handlers';
+import Presentation       from '../presentations/page-summary-link.jsx';
+
+const PageSummaryLink = (props) => {
+  return (
+    <Presentation
+      {...props}
+    />
+  )
+};
+
+const mapStateToProps = (state) => {
+  return state;
+};
+const mapDispatchToProps = (dispatch) => {
+  const onFlowChange     = handlers.onFlowChange(dispatch);
+  return {
+    onFlowChange
+  }
+};
+
+export default connect(mapStateToProps, mapDispatchToProps)(PageSummaryLink);
\ No newline at end of file
diff --git a/client/containers/page.jsx b/client/containers/page.jsx
index ec7116db..c8eed4fd 100644
--- a/client/containers/page.jsx
+++ b/client/containers/page.jsx
@@ -5,12 +5,11 @@ import { connect } from 'react-redux';
 
 import Presentation             from '../presentations/page.jsx';
 import handlers                 from '../helpers/handlers';
-import { getTextFromPathname }  from '../helpers/data/pathnames';
+import { getTextFromState }     from '../helpers/data/pathnames';
 
 const Page = (props) => {
-  let sectionKey = getTextFromPathname(props, props.sectionKey, '');
+  let sectionKey = getTextFromState(props, props.sectionKey, '');
   props.onPageLoad(sectionKey, props.section);
-  props.onFlowChange(props);
 
   return (
     <Presentation {...props} />
@@ -20,19 +19,17 @@ const Page = (props) => {
 const mapStateToProps = (state) => {
   return {
     cardType:       state.application.cardType,
+    appType:        state.ui.appType,
     section:        state.ui.section,
-    addApp:         state.ui.addApp,
     locale:         state.ui.locale
   };
 }
 
 const mapDispatchToProps = (dispatch) => {
   const onPageLoad            = handlers.onPageLoad(dispatch);
-  const onFlowChange          = handlers.onFlowChange(dispatch);
   const onLocaleChange        = handlers.onLocaleChange(dispatch);
   return {
     onPageLoad,
-    onFlowChange,
     onLocaleChange
   };
 };
diff --git a/client/containers/routes.jsx b/client/containers/routes.jsx
index 862d40c9..c53cd261 100644
--- a/client/containers/routes.jsx
+++ b/client/containers/routes.jsx
@@ -3,35 +3,19 @@
 import React                                  from 'react';
 import { Route }                              from 'react-router-dom';
 import { pathForPage }                        from '../helpers/navigation/page';
-import {
-  alicePath,
-  iddlPath,
-  addPath,
-  cdlPath
-}   from '../helpers/alice-path';
+import { alicePath }                          from '../helpers/alice-path';
 
 import Home                                   from '../presentations/home.jsx';
 import ChooseLanguage                         from './get-started/choose-language-page.jsx';
 import ChooseApplication                      from './get-started/choose-application-page.jsx';
-
 import IDMe                                   from './get-started/id-me-page.jsx';
-import WhatDoYouWantToDoToday                 from './get-started/what-do-you-want-to-do-today-page.jsx';
-import ReplacementDetails                     from './get-started/replacement-details-page.jsx';
-import CurrentCardInfo                        from './get-started/current-card-page.jsx';
-import UpdatesCorrects                        from './get-started/correct-or-update-page.jsx';
-import OrganDonation                          from './organ-donation/organ-donation-form-container.jsx';
-import SeniorID                               from './get-started/senior-id-page.jsx';
-import LicenseType                            from './get-started/license-type-page.jsx';
-import ReducedFee                             from './get-started/reduced-fee-page.jsx';
-import MedicalHistory                         from './my-history/medical-history-form-container.jsx';
-import CardHistory                            from './my-history/card-history-page.jsx';
-import LicenseIssues                          from './my-history/license-issues-form-container.jsx';
 
 import GetStartedRoutes                       from './get-started/routes.jsx';
 import MyBasicsRoutes                         from './my-basics/routes.jsx';
 import MyHistoryRoutes                        from './my-history/routes.jsx';
 import VotingRoutes                           from './voter-registration/routes.jsx';
 import ConclusionRoutes                       from './conclusion/routes.jsx';
+import OrganDonationRoutes                    from './organ-donation/routes.jsx';
 import CDLRoutes                              from './cdl/routes.jsx';
 
 
@@ -52,27 +36,9 @@ class Router extends React.Component {
         <GetStartedRoutes />
         <MyBasicsRoutes />
         <MyHistoryRoutes />
-
-        <Route path={ iddlPath('/organ-donation' ) }            component={OrganDonation} />
-
         <VotingRoutes />
+        <OrganDonationRoutes />
         <ConclusionRoutes />
-
-        <Route path={ addPath('/driver-license') }                      exact render={(props) => <WhatDoYouWantToDoToday {...props} addressName='addWdywtdt' />}/>
-        <Route path={ addPath('/driver-license/current-card-information') } exact render={(props) => <CurrentCardInfo {...props} addressName='addCurrentCardInfo' />}/>
-        <Route path={ addPath('/driver-license/updates-and-corrections') } exact render={(props) => <UpdatesCorrects {...props} addressName='addUpdateCorrect' />}/>
-        <Route path={ addPath('/driver-license/replacement-details') }  exact render={(props) => <ReplacementDetails {...props} addressName='addReplacementDetails' />}/>
-        <Route path={ addPath('/driver-license/type') }                 exact render={(props) => <LicenseType {...props} addressName='addLicenseClass' />} />
-        <Route path={ addPath('/driver-license/medical-history') }      exact render={(props) => <MedicalHistory {...props} addressName='addMedicalHistory' />} />
-        <Route path={ addPath('/driver-license/license-history') }      exact render={(props) => <CardHistory {...props} addressName='addLicenseHistory'/> } />
-        <Route path={ addPath('/driver-license/issue-history') }        exact render={(props) => <LicenseIssues {...props} addressName='addIssueHistory' />} />
-
-        <Route path={ addPath('/id-card') }                             exact render={(props) => <WhatDoYouWantToDoToday {...props} addressName='addIDWdywtdt' />}/>
-        <Route path={ addPath('/id-card/current-card-information')}     exact render={(props) => <CurrentCardInfo {...props} addressName='addCurrentIDInfo' />} />
-        <Route path={ addPath('/id-card/updates-and-corrections') }     exact render={(props) => <UpdatesCorrects {...props} addressName='addCorrectUpdateID' />} />
-        <Route path={ addPath('/id-card/replacement-details') }         exact render={(props) => <ReplacementDetails {...props} addressName='addIDReplacementDetails' />} />
-        <Route path={ addPath('/id-card/senior-id') }                   exact render={(props) => <SeniorID {...props} addressName='addSeniorID' />} />
-        <Route path={ addPath('/id-card/reduced-fee') }                 exact render={(props) => <ReducedFee {...props} addressName='addReducedFee' />} />
       </div>
     );
   }
diff --git a/client/containers/voter-registration/ballot-by-mail-form-container.jsx b/client/containers/voter-registration/ballot-by-mail-form-container.jsx
index 3956f5e6..c9487365 100644
--- a/client/containers/voter-registration/ballot-by-mail-form-container.jsx
+++ b/client/containers/voter-registration/ballot-by-mail-form-container.jsx
@@ -27,11 +27,12 @@ const Page = (props) => {
 
 const mapStateToProps = (state) => {
   return {
-    ballotByMail: state.application.voting.ballotByMail,
-    dateOfBirth:  state.application.basics.dateOfBirth,
-    focused:      state.ui.focus,
-    validations:  state.ui.validations,
-    locale:       state.ui.locale
+    ballotByMail  : state.application.voting.ballotByMail,
+    dateOfBirth   : state.application.basics.dateOfBirth,
+    focused       : state.ui.focus,
+    validations   : state.ui.validations,
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/ballot-language-form-container.jsx b/client/containers/voter-registration/ballot-language-form-container.jsx
index 3fdef65d..953520a6 100644
--- a/client/containers/voter-registration/ballot-language-form-container.jsx
+++ b/client/containers/voter-registration/ballot-language-form-container.jsx
@@ -32,7 +32,8 @@ const mapStateToProps = (state) => {
     dateOfBirth     : state.application.basics.dateOfBirth,
     focused         : state.ui.focus,
     validations     : state.ui.validations,
-    locale          : state.ui.locale
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/choose-party-form-container.jsx b/client/containers/voter-registration/choose-party-form-container.jsx
index 4e579870..31062184 100644
--- a/client/containers/voter-registration/choose-party-form-container.jsx
+++ b/client/containers/voter-registration/choose-party-form-container.jsx
@@ -30,7 +30,8 @@ const mapStateToProps = (state) => {
     dateOfBirth         : state.application.basics.dateOfBirth,
     focused             : state.ui.focus,
     validations         : state.ui.validations,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/citizen-status-form-container.jsx b/client/containers/voter-registration/citizen-status-form-container.jsx
index 9bd94fc0..8dc208b8 100644
--- a/client/containers/voter-registration/citizen-status-form-container.jsx
+++ b/client/containers/voter-registration/citizen-status-form-container.jsx
@@ -31,7 +31,8 @@ const mapStateToProps = (state) => {
     cardAction          : state.application.cardAction,
     dateOfBirth         : state.application.basics.dateOfBirth,
     focused             : state.ui.focus,
-    locale              : state.ui.locale
+    locale              : state.ui.locale,
+    flow                : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/contact-methods-form-container.jsx b/client/containers/voter-registration/contact-methods-form-container.jsx
index bf7a6a58..92a01a2c 100644
--- a/client/containers/voter-registration/contact-methods-form-container.jsx
+++ b/client/containers/voter-registration/contact-methods-form-container.jsx
@@ -29,7 +29,8 @@ const mapStateToProps = (state) => {
     dateOfBirth     : state.application.basics.dateOfBirth,
     focused         : state.ui.focus,
     validations     : state.ui.validations,
-    locale          : state.ui.locale
+    locale          : state.ui.locale,
+    flow            : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/eligibility-requirements-form-container.jsx b/client/containers/voter-registration/eligibility-requirements-form-container.jsx
index 633955f4..83fd5eee 100644
--- a/client/containers/voter-registration/eligibility-requirements-form-container.jsx
+++ b/client/containers/voter-registration/eligibility-requirements-form-container.jsx
@@ -28,7 +28,8 @@ const mapStateToProps = (state) => {
     eligibilityRequirements : state.application.voting.eligibilityRequirements,
     dateOfBirth             : state.application.basics.dateOfBirth,
     focused                 : state.ui.focus,
-    locale                  : state.ui.locale
+    locale                  : state.ui.locale,
+    flow                    : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/opt-out-form-container.jsx b/client/containers/voter-registration/opt-out-form-container.jsx
index dc9ec0e1..2e5cbe07 100644
--- a/client/containers/voter-registration/opt-out-form-container.jsx
+++ b/client/containers/voter-registration/opt-out-form-container.jsx
@@ -31,7 +31,8 @@ const mapStateToProps = (state) => {
     dateOfBirth   : state.application.basics.dateOfBirth,
     focused       : state.ui.focus,
     validations   : state.ui.validations,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/routes.jsx b/client/containers/voter-registration/routes.jsx
index fea4ad06..071588a1 100644
--- a/client/containers/voter-registration/routes.jsx
+++ b/client/containers/voter-registration/routes.jsx
@@ -2,7 +2,10 @@
 
 import React                                  from 'react';
 import { Route }                              from 'react-router-dom';
-import { iddlPath }                           from '../../helpers/alice-path';
+import {
+  iddlPath,
+  editPath
+} from '../../helpers/alice-path';
 import VoterCitizenStatus                     from './citizen-status-form-container.jsx';
 import EligibilityRequirements                from './eligibility-requirements-form-container.jsx';
 import OptOut                                 from './opt-out-form-container.jsx';
@@ -18,14 +21,32 @@ const VotingRoutes = () => {
   return (
     <div>
       <Route path={ iddlPath('/voting-registration/citizenship') }          component={VoterCitizenStatus} />
+      <Route path={ editPath('/voting-registration/citizenship') }          component={VoterCitizenStatus} />
+
       <Route path={ iddlPath('/voting-registration/eligibility') }          component={EligibilityRequirements} />
+      <Route path={ editPath('/voting-registration/eligibility') }          component={EligibilityRequirements} />
+
       <Route path={ iddlPath('/voting-registration/opt-out') }              component={OptOut} />
+      <Route path={ editPath('/voting-registration/opt-out') }              component={OptOut} />
+
       <Route path={ iddlPath('/voting-registration/preferences') }          component={VoterPreferencesIntro} />
+      <Route path={ editPath('/voting-registration/preferences') }          component={VoterPreferencesIntro} />
+
       <Route path={ iddlPath('/voting-registration/preferences-updated') }  component={VoterPreferencesIntroUpdated} />
+      <Route path={ editPath('/voting-registration/preferences-updated') }  component={VoterPreferencesIntroUpdated} />
+
       <Route path={ iddlPath('/voting-registration/choose-party') }         component={PoliticalPartyChoose} />
+      <Route path={ editPath('/voting-registration/choose-party') }         component={PoliticalPartyChoose} />
+
       <Route path={ iddlPath('/voting-registration/language') }             component={BallotLanguage} />
+      <Route path={ editPath('/voting-registration/language') }             component={BallotLanguage} />
+
       <Route path={ iddlPath('/voting-registration/vote-by-mail') }         component={BallotByMail} />
+      <Route path={ editPath('/voting-registration/vote-by-mail') }         component={BallotByMail} />
+
       <Route path={ iddlPath('/voting-registration/contact-methods') }      component={ContactMethods} />
+      <Route path={ editPath('/voting-registration/contact-methods') }      component={ContactMethods} />
+
       <Route path={ iddlPath('/voting-registration/confirmation') }         component={VoterRegComplete} />
     </div>
     );
diff --git a/client/containers/voter-registration/voter-confirmation-form-container.jsx b/client/containers/voter-registration/voter-confirmation-form-container.jsx
index a0980f68..15182851 100644
--- a/client/containers/voter-registration/voter-confirmation-form-container.jsx
+++ b/client/containers/voter-registration/voter-confirmation-form-container.jsx
@@ -22,7 +22,8 @@ const mapStateToProps = (state) => {
   return {
     dateOfBirth : state.application.basics.dateOfBirth,
     focused     : state.ui.focus,
-    locale      : state.ui.locale
+    locale      : state.ui.locale,
+    flow        : state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/voter-preferences-form-container.jsx b/client/containers/voter-registration/voter-preferences-form-container.jsx
index 0a5d80a9..a40769bd 100644
--- a/client/containers/voter-registration/voter-preferences-form-container.jsx
+++ b/client/containers/voter-registration/voter-preferences-form-container.jsx
@@ -24,7 +24,8 @@ const mapStateToProps = (state) => {
     optOut:       state.application.voting.optOut,
     dateOfBirth:  state.application.basics.dateOfBirth,
     focused:      state.ui.focus,
-    locale:       state.ui.locale
+    locale:       state.ui.locale,
+    flow:         state.ui.flow
   };
 };
 
diff --git a/client/containers/voter-registration/voter-preferences-updated-form-container.jsx b/client/containers/voter-registration/voter-preferences-updated-form-container.jsx
index c59d2c9f..cbda456b 100644
--- a/client/containers/voter-registration/voter-preferences-updated-form-container.jsx
+++ b/client/containers/voter-registration/voter-preferences-updated-form-container.jsx
@@ -23,7 +23,8 @@ const mapStateToProps = (state) => {
     dateOfBirth   : state.application.basics.dateOfBirth,
     optOut        : state.application.voting.optOut,
     focused       : state.ui.focus,
-    locale        : state.ui.locale
+    locale        : state.ui.locale,
+    flow          : state.ui.flow
   };
 };
 
diff --git a/client/helpers/alice-path.js b/client/helpers/alice-path.js
index 74577316..407fe9ce 100644
--- a/client/helpers/alice-path.js
+++ b/client/helpers/alice-path.js
@@ -12,6 +12,17 @@ export const iddlPath = (path) => {
   return alicePath(`/id-and-license${path}`);
 };
 
+export const editPath = (path) => {
+  let editPath = `/edit${path}`;
+  return `${iddlPath(editPath)}`;
+};
+
 export const addPath = (path) => {
-  return `/add${path}`;
-};
\ No newline at end of file
+  let addPath = `/add${path}`;
+  return `${iddlPath(addPath)}`;
+};
+
+export const editCDLPath = (path) => {
+  let editPath = `/edit${path}`;
+  return `${cdlPath(editPath)}`;
+};
diff --git a/client/helpers/data/card-actions.js b/client/helpers/data/card-actions.js
index 9850b085..87230f73 100644
--- a/client/helpers/data/card-actions.js
+++ b/client/helpers/data/card-actions.js
@@ -68,4 +68,4 @@ export const getStringByAction = (props, newString, renew, replace, change, upda
   } else {
     return correct || change;
   }
-};
\ No newline at end of file
+};
diff --git a/client/helpers/data/card-type.js b/client/helpers/data/card-type.js
index 12c16d08..d589e387 100644
--- a/client/helpers/data/card-type.js
+++ b/client/helpers/data/card-type.js
@@ -3,14 +3,7 @@
 import {
   hasMultipleCards
 } from './cards';
-import {
-  isGettingNew,
-  isChangingCard,
-  isReplacingCard,
-  isRenewingCard,
-  hasActionIsCorrecting,
-  hasActionIsUpdating
-} from './card-actions';
+
 import { noCardTypeArray }  from './cdl';
 import { hasValue }         from './validations';
 
@@ -117,4 +110,4 @@ export const getCorrectApp = (state) => {
     app = state.IDApp;
   }
   return app;
-};
\ No newline at end of file
+};
diff --git a/client/helpers/data/cdl.js b/client/helpers/data/cdl.js
index fd644a09..b62ec578 100644
--- a/client/helpers/data/cdl.js
+++ b/client/helpers/data/cdl.js
@@ -6,8 +6,8 @@ import * as dataPresent     from '../data-present';
 import  translations        from '../../i18n';
 
 export const showCDLUnder21 = (props) => {
-  return props.hasOwnProperty('addApp') &&
-    cdlApp(props.addApp) &&
+  return props.hasOwnProperty('chooseApp') &&
+    cdlApp(props.chooseApp) &&
     dataPresent.date(props.dateOfBirth) &&
     ageChecks.Under21(props.dateOfBirth);
 };
diff --git a/client/helpers/data/pathnames.js b/client/helpers/data/pathnames.js
index 8924185f..bf7c2d4c 100644
--- a/client/helpers/data/pathnames.js
+++ b/client/helpers/data/pathnames.js
@@ -1,73 +1,117 @@
 'use strict';
+import { pageFor }          from '../navigation/page';
+import { hasExistingCard }  from './card-actions';
+import * as dataPresent     from '../data-present';
+import {
+  getDL
+} from './card-type';
+import {
+  addPath,
+  editPath,
+  iddlPath,
+  cdlPath,
+  editCDLPath
+} from '../alice-path';
 
-
-export const onIDFlow = (props) => {
-  return props.location.pathname.startsWith('/add/id-card');
+export const getTextFromState = (props, iddlText, altText) => {
+  let text = iddlText;
+  if (altFlow(props)) {
+    text = altText;
+  }
+  return text;
 };
 
-export const getTextFromState = (props, iddlText, addText) => {
-  if (props.hasOwnProperty('addApp') && addingApp(props.addApp)) {
-    return addText;
+
+export const getActionFromState = (state) => {
+  let key = state.application.cardAction;
+  if (altFlow(state.ui)) {
+    key = state.application.IDApp.action;
+    if (getDL(state.application)) {
+      key = state.application.DLApp.action;
+    }
   }
-  return iddlText;
+  return key;
 };
 
-export const getTextFromPathname = (props, initialFlow, addDLFlow, addIDFlow) => {
-  if (!props.hasOwnProperty('location')) { return initialFlow; }
-  let value = splitPathname(props.location.pathname);
-  if (driverLicense(value)) {
-    return addDLFlow;
-  } else if (idCard(value)) {
-    return addIDFlow;
+export const cdlApp = (value) => {
+  return value === 'cdl';
+};
+
+const IDDLApp = (value) => {
+  return value === 'iddl';
+};
+
+export const hasChosenApp = (props) => {
+  return cdlApp(props.chooseApp) || IDDLApp(props.chooseApp);
+};
+
+export const editMode = (props) => {
+  let page = pageFor(props.addressName);
+  let key = false;
+  if (page && page.hasOwnProperty('validateFromSummary') && page.validateFromSummary) {
+    key = true;
   }
-  return initialFlow;
+  return key;
 };
 
-export const splitPathname = (pathname) => {
-  return pathname.split('/')[2];
+export const addOrEdit = (props, addText, editText) => {
+  return (props.hasOwnProperty('add') && props.add) ? addText : editText;
 };
 
-export const addingApp = (value) => {
-  return driverLicense(value) || idCard(value);
+export const altFlow = (props) => {
+  return editFlow(props) || addFlow(props);
 };
 
-export const driverLicense = (value) => {
-  return value === 'driver-license';
+export const addFlow = (props) => {
+  return props.flow === 'add';
 };
 
-export const idCard = (value) => {
-  return value === 'id-card';
+export const editFlow = (props) => {
+  return props.flow === 'edit';
 };
 
-export const cdlApp = (value) => {
-  return value === 'cdl';
+export const goToCardHistory = (props) => {
+  return !hasExistingCard(props) && !dataPresent.licenseAndIdHistory(props.licenseAndIdHistory);
 };
 
-const IDDLApp = (value) => {
-  return value === 'iddl';
+export function nextOrSummary(nextKey){
+  return (props) => {
+    if (altFlow(props)) {
+      return 'summary';
+    } else {
+      return nextKey;
+    }
+  };
 };
 
-export const hasChosenApp = (props) => {
-  return cdlApp(props.chooseApp) || IDDLApp(props.chooseApp);
+export function nextOrCDLSummary(nextKey){
+  return (props) => {
+    if (editFlow(props)) {
+      return 'cdlSummary';
+    } else {
+      return nextKey;
+    }
+  };
 };
 
-export const getActionFromState = (state) => {
-  let key = state.application.cardAction;
-  if (driverLicense(state.ui.addApp)) {
-    key = state.application.DLApp.action;
-  } else if (idCard(state.ui.addApp)) {
-    key = state.application.IDApp.action;
-  }
-  return key;
-}
-
-export const goToSummary = (props) => {
-  let returnToSummary = false;
-  if (props.location.state){
-    if (props.location.state.nextAddress === 'summary' ||
-      props.location.state.nextAddress === 'cdlSummary' ) {
-        returnToSummary = true;
-      }
+export function applyEditOrAddPath(url){
+  return (props) => {
+    let urlPath = iddlPath(url);
+    if (addFlow(props)) {
+      urlPath = addPath(url);
+    } else if (editFlow(props)) {
+      urlPath = editPath(url);
+    }
+    return urlPath;
+  };
+};
+
+export function applyOrEditCDLPath(url) {
+  return (props) => {
+    let urlPath = cdlPath(url);
+    if (editFlow(props)) {
+      urlPath = editCDLPath(url);
+    }
+    return urlPath;
   }
-  return returnToSummary;
 };
diff --git a/client/helpers/data/senior.js b/client/helpers/data/senior.js
index 998f87ee..3d7cb7d3 100644
--- a/client/helpers/data/senior.js
+++ b/client/helpers/data/senior.js
@@ -9,5 +9,5 @@ export const eligibleForSeniorID = (props) => {
 };
 
 export const gettingSeniorID = (props) => {
-  return props.IDApp.seniorID === 'Yes';
+  return props.seniorID === 'Yes';
 };
diff --git a/client/helpers/handlers/navigate-on-back.js b/client/helpers/handlers/navigate-on-back.js
index 04b0a548..42cdd960 100644
--- a/client/helpers/handlers/navigate-on-back.js
+++ b/client/helpers/handlers/navigate-on-back.js
@@ -1,8 +1,8 @@
 'use strict';
-import { goToSummary }    from '../data/pathnames';
+import { editMode }    from '../data/pathnames';
 
 const normalFlowOrValid = (props, validator) => {
-  if (goToSummary(props)) {
+  if (editMode(props)) {
     return (props.onSubmitShowErrors && validator && validator.isValid());
   } else {
     return true;
diff --git a/client/helpers/handlers/on-flow-change.js b/client/helpers/handlers/on-flow-change.js
index 9e6d4e7f..bd44640a 100644
--- a/client/helpers/handlers/on-flow-change.js
+++ b/client/helpers/handlers/on-flow-change.js
@@ -1,18 +1,21 @@
 'use strict';
-
-import { addApp }           from '../../actions';
+import { hasValue }       from '../data/validations';
 import {
-  splitPathname,
-  addingApp
- }    from '../data/pathnames';
-
+  addApp,
+  updateCardType,
+  updateCardAction
+ } from '../../actions';
 
 export default (dispatch) =>  {
-  return (props) => {
-    if (!props.hasOwnProperty('location')){ return; }
+  return (flow, cardType) => {
+    dispatch(addApp(flow));
+
+    if (flow === 'add') {
+      dispatch(updateCardAction('newFlow', ''));
+    }
 
-    let value = splitPathname(props.location.pathname);
-    if (value === props.addApp ) { return; }
-    dispatch(addApp(value));
+    if (hasValue(cardType)) {
+      dispatch(updateCardType('addFromSummary', cardType));
+    }
   };
 };
\ No newline at end of file
diff --git a/client/helpers/merge-props.js b/client/helpers/merge-props.js
index ab7a5ef9..c3f1eff6 100644
--- a/client/helpers/merge-props.js
+++ b/client/helpers/merge-props.js
@@ -6,13 +6,13 @@ import * as onSubmitDispatches    from './on-submit-dispatches';
 export const mergePropsGenerator = (mapStateToProps, action, onSubmitFunction, form) => {
 
   let mapDispatchToProps = (dispatch) => {
-    const onChange = handlers.onInputChange(action, dispatch);
-    const onSubmit = handlers.onFormSubmit(dispatch);
-    const onBlur   = handlers.onBlur(dispatch);
-    const onFocus  = handlers.onFocus(dispatch);
-    const onBlurValidate = handlers.onBlurValidate(dispatch);
-    const onFocusClearValidation = handlers.onFocusClearValidation(dispatch);
-    const onSubmitShowErrors = handlers.onSubmitShowErrors(dispatch);
+    const onChange                = handlers.onInputChange(action, dispatch);
+    const onSubmit                = handlers.onFormSubmit(dispatch);
+    const onBlur                  = handlers.onBlur(dispatch);
+    const onFocus                 = handlers.onFocus(dispatch);
+    const onBlurValidate          = handlers.onBlurValidate(dispatch);
+    const onFocusClearValidation  = handlers.onFocusClearValidation(dispatch);
+    const onSubmitShowErrors      = handlers.onSubmitShowErrors(dispatch);
 
     return {
       onSubmit,
diff --git a/client/helpers/navigation/cdl/basics/pages.js b/client/helpers/navigation/cdl/basics/pages.js
index 4bdc7b81..2e61730f 100644
--- a/client/helpers/navigation/cdl/basics/pages.js
+++ b/client/helpers/navigation/cdl/basics/pages.js
@@ -1,29 +1,33 @@
 'use strict';
+import {
+  nextOrCDLSummary,
+  applyOrEditCDLPath
+} from '../../../data/pathnames';
 
 const myBasics = [
   {
     key: 'cdlLegalName',
     description: 'Legal Name',
-    path: '/true-name',
-    next: 'cdlDateOfBirth'
+    path: applyOrEditCDLPath('/true-name'),
+    next: nextOrCDLSummary('cdlDateOfBirth')
   },
   {
     key: 'cdlDateOfBirth',
     description: 'Date of Birth',
-    path: '/date-of-birth',
-    next: 'cdlWdywtdt'
+    path: applyOrEditCDLPath('/date-of-birth'),
+    next: nextOrCDLSummary('cdlWdywtdt')
   },
   {
     key: 'cdlSexEyeHair',
     description: 'Physical Traits',
-    path: '/physical-traits',
-    next: 'cdlHeightWeight'
+    path: applyOrEditCDLPath('/physical-traits'),
+    next: nextOrCDLSummary('cdlHeightWeight')
   },
   {
     key: 'cdlHeightWeight',
     description: 'Height and Weight',
-    path: '/traits-height-weight',
-    next: 'cdlCertification'
+    path: applyOrEditCDLPath('/traits-height-weight'),
+    next: nextOrCDLSummary('cdlCertification')
   }
 ];
 
diff --git a/client/helpers/navigation/cdl/conclusion/pages.js b/client/helpers/navigation/cdl/conclusion/pages.js
index 06530003..17530f2c 100644
--- a/client/helpers/navigation/cdl/conclusion/pages.js
+++ b/client/helpers/navigation/cdl/conclusion/pages.js
@@ -5,7 +5,7 @@ const conclusion = [
     key: 'cdlSummary',
     description: 'summary of CDL app',
     path: '/summary',
-    next: ''
+    next: 'cdlSummary'
   }
 ];
 
diff --git a/client/helpers/navigation/cdl/get-started/next-path.js b/client/helpers/navigation/cdl/get-started/next-path.js
index 6051790a..44aba193 100644
--- a/client/helpers/navigation/cdl/get-started/next-path.js
+++ b/client/helpers/navigation/cdl/get-started/next-path.js
@@ -1,16 +1,30 @@
 'use strict';
-
+import { editFlow }   from '../../../data/pathnames';
+import { hasValue }   from '../../../data/validations';
 import {
   hasExistingCard,
+  showCurrentCardInfo,
   isChangingCard,
   isReplacingCard
 }    from '../../../data/card-actions';
 
 export const cdlWdywtdt = (props) => {
   let key = 'cdlResidency';
-  if (hasExistingCard(props)) {
+
+  if (showCurrentCardInfo(props)) {
     key = 'cdlCurrentCard';
   }
+  else if(editFlow(props)) {
+    if (isChangingCard(props)) {
+      key = 'cdlChanges';
+    } else if (isReplacingCard(props)) {
+      key = 'cdlCardReplacement';
+    } else if (!hasExistingCard(props)) {
+      key = 'cdlCurrentDL';
+    } else {
+      key = 'cdlSummary';
+    }
+  }
   return key;
 };
 
@@ -19,23 +33,48 @@ export const cdlCurrentCard = (props) => {
   if (isChangingCard(props)) {
     key = 'cdlChanges';
   }
-  if (isReplacingCard(props)) {
+  else if (isReplacingCard(props)) {
     key = 'cdlCardReplacement';
   }
+  else if (editFlow(props)){
+    key = 'cdlSummary';
+  }
   return key;
 };
 
-export const cdlSSN = (props) => {
+export const changedCDL = (props) => {
+  let key = 'cdlResidency';
+  if (editFlow(props)) {
+    key = 'cdlSummary';
+  }
+  return key;
+};
+
+export const cdlCurrentDL = (props) => {
   let key = 'cdlRealID';
-  if (!hasExistingCard(props)) {
-    key = 'cdlCurrentDL';
+  if (editFlow(props)){
+    key = 'cdlSummary';
+    if (!hasValue(props.classM)) {
+      key = 'motorcycle';
+    }
+  }
+  return key;
+};
+
+export const cdlSSN = (props) => {
+  let key = 'cdlSummary';
+  if (!editFlow(props)) {
+    key = 'cdlRealID';
+    if (!hasExistingCard(props)) {
+      key = 'cdlCurrentDL';
+    }
   }
   return key;
 };
 
 export const cdlCertification = (props) => {
   let key = 'cdlSummary';
-  if (!hasExistingCard(props)) {
+  if (!editFlow(props) && !hasExistingCard(props)) {
     key = 'motorcycle';
   }
   return key;
diff --git a/client/helpers/navigation/cdl/get-started/pages.js b/client/helpers/navigation/cdl/get-started/pages.js
index e9884f4b..e080d4b2 100644
--- a/client/helpers/navigation/cdl/get-started/pages.js
+++ b/client/helpers/navigation/cdl/get-started/pages.js
@@ -1,8 +1,14 @@
 'use strict';
+import {
+  nextOrCDLSummary,
+  applyOrEditCDLPath
+} from '../../../data/pathnames';
 
 import {
   cdlWdywtdt,
   cdlCurrentCard,
+  changedCDL,
+  cdlCurrentDL,
   cdlSSN,
   cdlCertification
 } from './next-path';
@@ -11,86 +17,86 @@ const cdlGetStarted = [
   {
     key: 'cdlWdywtdt',
     description: 'What do you want to do today',
-    path: '/what-do-you-want-to-do-today',
+    path: applyOrEditCDLPath('/what-do-you-want-to-do-today'),
     next: cdlWdywtdt
   },
   {
     key: 'cdlCurrentCard',
     description: 'Current CDL info',
-    path: '/current-card-information',
+    path: applyOrEditCDLPath('/current-card-information'),
     next: cdlCurrentCard
   },
   {
     key: 'cdlCardReplacement',
     description: 'CDL Replacement Details',
-    path: '/replacement-details',
-    next: 'cdlResidency'
+    path: applyOrEditCDLPath('/replacement-details'),
+    next: changedCDL
   },
   {
     key: 'cdlChanges',
     description: 'make updates and corrections',
-    path: '/change-details',
-    next: 'cdlResidency'
+    path: applyOrEditCDLPath('/change-details'),
+    next: changedCDL
   },
   {
     key: 'cdlResidency',
     description: 'California residency',
-    path: '/california-residency',
-    next: 'cdlSocialSecurity'
+    path: applyOrEditCDLPath('/california-residency'),
+    next: nextOrCDLSummary('cdlSocialSecurity')
   },
   {
     key: 'cdlSocialSecurity',
     description: 'Social Security',
-    path: '/social-security',
+    path: applyOrEditCDLPath('/social-security'),
     next: cdlSSN
   },
   {
     key: 'cdlCurrentDL',
     description: 'current DL info',
-    path: '/current-ca-license',
-    next: 'cdlRealID'
+    path: applyOrEditCDLPath('/current-ca-license'),
+    next: cdlCurrentDL
   },
   {
     key: 'cdlRealID',
     description: 'realID',
-    path: '/real-id',
-    next: 'cdlClass'
+    path: applyOrEditCDLPath('/real-id'),
+    next: nextOrCDLSummary('cdlClass')
   },
   {
     key: 'cdlClass',
     description: 'CDL class',
-    path: '/license-class',
-    next: 'cdlEndorsements'
+    path: applyOrEditCDLPath('/license-class'),
+    next: nextOrCDLSummary('cdlEndorsements')
   },
   {
     key: 'cdlEndorsements',
     description: 'CDL Endorsements',
-    path: '/endorsements',
-    next: 'cdlCertificates'
+    path: applyOrEditCDLPath('/endorsements'),
+    next: nextOrCDLSummary('cdlCertificates')
   },
   {
     key: 'cdlCertificates',
     description: 'CDL Certificates',
-    path: '/certificates',
+    path: applyOrEditCDLPath('/certificates'),
     next: ''
   },
   {
     key: 'cdlCertification',
     description: 'self-certification inter/intra-state',
-    path: '/self-certification',
+    path: applyOrEditCDLPath('/self-certification'),
     next: cdlCertification
   },
   {
     key: 'motorcycle',
     description: 'add classM to cdl',
-    path: '/motorcycle',
+    path: applyOrEditCDLPath('/motorcycle'),
     next: '' //next will go to get started overview page
   },
   {
     key: 'cdlOrganDonation',
     description: 'organ donation',
-    path: '/organ-donation',
-    next: ''
+    path: applyOrEditCDLPath('/organ-donation'),
+    next: 'cdlSummary'
   }
 ];
 
diff --git a/client/helpers/navigation/cdl/my-history/pages.js b/client/helpers/navigation/cdl/my-history/pages.js
index cd4a3842..5c3e7302 100644
--- a/client/helpers/navigation/cdl/my-history/pages.js
+++ b/client/helpers/navigation/cdl/my-history/pages.js
@@ -1,29 +1,33 @@
 'use strict';
+import {
+  nextOrCDLSummary,
+  applyOrEditCDLPath
+} from '../../../data/pathnames';
 
 const cdlHistory = [
   {
     key: 'cdlMedical',
     description: 'medical history',
-    path: '/my-history/medical',
-    next: 'cdlNamesHistory'
+    path: applyOrEditCDLPath('/my-history/medical'),
+    next: nextOrCDLSummary('cdlNameHistory')
   },
   {
-    key: 'cdlNamesHistory',
+    key: 'cdlNameHistory',
     description: 'Names History',
-    path: '/my-history/names',
-    next: 'cdlLicenseIssues'
+    path: applyOrEditCDLPath('/my-history/names'),
+    next: nextOrCDLSummary('cdlLicenseIssues')
   },
   {
     key: 'cdlLicenseIssues',
     description: 'License Issues',
-    path: '/my-history/issues',
-    next: 'cdlOtherStateLicenses'
+    path: applyOrEditCDLPath('/my-history/issues'),
+    next: nextOrCDLSummary('cdlOtherStateLicenses')
   },
   {
     key: 'cdlOtherStateLicenses',
     description: 'Other State Licenses',
-    path: '/my-history/other-state-licenses',
-    next: 'organDonation'
+    path: applyOrEditCDLPath('/my-history/other-state-licenses'),
+    next: nextOrCDLSummary('organDonation')
   }
 ];
 
diff --git a/client/helpers/navigation/cdl/voter-registration/next-path.js b/client/helpers/navigation/cdl/voter-registration/next-path.js
index 7368595c..c0f68746 100644
--- a/client/helpers/navigation/cdl/voter-registration/next-path.js
+++ b/client/helpers/navigation/cdl/voter-registration/next-path.js
@@ -6,15 +6,15 @@ import {
 } from '../../../data/voting';
 
 export const citizenship = (props) => {
-  let key = 'summary';
+  let key = 'cdlSummary';
   if (eligibleForCitizen(props)) {
     key = 'cdlVotingEligibility';
-  } 
+  }
   return key;
 };
 
 export const votingEligibility = (props) => {
-  let key = 'summary';
+  let key = 'cdlSummary';
   if (eligibilityRequirementsYes(props)) {
     key = 'cdlVotingOptOut';
   }
diff --git a/client/helpers/navigation/cdl/voter-registration/pages.js b/client/helpers/navigation/cdl/voter-registration/pages.js
index 5e222319..5458784b 100644
--- a/client/helpers/navigation/cdl/voter-registration/pages.js
+++ b/client/helpers/navigation/cdl/voter-registration/pages.js
@@ -1,5 +1,7 @@
 'use strict';
-
+import {
+  applyOrEditCDLPath
+} from '../../../data/pathnames';
 import {
   citizenship,
   votingEligibility,
@@ -10,19 +12,19 @@ const cdlVoterRegistration = [
   {
     key: 'cdlCitizenship',
     description: 'Citizenship',
-    path: '/voting-registration/citizenship',
+    path: applyOrEditCDLPath('/voting-registration/citizenship'),
     next: citizenship
   },
   {
     key: 'cdlVotingEligibility',
     description: 'Eligibility ',
-    path: '/voting-registration/eligibility',
+    path: applyOrEditCDLPath('/voting-registration/eligibility'),
     next: votingEligibility
   },
   {
     key: 'cdlVotingOptOut',
     description: 'Opt out',
-    path: '/voting-registration/opt-out',
+    path: applyOrEditCDLPath('/voting-registration/opt-out'),
     next: ''
   }
 ];
diff --git a/client/helpers/navigation/id-dl/add-dl/next-path.js b/client/helpers/navigation/id-dl/add-dl/next-path.js
deleted file mode 100644
index ece553b5..00000000
--- a/client/helpers/navigation/id-dl/add-dl/next-path.js
+++ /dev/null
@@ -1,38 +0,0 @@
-'use strict';
-
-import {
-  hasExistingCard,
-  showCurrentCardInfo,
-  isChangingCard,
-  isReplacingCard
-}    from '../../../data/card-actions';
-
-export const addWdywtdt = (props) => {
-  let key = 'addLicenseClass';
-  if (showCurrentCardInfo(props)) {
-    key = 'addCurrentCardInfo';
-  } else if (isChangingCard(props)) {
-    key = 'addUpdateCorrect';
-  } else if (isReplacingCard(props)) {
-    key = 'addReplacementDetails'
-  }
-  return key;
-};
-
-export const addCurrentCardInfo = (props) => {
-  let key = 'addLicenseClass';
-  if (isChangingCard(props)) {
-    key = 'addUpdateCorrect';
-  } else if (isReplacingCard(props)) {
-    key = 'addReplacementDetails';
-  }
-  return key;
-};
-
-export const addMedicalHistory = (props) => {
-  let key = 'addLicenseHistory';
-  if (hasExistingCard(props)) {
-    key = 'addIssueHistory';
-  }
-  return key;
-};
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/add-dl/pages.js b/client/helpers/navigation/id-dl/add-dl/pages.js
deleted file mode 100644
index bdc0965d..00000000
--- a/client/helpers/navigation/id-dl/add-dl/pages.js
+++ /dev/null
@@ -1,65 +0,0 @@
-'use strict';
-import {
-  addWdywtdt,
-  addCurrentCardInfo,
-  addMedicalHistory
-} from './next-path';
-
-const addCard = [
-  {
-    key: 'addWdywtdt',
-    description: 'what do you want to do with added card',
-    path: '/driver-license',
-    next: addWdywtdt
-  },
-  {
-    key: 'addCurrentCardInfo',
-    description: 'add current card info',
-    path: '/driver-license/current-card-information',
-    next: addCurrentCardInfo
-  },
-  {
-    key: 'addUpdateCorrect',
-    description: 'specify update and correction for added DL',
-    path: '/driver-license/updates-and-corrections',
-    next: 'addLicenseClass'
-  },
-  {
-    key: 'addReplacementDetails',
-    description: 'specify replacement details for added DL',
-    path: '/driver-license/replacement-details',
-    next: 'addLicenseClass'
-  },
-  {
-    key: 'addLicenseClass',
-    description: 'choose license class for added card',
-    path: '/driver-license/type',
-    next: 'addMedicalHistory'
-  },
-  {
-    key: 'addMedicalHistory',
-    description: 'add medical history for added card',
-    path: '/driver-license/medical-history',
-    next: addMedicalHistory
-  },
-  {
-    key: 'addLicenseHistory',
-    description: 'add license history for added card',
-    path: '/driver-license/license-history',
-    next: 'addIssueHistory'
-  },
-  {
-    key: 'addIssueHistory',
-    description: 'add issue history for added card',
-    path: '/driver-license/issue-history',
-    next: 'summary'
-  },
-  {
-    key: 'addDLRealID',
-    description: 'add real ID to DL',
-    path: '/driver-license/real-id',
-    next: 'summary'
-  }
-];
-
-export default addCard;
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/add-id/next-path.js b/client/helpers/navigation/id-dl/add-id/next-path.js
deleted file mode 100644
index 1a198592..00000000
--- a/client/helpers/navigation/id-dl/add-id/next-path.js
+++ /dev/null
@@ -1,58 +0,0 @@
-'use strict';
-import {
-  showCurrentCardInfo,
-  isChangingCard,
-  isReplacingCard
-} from '../../../data/card-actions';
-
-import {
-  eligibleForSeniorID,
-  gettingSeniorID
-}    from '../../../data/senior';
-
-export const addIDWdywtdt = (props) => {
-  let key = 'addReducedFee';
-  if (showCurrentCardInfo(props)) {
-    key = 'addCurrentIDInfo';
-  }
-  else if (isChangingCard(props)) {
-    key = 'addCorrectUpdateID';
-  }
-  else if (isReplacingCard(props)) {
-    key = 'addIDReplacementDetails'
-  }
-  else if (eligibleForSeniorID(props)){
-    key = 'addSeniorID';
-  }
-  return key;
-};
-
-export const addCurrentIDInfo = (props) => {
-  let key = 'addReducedFee';
-  if (isChangingCard(props)) {
-    key = 'addCorrectUpdateID';
-  } else if (isReplacingCard(props)) {
-    key = 'addIDReplacementDetails';
-  }
-  else if (eligibleForSeniorID(props)){
-    key = 'addSeniorID';
-  }
-  return key;
-};
-
-export const addChangedID = (props) => {
-  let key = 'addReducedFee';
-  if(eligibleForSeniorID(props)) {
-    key = 'addSeniorID';
-  }
-  return key;
-};
-
-export const addSeniorID = (props) => {
-  let key = 'addReducedFee';
-
-  if (gettingSeniorID(props)) {
-    key = 'summary';
-  }
-  return key;
-};
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/add-id/pages.js b/client/helpers/navigation/id-dl/add-id/pages.js
deleted file mode 100644
index 23517192..00000000
--- a/client/helpers/navigation/id-dl/add-id/pages.js
+++ /dev/null
@@ -1,54 +0,0 @@
-'use strict';
-import {
-  addIDWdywtdt,
-  addCurrentIDInfo,
-  addChangedID,
-  addSeniorID
-} from './next-path';
-
-const addIDCard = [
-  {
-    key: 'addIDWdywtdt',
-    description: 'what do you want to do with added ID card',
-    path: '/id-card',
-    next: addIDWdywtdt
-  },
-  {
-    key: 'addCurrentIDInfo',
-    description: 'add current ID info',
-    path: '/id-card/current-card-information',
-    next: addCurrentIDInfo
-  },
-  {
-    key: 'addCorrectUpdateID',
-    description: 'correct/update info for added ID',
-    path: '/id-card/updates-and-corrections',
-    next: addChangedID
-  },
-  {
-    key: 'addIDReplacementDetails',
-    description: 'add replacement details to added ID',
-    path: '/id-card/replacement-details',
-    next: addChangedID
-  },
-  {
-    key: 'addSeniorID',
-    description: 'get senior ID on added ID card',
-    path: '/id-card/senior-id',
-    next: addSeniorID
-  },
-  {
-    key: 'addReducedFee',
-    description: 'add reduced fee to added ID card',
-    path: '/id-card/reduced-fee',
-    next: 'summary'
-  },
-  {
-    key: 'addIDRealID',
-    description: 'add real ID',
-    path: '/id-card/real-id',
-    next: 'summary'
-  }
-];
-
-export default addIDCard;
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/get-started/next-path.js b/client/helpers/navigation/id-dl/get-started/next-path.js
index b516c260..7a33283d 100644
--- a/client/helpers/navigation/id-dl/get-started/next-path.js
+++ b/client/helpers/navigation/id-dl/get-started/next-path.js
@@ -1,15 +1,75 @@
 'use strict';
-import { getDL }                  from '../../../data/card-type';
-import { eligibleForSeniorID }    from '../../../data/senior';
+import {
+  getDL,
+  getID
+} from '../../../data/card-type';
+import {
+  eligibleForSeniorID,
+  gettingSeniorID
+} from '../../../data/senior';
 import { tooYoungForDL }          from '../../../data/youth';
 import { eligibleForReducedFee }  from '../../../data/reduced-fee';
+import { hasValue }               from '../../../data/validations';
+import {
+  altFlow,
+  addFlow,
+  goToCardHistory,
+  editFlow
+} from '../../../data/pathnames';
 import {
   hasExistingCard,
   isChangingCard,
-  isReplacingCard
+  isReplacingCard,
+  showCurrentCardInfo
  } from '../../../data/card-actions';
 
 
+export const dateOfBirth = (props) => {
+  let key = 'wdywtdt';
+  if (editFlow(props)) {
+    key = 'summary';
+    if (tooYoungForDL(props) && getDL(props)) {
+      key = 'youthIDInstead';
+    } else if (eligibleForSeniorID(props)) {
+      key = 'seniorID';
+    }
+  }
+  return key;
+};
+
+export const wdywtdt = (props) => {
+  let key = 'chooseCardType';
+
+  if (altFlow(props)) {
+
+    if (showCurrentCardInfo(props)) {
+      key = 'currentCardInfo';
+    } else if (isChangingCard(props)) {
+      key = 'updateAndCorrect';
+    } else if (isReplacingCard(props)) {
+      key = 'replacementDetails';
+    }
+
+    else if (editFlow(props)) {
+      key = 'summary';
+      if (goToCardHistory(props)) {
+        key = 'cardHistory';
+      }
+    }
+    else if (addFlow(props)) {
+      key = 'chooseLicenseClass';
+      if (getID(props)) {
+        key = 'reducedFeeID';
+        if (eligibleForSeniorID(props)) {
+          key = 'seniorID';
+        }
+      }
+    }
+  }
+  return key;
+};
+
+
 export const chooseCardType = (props) => {
   let key = 'realID';
 
@@ -23,53 +83,100 @@ export const chooseCardType = (props) => {
   return key;
 };
 
+
 export const currentCardInfo = (props) => {
   let key = 'realID';
 
   if (isChangingCard(props)) {
-    key = 'updateAndCorrect'
+    key = 'updateAndCorrect';
   } else if (isReplacingCard(props)) {
-    key = 'replacementDetails'
-  } else if (eligibleForSeniorID(props)) {
+    key = 'replacementDetails';
+  } else if (!altFlow(props) && eligibleForSeniorID(props)) {
     key = 'seniorID';
   }
-  return key;
-};
 
-export const updateAndCorrect = (props) => {
-  let key = 'realID';
-  if (eligibleForSeniorID(props)) {
-    key = 'seniorID';
+  else if (addFlow(props)) {
+    key = 'reducedFeeID';
+    if (getDL(props)) {
+      key = 'chooseLicenseClass';
+    }
   }
+
+  else if (editFlow(props)) {
+    key = 'summary';
+    if (goToCardHistory(props)) {
+      key = 'cardHistory';
+    }
+  }
+
   return key;
 };
 
-export const replacementDetails = (props) => {
+
+export const changedCard = (props) => {
   let key = 'realID';
-  if (eligibleForSeniorID(props)) {
+  if (!altFlow(props) && eligibleForSeniorID(props)) {
     key = 'seniorID';
   }
+  else if (addFlow(props)){
+    key = 'chooseLicenseClass';
+    if (getID(props)) {
+      key = 'reducedFeeID';
+      if (eligibleForSeniorID(props)) {
+        key = 'seniorID';
+      }
+    }
+  }
+  else if (editFlow(props)) {
+    key = 'summary';
+    if (goToCardHistory(props)) {
+      key = 'cardHistory';
+    }
+  }
   return key;
 };
 
+
 export const realID = (props) => {
-  let key = 'getStarted';
+  let key = 'summary';
+  if (!altFlow(props)){
+    key = 'getStarted';
+    if (getDL(props)) {
+      key = 'chooseLicenseClass';
+    }
+    else if (eligibleForReducedFee(props)) {
+      key = 'reducedFeeID';
+    }
+  }
+  return key;
+};
 
-  if (getDL(props)) {
-    key = 'chooseLicenseClass';
-  } else if (eligibleForReducedFee(props)) {
+export const seniorID = (props) => {
+  let key = 'realID';
+  if (editFlow(props)) {
+    key = 'summary';
+    if (!gettingSeniorID(props) && !hasValue(props.reducedFee.ID)) {
+      key = 'reducedFeeID';
+    }
+  }
+  else if (addFlow(props)) {
     key = 'reducedFeeID';
-  };
-
+    if (gettingSeniorID(props)) {
+      key = 'summary';
+    }
+  }
   return key;
 };
 
 export const chooseLicenseClass = (props) => {
-  let key = 'getStarted';
-
-  if (eligibleForReducedFee(props)) {
-    key = 'reducedFeeID';
-  };
-
+  let key = 'summary';
+  if (!altFlow(props)) {
+    key = 'getStarted';
+    if (eligibleForReducedFee(props)) {
+      key = 'reducedFeeID';
+    }
+  } else if (addFlow(props) && getDL(props)) {
+    key = 'medicalHistory';
+  }
   return key;
-};
\ No newline at end of file
+};
diff --git a/client/helpers/navigation/id-dl/get-started/pages.js b/client/helpers/navigation/id-dl/get-started/pages.js
index b02240b8..6bd1718c 100644
--- a/client/helpers/navigation/id-dl/get-started/pages.js
+++ b/client/helpers/navigation/id-dl/get-started/pages.js
@@ -1,98 +1,110 @@
 'use strict';
-
 import {
+  nextOrSummary,
+  applyEditOrAddPath
+} from '../../../data/pathnames';
+import {
+  dateOfBirth,
+  wdywtdt,
   chooseCardType,
   currentCardInfo,
-  updateAndCorrect,
+  changedCard,
+  seniorID,
   realID,
-  chooseLicenseClass,
-  replacementDetails
+  chooseLicenseClass
 } from './next-path';
 
+
 const getStarted = [
   {
     key: 'welcome',
     description: 'Welcome',
     path: '/welcome',
-    next: 'legalName',
+    next: nextOrSummary('legalName')
   },
   {
     key: 'legalName',
     description: 'Legal name',
-    path: '/my-basics/legal-name',
-    next: 'dateOfBirth',
+    path: applyEditOrAddPath('/my-basics/legal-name'),
+    next: nextOrSummary('dateOfBirth'),
+    validateFromSummary: true
   },
   {
     key: 'dateOfBirth',
     description: 'Date of birth',
-    path: '/my-basics/date-of-birth',
-    next: 'wdywtdt'
+    path: applyEditOrAddPath('/my-basics/date-of-birth'),
+    next: dateOfBirth,
+    validateFromSummary: true
   },
   {
     key: 'wdywtdt',
     description: 'What do you want to do today?',
-    path: '/what-do-you-want-to-do-today',
-    next: 'chooseCardType'
+    path: applyEditOrAddPath('/what-do-you-want-to-do-today'),
+    next: wdywtdt,
+    validateFromSummary: true
   },
   {
     key: 'chooseCardType',
     description: 'Choose card type',
-    path: '/select-id-dl',
+    path: applyEditOrAddPath('/select-id-dl'),
     next: chooseCardType
   },
   {
     key: 'currentCardInfo',
     description: 'Current card info',
-    path: '/current-card-information',
+    path: applyEditOrAddPath('/current-card-information'),
     next: currentCardInfo
   },
   {
     key: 'updateAndCorrect',
     description: 'Updates and Corrections',
-    path: '/updates-and-corrections',
-    next: updateAndCorrect
+    path: applyEditOrAddPath('/updates-and-corrections'),
+    next: changedCard
   },
   {
     key: 'replacementDetails',
     description: 'Replacement Details',
-    path: '/replacement-details',
-    next: replacementDetails
+    path: applyEditOrAddPath('/replacement-details'),
+    next: changedCard
   },
   {
     key: 'youthIDInstead',
     description: 'Youth DL message',
-    path: '/youth-license-notification',
-    next: 'realID',
+    path: applyEditOrAddPath('/youth-license-notification'),
+    next: nextOrSummary('realID'),
   },
   {
     key: 'seniorID',
     description: 'Senior ID',
-    path: '/senior-id',
-    next: 'realID'
+    path: applyEditOrAddPath('/senior-id'),
+    next: seniorID,
+    validateFromSummary: true
   },
   {
     key: 'realID',
     description: 'Real ID',
-    path: '/real-id',
-    next: realID
+    path: applyEditOrAddPath('/real-id'),
+    next: realID,
+    validateFromSummary: true
   },
   {
     key: 'chooseLicenseClass',
     description: 'Choose license class',
-    path: '/license-type',
-    next: chooseLicenseClass
+    path: applyEditOrAddPath('/license-type'),
+    next: chooseLicenseClass,
+    validateFromSummary: true
   },
   {
     key: 'reducedFeeID',
     description: 'Reduced fee ID',
-    path: '/reduced-fee',
-    next: 'getStarted'
+    path: applyEditOrAddPath('/reduced-fee'),
+    next: nextOrSummary('getStarted')
   },
   {
     key: 'getStarted',
     description: 'Get started intro page',
     path: '/get-started',
-    next: 'addresses',
+    next: 'addresses'
   }
 ];
 
diff --git a/client/helpers/navigation/id-dl/my-basics/next-path.js b/client/helpers/navigation/id-dl/my-basics/next-path.js
index 26c3cf73..2fd12520 100644
--- a/client/helpers/navigation/id-dl/my-basics/next-path.js
+++ b/client/helpers/navigation/id-dl/my-basics/next-path.js
@@ -1,16 +1,20 @@
 'use strict';
+import { altFlow }  from '../../../data/pathnames';
 import {
   getDL,
   getNewID
 } from '../../../data/card-type';
 
 export const socialSecurity = (props) => {
-  let key = 'nameHistory';
-
-  if (getDL(props)) {
-    key = 'medicalHistory';
-  } else if (getNewID(props)) {
-    key = 'cardHistory';
+  let key = 'summary';
+  if (!altFlow(props)) {
+    key = 'nameHistory';
+    if (getDL(props)) {
+      key = 'medicalHistory';
+    } else if (getNewID(props)) {
+      key = 'cardHistory';
+    }
   }
+
   return key;
 };
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/my-basics/pages.js b/client/helpers/navigation/id-dl/my-basics/pages.js
index 56889123..b007b194 100644
--- a/client/helpers/navigation/id-dl/my-basics/pages.js
+++ b/client/helpers/navigation/id-dl/my-basics/pages.js
@@ -1,32 +1,39 @@
 'use strict';
-
-import { socialSecurity } from './next-path';
+import {
+  nextOrSummary,
+  applyEditOrAddPath
+} from '../../../data/pathnames';
+import { socialSecurity }   from './next-path';
 
 const myBasics = [
   {
     key: 'addresses',
     description: 'Addresses',
-    path: '/my-basics/address',
-    next: 'sexEyeHair'
+    path: applyEditOrAddPath('/my-basics/address'),
+    next: nextOrSummary('sexEyeHair'),
+    validateFromSummary: true
   },
   {
     key: 'sexEyeHair',
     description: 'Physical traits',
-    path: '/my-basics/physical-traits',
-    next: 'heightWeight'
+    path: applyEditOrAddPath('/my-basics/physical-traits'),
+    next: nextOrSummary('heightWeight'),
+    validateFromSummary: true
   },
   {
     key: 'heightWeight',
     description: 'Height and weight',
-    path: '/my-basics/traits-height-weight',
-    next: 'socialSecurity'
+    path: applyEditOrAddPath('/my-basics/traits-height-weight'),
+    next: nextOrSummary('socialSecurity'),
+    validateFromSummary: true
   },
   {
     key: 'socialSecurity',
     description: 'Social security',
-    path: '/my-basics/social-security',
-    next: socialSecurity
+    path: applyEditOrAddPath('/my-basics/social-security'),
+    next: socialSecurity,
+    validateFromSummary: true
   }
 ];
 
-export default myBasics
\ No newline at end of file
+export default myBasics;
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/my-history/next-path.js b/client/helpers/navigation/id-dl/my-history/next-path.js
index 74c26487..327e5c79 100644
--- a/client/helpers/navigation/id-dl/my-history/next-path.js
+++ b/client/helpers/navigation/id-dl/my-history/next-path.js
@@ -3,19 +3,51 @@ import {
   getDL,
   getNewDL
 } from '../../../data/card-type';
+import {
+  altFlow,
+  addFlow,
+  goToCardHistory
+} from '../../../data/pathnames';
+import {
+  hasExistingCard
+ } from '../../../data/card-actions';
+
+
+export const nameHistory = (props) => {
+  let key = 'summary';
+  if (!altFlow(props)) {
+    key = 'veterans';
+    if (getDL(props)) {
+      key = 'licenseIssues';
+    }
+  }
+  return key;
+};
 
 export const medicalHistory = (props) => {
-  let key = 'nameHistory';
-  if (getNewDL(props)) {
-    key = 'cardHistory';
+  let key = 'summary';
+  if (!altFlow(props)){
+    key = 'nameHistory';
+    if (getNewDL(props)) {
+      key = 'cardHistory';
+    }
+  }
+  else if (addFlow(props)){
+    if (hasExistingCard(props)) {
+      key = 'licenseIssues';
+    } else if (goToCardHistory(props)) {
+      key = 'cardHistory';
+    }
   }
   return key;
 };
 
-export const nameHistory = (props) => {
-  let key = 'veterans';
-  if (getDL(props)) {
+export const cardHistory = (props) => {
+  let key = 'summary';
+  if (!altFlow(props)) {
+    key = 'nameHistory';
+  } else if (addFlow(props) && getDL(props)) {
     key = 'licenseIssues';
-  }
+  };
   return key;
 };
\ No newline at end of file
diff --git a/client/helpers/navigation/id-dl/my-history/pages.js b/client/helpers/navigation/id-dl/my-history/pages.js
index 3d975ee8..80288457 100644
--- a/client/helpers/navigation/id-dl/my-history/pages.js
+++ b/client/helpers/navigation/id-dl/my-history/pages.js
@@ -1,40 +1,49 @@
 'use strict';
-
+import {
+  nextOrSummary,
+  applyEditOrAddPath
+} from '../../../data/pathnames';
 import {
   medicalHistory,
-  nameHistory
+  nameHistory,
+  cardHistory
 } from './next-path';
 
 const myHistory = [
   {
     key: 'medicalHistory',
     description: 'Medical history',
-    path: '/my-history/medical/',
-    next: medicalHistory
+    path: applyEditOrAddPath('/my-history/medical-history'),
+    next: medicalHistory,
+    validateFromSummary: true
   },
   {
     key: 'cardHistory',
     description: 'License and id history',
-    path: '/my-history/license-and-id',
-    next: 'nameHistory'
+    path: applyEditOrAddPath('/my-history/license-and-id'),
+    next: cardHistory,
+    validateFromSummary: true
   },
   {
     key: 'nameHistory',
     description: 'Names history',
-    path: '/my-history/names/',
-    next: nameHistory
+    path: applyEditOrAddPath('/my-history/names'),
+    next: nameHistory,
+    validateFromSummary: true
   },
   {
     key: 'licenseIssues',
     description: 'License issues',
-    path: '/my-history/license-issues',
-    next: 'veterans'
+    path: applyEditOrAddPath('/my-history/license-issues'),
+    next: nextOrSummary('veterans'),
+    validateFromSummary: true
   },
   {
     key: 'veterans',
     description: 'Veterans service',
-    path: '/my-history/veterans-service',
-    next: 'organDonation'
+    path: applyEditOrAddPath('/my-history/veterans-service'),
+    next: nextOrSummary('organDonation'),
+    validateFromSummary: true
   }
 ];
 
diff --git a/client/helpers/navigation/id-dl/organ-donation/next-path.js b/client/helpers/navigation/id-dl/organ-donation/next-path.js
index c793c460..62011a47 100644
--- a/client/helpers/navigation/id-dl/organ-donation/next-path.js
+++ b/client/helpers/navigation/id-dl/organ-donation/next-path.js
@@ -1,12 +1,15 @@
 'use strict';
-
+import { altFlow }                  from '../../../data/pathnames';
 import { under16GuardianSignature } from '../../../data/youth';
 
 export const organDonationPath = (props) => {
-  let key = 'citizenship';
-
-  if (under16GuardianSignature(props)) {
-    key = 'guardianSignature';
+  let key = 'summary';
+  if (!altFlow(props)) {
+    key = 'citizenship';
+    if (under16GuardianSignature(props)) {
+      key = 'guardianSignature';
+    }
   }
+
   return key;
 };
diff --git a/client/helpers/navigation/id-dl/organ-donation/pages.js b/client/helpers/navigation/id-dl/organ-donation/pages.js
index e2c7a31a..a65c9e79 100644
--- a/client/helpers/navigation/id-dl/organ-donation/pages.js
+++ b/client/helpers/navigation/id-dl/organ-donation/pages.js
@@ -1,12 +1,15 @@
 'use strict';
 
 import { organDonationPath }    from './next-path';
+import {
+  applyEditOrAddPath
+} from '../../../data/pathnames';
 
 const organDonation = [
   {
     key: 'organDonation',
     description: 'Organ donation',
-    path: '/organ-donation',
+    path: applyEditOrAddPath('/organ-donation'),
     next: organDonationPath
   }
 ];
diff --git a/client/helpers/navigation/id-dl/pages.js b/client/helpers/navigation/id-dl/pages.js
index d831cefd..e0d4cf8d 100644
--- a/client/helpers/navigation/id-dl/pages.js
+++ b/client/helpers/navigation/id-dl/pages.js
@@ -6,17 +6,20 @@ import myHistory          from './my-history/pages';
 import organDonation      from './organ-donation/pages';
 import voterRegistration  from './voter-registration/pages';
 import conclusion         from './conclusion/pages';
-import addID              from './add-id/pages';
-import addDL              from './add-dl/pages';
 
+const intro = [{
+  key: 'IDme',
+  description: 'IDme',
+  path: '/apply/sign-in',
+  next: 'IDme'
+}];
 
 export {
+  intro,
   getStarted,
   basics,
   myHistory,
   organDonation,
   voterRegistration,
-  conclusion,
-  addID,
-  addDL
+  conclusion
 };
diff --git a/client/helpers/navigation/id-dl/voter-registration/pages.js b/client/helpers/navigation/id-dl/voter-registration/pages.js
index a2ca7e64..d8514017 100644
--- a/client/helpers/navigation/id-dl/voter-registration/pages.js
+++ b/client/helpers/navigation/id-dl/voter-registration/pages.js
@@ -1,4 +1,8 @@
 'use strict';
+import {
+  nextOrSummary,
+  applyEditOrAddPath
+} from '../../../data/pathnames';
 
 import {
   citizenship,
@@ -10,61 +14,61 @@ const voterRegistration = [
   {
     key: 'citizenship',
     description: 'Citizenship',
-    path: '/voting-registration/citizenship',
+    path: applyEditOrAddPath('/voting-registration/citizenship'),
     next: citizenship
   },
   {
     key: 'votingEligibility',
     description: 'Eligibility ',
-    path: '/voting-registration/eligibility',
+    path: applyEditOrAddPath('/voting-registration/eligibility'),
     next: votingEligibility
   },
   {
     key: 'votingOptOut',
     description: 'Opt out',
-    path: '/voting-registration/opt-out',
+    path: applyEditOrAddPath('/voting-registration/opt-out'),
     next: optOut
   },
   {
     key: 'voterPreferences',
     description: 'Voter preferences',
-    path: '/voting-registration/preferences',
-    next: 'choosePoliticalParty'
+    path: applyEditOrAddPath('/voting-registration/preferences'),
+    next: nextOrSummary('choosePoliticalParty')
   },
   {
     key: 'voterPreferencesUpdated',
     description: 'Voter preferences updated',
-    path: '/voting-registration/preferences-updated',
-    next: 'choosePoliticalParty'
+    path: applyEditOrAddPath('/voting-registration/preferences-updated'),
+    next: nextOrSummary('choosePoliticalParty')
   },
   {
     key: 'choosePoliticalParty',
     description: 'Choose party',
-    path: '/voting-registration/choose-party',
-    next: 'chooseBallotLanguage'
+    path: applyEditOrAddPath('/voting-registration/choose-party'),
+    next: nextOrSummary('chooseBallotLanguage')
   },
   {
     key: 'chooseBallotLanguage',
     description: 'Ballot language',
-    path: '/voting-registration/language',
-    next: 'ballotByMail'
+    path: applyEditOrAddPath('/voting-registration/language'),
+    next: nextOrSummary('ballotByMail')
   },
   {
     key: 'ballotByMail',
     description: 'Ballot by mail',
-    path: '/voting-registration/vote-by-mail',
-    next: 'contactMethods'
+    path: applyEditOrAddPath('/voting-registration/vote-by-mail'),
+    next: nextOrSummary('contactMethods')
   },
   {
     key: 'contactMethods',
     description: 'Contact methods',
-    path: '/voting-registration/contact-methods',
-    next: 'voterConfirmation'
+    path: applyEditOrAddPath('/voting-registration/contact-methods'),
+    next: nextOrSummary('voterConfirmation')
   },
   {
     key: 'voterConfirmation',
     description: 'Voter registration confirmation',
-    path: '/voting-registration/confirmation',
+    path: applyEditOrAddPath('/voting-registration/confirmation'),
     next: 'summary'
   }
 ];
diff --git a/client/helpers/navigation/page.js b/client/helpers/navigation/page.js
index 43d354b1..12982c5b 100644
--- a/client/helpers/navigation/page.js
+++ b/client/helpers/navigation/page.js
@@ -1,7 +1,6 @@
 'use strict';
 
 import sections         from './pages';
-import { goToSummary }  from '../data/pathnames';
 
 const all = Object.keys(sections).reduce((keyedObject, sectionName) => {
   let section = sections[sectionName];
@@ -11,6 +10,7 @@ const all = Object.keys(sections).reduce((keyedObject, sectionName) => {
       keyedObject[object.key] = object;
     });
   });
+
   return keyedObject;
 }, {});
 
@@ -18,20 +18,21 @@ export const pageFor = (name) => {
   return all[name];
 };
 
-export const pathForPage = (name) => {
-  return pageFor(name).path;
+export const pathForPage = (name, props) => {
+  let pathUrl = pageFor(name).path;
+  if (typeof(pathUrl) !== 'string') {
+    pathUrl = pathUrl(props);
+  }
+  return pathUrl;
 };
 
 export const nextPath = (name, props) => {
-  if (props.hasOwnProperty('location') && goToSummary(props)) {
-    return pageFor(props.location.state.nextAddress).path;
-  }
-
   let page = pageFor(name);
   let nextKey = page.next;
+
   if (typeof(nextKey) !== 'string') {
     nextKey = nextKey(props);
   }
   let nextPage = pageFor(nextKey);
-  return nextPage.path;
+  return pathForPage(nextKey, props);
 };
diff --git a/client/helpers/navigation/pages.js b/client/helpers/navigation/pages.js
index f7185fb3..a112252c 100644
--- a/client/helpers/navigation/pages.js
+++ b/client/helpers/navigation/pages.js
@@ -2,7 +2,6 @@
 import {
   alicePath,
   iddlPath,
-  addPath,
   cdlPath
 } from '../alice-path';
 import shared               from './intro/pages';
@@ -11,7 +10,10 @@ import * as cdl             from './cdl/pages';
 
 const expand = (collection, action) => {
   return collection.map((item) => {
-    let path = action(item.path);
+    let path = item.path;
+    if (typeof(item.path) === 'string') {
+      path = action(item.path);
+    }
     return Object.assign({}, item, {path: path});
   });
 };
@@ -26,9 +28,7 @@ export default {
     myHistory         : expand(iddl.myHistory, iddlPath),
     organDonation     : expand(iddl.organDonation, iddlPath),
     voterRegistration : expand(iddl.voterRegistration, iddlPath),
-    conclusion        : expand(iddl.conclusion, iddlPath),
-    addID             : expand(iddl.addID, addPath),
-    addDL             : expand(iddl.addDL, addPath)
+    conclusion        : expand(iddl.conclusion, iddlPath)
   },
   cdl                 : {
     getStarted        : expand(cdl.getStarted, cdlPath),
diff --git a/client/helpers/reducers.js b/client/helpers/reducers.js
index 2c697464..a48117a7 100644
--- a/client/helpers/reducers.js
+++ b/client/helpers/reducers.js
@@ -5,8 +5,23 @@ import { TYPES } from '../actions';
 export const cardTypeAction = (action) => {
   return action.type === TYPES.UPDATE_CARD_TYPE ||
     action.type === TYPES.UPDATE_CARD_ACTION ||
-    action.type === TYPES.UPDATE_YOUTH_ID_INSTEAD ||
-    action.type === TYPES.ADD_APP;
+    action.type === TYPES.UPDATE_YOUTH_ID_INSTEAD
+};
+
+export const trueIfYesNeverFalse = (value, type, state) => {
+  if (value === type) {
+    return true;
+  } else {
+    return state;
+  }
+};
+
+export const sameIfAdding = (name, state) => {
+  let newState = false;
+  if (name === 'IDAction' || name === 'DLAction') {
+    newState = state;
+  }
+  return newState;
 };
 
 export const addressReducer = (payload, data, defaultState) => {
diff --git a/client/presentations/cdl/summary/cdl-action.jsx b/client/presentations/cdl/summary/cdl-action.jsx
index d07be501..f2c2078d 100644
--- a/client/presentations/cdl/summary/cdl-action.jsx
+++ b/client/presentations/cdl/summary/cdl-action.jsx
@@ -1,7 +1,7 @@
 'use strict';
 
-import React            from 'react';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import React                from 'react';
+import PageSummaryLink      from '../../../containers/page-summary-link.jsx';
 import {
   New,
   Renew,
@@ -24,8 +24,7 @@ const CdlAction = (props) => {
 
   return (
     <PageSummaryLink
-      name    = 'cdlWdywtdt'
-      summary = 'cdlSummary'
+      {...props}
     >
       <New        showIf = {isGettingNew(props)}    locale={locale}/>
       <Renew      showIf = {isRenewingCard(props)}  locale={locale}/>
diff --git a/client/presentations/cdl/summary/cdl-app.jsx b/client/presentations/cdl/summary/cdl-app.jsx
index cc2d55f5..e3f1ccb7 100644
--- a/client/presentations/cdl/summary/cdl-app.jsx
+++ b/client/presentations/cdl/summary/cdl-app.jsx
@@ -15,17 +15,18 @@ import CDLCertificates      from './certificates.jsx';
 const CDLApp = (props) => {
   let cdl         = props.cdl;
   let locale      = props.ui.locale;
+
   return (
     <Accordion id='cdl-summary' title='My commercial driver license'>
       <CdlAction
         cardAction  = { cdl.cardAction }
         cardChanges = { cdl.cardChanges }
         locale      = { locale }
+        editKey     = 'cdlWdywtdt'
       />
       <RealID
         realID      = { cdl.realID }
-        summary     = 'cdlSummary'
-        name        = 'cdlRealID'
+        editKey     = 'cdlRealID'
         locale      = { locale }
         title       = 'Real ID:'
         showIf      = { hasValue(cdl.realID) }
@@ -33,28 +34,31 @@ const CDLApp = (props) => {
       <LicenseClass
         licenseClass      = { cdl.licenseClass }
         locale            = { locale }
+        editKey           = 'cdlClass'
       />
       <CurrentCardInfo
         currentCardInfo   = { cdl.currentCardInfo }
         locale            = { locale }
-        summary           = 'cdlSummary'
-        editKey           = 'cdlCurrentCard'
         title             = 'CDL number:'
+        editKey           = 'cdlCurrentCard'
       />
       <Motorcycle
         classM            = { cdl.classM }
         locale            = { locale }
         title             = 'Motorcycle on CDL'
+        editKey           = 'motorcycle'
       />
       <CDLEndorsements
         cdlEndorsements   = { cdl.cdlEndorsements }
         locale            = { locale }
         title             = 'Endorsement(s)'
+        editKey           = 'cdlEndorsements'
         />
       <CDLCertificates
         cdlCertificates   = { cdl.cdlCertificates }
         locale            = { locale }
         title             = 'Certificates(s)'
+        editKey           = 'cdlCertificates'
       />
     </Accordion>
   )
diff --git a/client/presentations/cdl/summary/certificates.jsx b/client/presentations/cdl/summary/certificates.jsx
index e3aa6753..9b5f54f3 100644
--- a/client/presentations/cdl/summary/certificates.jsx
+++ b/client/presentations/cdl/summary/certificates.jsx
@@ -3,7 +3,7 @@
 import React            from 'react';
 import * as dataPresent from '../../../helpers/data-present';
 import translations     from '../../../i18n';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../../conclusion/summary/summary-item.jsx';
 import { hasValue }     from '../../../helpers/data/validations';
 import {
@@ -41,8 +41,7 @@ const CDLCertificates = (props) => {
 
   return (
     <PageSummaryLink
-      name= 'cdlCertificates'
-      summary = {props.summary}
+      {...props}
     >
       <SummaryItem
         title='Certificates(s)'
diff --git a/client/presentations/cdl/summary/endorsements.jsx b/client/presentations/cdl/summary/endorsements.jsx
index 65a3e103..37788748 100644
--- a/client/presentations/cdl/summary/endorsements.jsx
+++ b/client/presentations/cdl/summary/endorsements.jsx
@@ -3,7 +3,7 @@
 import React            from 'react';
 import * as dataPresent from '../../../helpers/data-present';
 import translations     from '../../../i18n';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../../conclusion/summary/summary-item.jsx';
 import { hasValue }     from '../../../helpers/data/validations';
 import {
@@ -69,12 +69,11 @@ const CDLEndorsements = (props) => {
 
   return (
     <PageSummaryLink
-      name= 'cdlEndorsements'
-      summary = {props.summary}
+      {...props}
     >
       <SummaryItem
-        title='Endorsement(s)'
-        text={endorsements}
+        title = 'Endorsement(s)'
+        text  = {endorsements}
       />
     </PageSummaryLink>
   )
diff --git a/client/presentations/cdl/summary/license-class.jsx b/client/presentations/cdl/summary/license-class.jsx
index 581ba0f3..7f63a325 100644
--- a/client/presentations/cdl/summary/license-class.jsx
+++ b/client/presentations/cdl/summary/license-class.jsx
@@ -3,7 +3,7 @@
 import React              from 'react';
 import { hasValue }       from '../../../helpers/data/validations';
 import { getClassText }   from '../../../helpers/data/cdl';
-import PageSummaryLink    from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem        from '../../conclusion/summary/summary-item.jsx';
 
 const LicenseClass  = (props) => {
@@ -13,8 +13,7 @@ const LicenseClass  = (props) => {
 
   return (
     <PageSummaryLink
-      name    = 'cdlClass'
-      summary = 'cdlSummary'
+      {...props}
     >
       <SummaryItem
         title = 'License class:'
diff --git a/client/presentations/cdl/summary/license-issues.jsx b/client/presentations/cdl/summary/license-issues.jsx
index 0c915150..6ef8e813 100644
--- a/client/presentations/cdl/summary/license-issues.jsx
+++ b/client/presentations/cdl/summary/license-issues.jsx
@@ -4,7 +4,7 @@ import React            from 'react';
 import { printDate }    from '../../../helpers/print-date';
 import { hasValue }     from '../../../helpers/data/validations';
 import * as dataPresent from '../../../helpers/data-present';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../../conclusion/summary/summary-item.jsx';
 import {
   licenseIssuesIsSuspended
@@ -20,7 +20,7 @@ const LicenseIssues = (props) => {
     reason = props.licenseIssues.reason;
     return (
       <PageSummaryLink
-        name='cdlLicenseIssues'
+        {...props}
       >
         <SummaryItem
           title='Driving record:'
@@ -35,8 +35,7 @@ const LicenseIssues = (props) => {
   } else {
     return (
       <PageSummaryLink
-        name= 'cdlLicenseIssues'
-        summary = {props.summary}
+        {...props}
       >
         <SummaryItem
           title='Driving record:'
diff --git a/client/presentations/cdl/summary/medical-history.jsx b/client/presentations/cdl/summary/medical-history.jsx
deleted file mode 100644
index 6fa9aa31..00000000
--- a/client/presentations/cdl/summary/medical-history.jsx
+++ /dev/null
@@ -1,31 +0,0 @@
-'use strict';
-
-import React            from 'react';
-import { hasValue }     from '../../../helpers/data/validations';
-import translations     from '../../../i18n';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
-import SummaryItem      from '../../conclusion/summary/summary-item.jsx';
-import {
-  getStringByMedical
-}   from '../../../helpers/data/my-history';
-
-const MedicalHistory = (props) => {
-  if (!hasValue(props.medicalHistory.hasMedicalCondition)) { return null; }
-  let medicalCondition = getStringByMedical(props);
-  let locale = props.locale;
-
-  return (
-    <PageSummaryLink
-      name    = 'cdlMedical'
-      summary = 'cdlSummary'
-    >
-      <SummaryItem
-        title={translations[locale].summaryPage.myHistory.medicalConditions + ':'}
-        text={medicalCondition}
-      />
-    </PageSummaryLink>
-    );
-
-};
-
-export default MedicalHistory;
diff --git a/client/presentations/cdl/summary/motorcycle.jsx b/client/presentations/cdl/summary/motorcycle.jsx
index 3f9d116b..c5beb04c 100644
--- a/client/presentations/cdl/summary/motorcycle.jsx
+++ b/client/presentations/cdl/summary/motorcycle.jsx
@@ -1,7 +1,7 @@
 'use strict';
 
 import React            from 'react';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink  from '../../../containers/page-summary-link.jsx';
 import { hasValue }     from '../../../helpers/data/validations';
 import {
   yesClassM,
@@ -18,8 +18,7 @@ const Motorcycle = (props) => {
 
   return (
     <PageSummaryLink
-      name    = 'motorcycle'
-      summary = 'cdlSummary'
+      {...props}
     >
       <Yes  {...props} showIf={ yesClassM(props) }/>
       <No   {...props} showIf={ noClassM(props) }/>
diff --git a/client/presentations/cdl/summary/my-basics.jsx b/client/presentations/cdl/summary/my-basics.jsx
index 00f7f961..15021b0c 100644
--- a/client/presentations/cdl/summary/my-basics.jsx
+++ b/client/presentations/cdl/summary/my-basics.jsx
@@ -18,38 +18,31 @@ const MyBasics = (props) => {
       <LegalName
         legalName         = {cdl.basics.legalName}
         editKey           = 'cdlLegalName'
-        summary           = 'cdlSummary'
         locale            = {locale}
       />
       <DateOfBirth
         dateOfBirth       = {cdl.basics.dateOfBirth}
         editKey           = 'cdlDateOfBirth'
-        summary           = 'cdlSummary'
         locale            = {locale}
       />
       <PhysicalTraits
         physicalTraits    = { cdl.basics.physicalTraits}
         editKey           = 'cdlSexEyeHair'
-        summary           = 'cdlSummary'
         locale            = { locale }
       />
       <HeightWeight
         traitsHeightWeight= { cdl.basics.traitsHeightWeight}
         editKey           = 'cdlHeightWeight'
-        summary           = 'cdlSummary'
         locale            = { locale }
-
       />
       <Address
         address           = {cdl.basics.residency}
         editKey           = 'cdlResidency'
-        summary           = 'cdlSummary'
         locale            = {locale}
       />
       <SocialSecurity
         socialSecurity    = {cdl.basics.socialSecurity}
         editKey           = 'cdlSocialSecurity'
-        summary           = 'cdlSummary'
         locale            = {locale}
       />
     </Accordion>
diff --git a/client/presentations/cdl/summary/my-history.jsx b/client/presentations/cdl/summary/my-history.jsx
index 5c377ace..3dd18960 100644
--- a/client/presentations/cdl/summary/my-history.jsx
+++ b/client/presentations/cdl/summary/my-history.jsx
@@ -1,12 +1,13 @@
 'use strict';
 
-import React                  from 'react';
-import Accordion              from '../../../containers/accordion.jsx';
-import MedicalInfo            from './medical-history.jsx';
-import NamesInfo              from './names-history.jsx';
+import React                from 'react';
+import Accordion            from '../../../containers/accordion.jsx';
+import NamesInfo            from './names-history.jsx';
 import OtherStateLicenseInfo  from './other-state-licenses.jsx';
 import LicenseIssuesInfo      from './license-issues.jsx';
-import CurrentDL              from '../../conclusion/summary/my-history/license-and-id-history.jsx';
+import MedicalInfo          from '../../conclusion/summary/my-history/medical-history.jsx';
+import CurrentDL            from '../../conclusion/summary/my-history/license-and-id-history.jsx';
+import { hasValue }         from '../../../helpers/data/validations';
 
 const MyHistory = (props) => {
   let cdl       = props.cdl;
@@ -16,24 +17,28 @@ const MyHistory = (props) => {
       <MedicalInfo
         medicalHistory      = { cdl.history.medicalHistory }
         locale              = { locale }
+        editKey             = 'cdlMedical'
+        showIf              = { hasValue(cdl.history.medicalHistory.hasMedicalCondition) }
       />
       <NamesInfo
         namesHistory        = { cdl.history.namesHistory }
         locale              = { locale }
+        editKey             = 'cdlNameHistory'
       />
       <OtherStateLicenseInfo
         otherStateLicenses  = { cdl.history.otherStateLicenses }
         locale              = { locale }
+        editKey             = 'cdlOtherStateLicenses'
       />
       <LicenseIssuesInfo
         licenseIssues       = { cdl.history.licenseIssues }
         locale              = { locale }
+        editKey             = 'cdlLicenseIssues'
       />
       <CurrentDL
         licenseAndIdHistory = { cdl.history.currentDLInfo}
         locale              = { locale }
         editKey             = 'cdlCurrentDL'
-        summary             = 'cdlSummary'
         title               = 'Current DL number:'
       />
     </Accordion>
diff --git a/client/presentations/cdl/summary/names-history.jsx b/client/presentations/cdl/summary/names-history.jsx
index 47c6dd78..a61c7450 100644
--- a/client/presentations/cdl/summary/names-history.jsx
+++ b/client/presentations/cdl/summary/names-history.jsx
@@ -3,7 +3,7 @@
 import React            from 'react';
 import { hasValue }     from '../../../helpers/data/validations';
 import translations     from '../../../i18n';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../../conclusion/summary/summary-item.jsx';
 import {
   getStringByPreviousNames
@@ -16,8 +16,7 @@ const NamesHistory = (props) => {
 
   return (
     <PageSummaryLink
-      name    = 'cdlNamesHistory'
-      summary = 'cdlSummary'
+      {...props}
     >
       <SummaryItem
         title={translations[locale].summaryPage.myHistory.previousNames}
diff --git a/client/presentations/cdl/summary/organ-donation.jsx b/client/presentations/cdl/summary/organ-donation.jsx
index acca6dc7..a9c7b95f 100644
--- a/client/presentations/cdl/summary/organ-donation.jsx
+++ b/client/presentations/cdl/summary/organ-donation.jsx
@@ -3,18 +3,18 @@ import React                from 'react';
 import translations         from '../../../i18n';
 import Accordion            from '../../../containers/accordion.jsx';
 import * as dataPresent     from '../../../helpers/data-present';
-import PageSummaryLink      from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem          from '../../conclusion/summary/summary-item.jsx';
 
 const CDLOrganDonation = (props) => {
 
   if (!dataPresent.organDonation(props.organDonation)) { return null; }
   let locale = props.locale;
-  
+
   return (
     <PageSummaryLink
-      name    = 'cdlOrganDonation'
-      summary = 'cdlSummary'
+      editKey    = 'cdlOrganDonation'
+      locale      = { locale }
     >
       <SummaryItem
         title={translations[locale].summaryPage.organDonation.beAnOrganDonor}
diff --git a/client/presentations/cdl/summary/other-state-licenses.jsx b/client/presentations/cdl/summary/other-state-licenses.jsx
index bb14beea..459b44c3 100644
--- a/client/presentations/cdl/summary/other-state-licenses.jsx
+++ b/client/presentations/cdl/summary/other-state-licenses.jsx
@@ -3,7 +3,7 @@
 import React            from 'react';
 import { hasValue }     from '../../../helpers/data/validations';
 import translations     from '../../../i18n';
-import PageSummaryLink  from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../../conclusion/summary/summary-item.jsx';
 import { getTenYearHistorySelection } from '../../../helpers/data/my-history';
 
@@ -14,8 +14,7 @@ const OtherStateLicenses = (props) => {
 
   return (
     <PageSummaryLink
-      name    = 'cdlOtherStateLicenses'
-      summary = 'cdlSummary'
+      {...props}
     >
       <SummaryItem
         title='Driver License Outside California'
diff --git a/client/presentations/cdl/summary/self-cert.jsx b/client/presentations/cdl/summary/self-cert.jsx
index 288471fe..58adef1a 100644
--- a/client/presentations/cdl/summary/self-cert.jsx
+++ b/client/presentations/cdl/summary/self-cert.jsx
@@ -2,7 +2,7 @@
 
 import React                from 'react';
 import Accordion            from '../../../containers/accordion.jsx';
-import PageSummaryLink      from '../../conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink      from '../../../containers/page-summary-link.jsx';
 import SummaryItem          from '../../conclusion/summary/summary-item.jsx';
 import { getCert }          from '../../../helpers/data/cdl';
 import { hasValue }         from '../../../helpers/data/validations';
@@ -15,8 +15,7 @@ const CertItem = (props) => {
 
   return (
     <PageSummaryLink
-      name    = 'cdlCertification'
-      summary = 'cdlSummary'
+      {...props}
     >
       <SummaryItem
         title = 'Type of driving:'
@@ -27,10 +26,10 @@ const CertItem = (props) => {
 };
 
 const SelfCert = (props) => {
-
+  let locale = props.ui.locale;
   return (
     <Accordion id='self-certification' title='Self certification'>
-      <CertItem {...props} />
+      <CertItem {...props} locale={locale} editKey='cdlCertification'/>
     </Accordion>
   )
 };
diff --git a/client/presentations/cdl/summary/voter-registration.jsx b/client/presentations/cdl/summary/voter-registration.jsx
index c90cd774..ee21f924 100644
--- a/client/presentations/cdl/summary/voter-registration.jsx
+++ b/client/presentations/cdl/summary/voter-registration.jsx
@@ -15,14 +15,12 @@ const VoterRegistration = (props) => {
         citizenStatus = { cdl.voting.citizenStatus }
         dateOfBirth   = { cdl.basics.dateOfBirth}
         editKey       = 'cdlCitizenship'
-        summary       = 'cdlSummary'
         locale        = { locale }
       />
       <EligibilityRequirements
         eligibilityRequirements = { cdl.voting.eligibilityRequirements }
         dateOfBirth   = { cdl.basics.dateOfBirth}
         editKey       = 'cdlVotingEligibility'
-        summary       = 'cdlSummary'
         locale        = { locale }
       />
       <OptOut
@@ -31,7 +29,6 @@ const VoterRegistration = (props) => {
         citizenStatus = { cdl.voting.citizenStatus }
         eligibilityRequirements = { cdl.voting.eligibilityRequirements }
         editKey      = 'cdlVotingOptOut'
-        summary      = 'cdlSummary'
         locale       = { locale }
       />
     </Accordion>
diff --git a/client/presentations/conclusion/summary/Add-app-link.jsx b/client/presentations/conclusion/summary/Add-app-link.jsx
deleted file mode 100644
index 50d08a71..00000000
--- a/client/presentations/conclusion/summary/Add-app-link.jsx
+++ /dev/null
@@ -1,39 +0,0 @@
-'use strict';
-
-import React                from 'react';
-import { Link }             from 'react-router-dom';
-import { addPath }          from '../../../helpers/alice-path';
-
-
-const AddAppLink = (props) => {
-
-  let linkTo = {
-    pathname: addPath(props.to)
-  };
-
-  return (
-    <div className='summary-section'>
-      <div className='row'>
-        <div className='unit summary-content'>
-          {props.children}
-        </div>
-        <div className='shadow-container unit-right'>
-          <Link
-            to        = {linkTo}
-            className = 'summary add edit button'
-          >
-            <div className='unit edit-icon'></div>
-            <div
-              className='unit text-area'
-            >
-              Add
-            </div>
-          </Link>
-        </div>
-      </div>
-      <hr/>
-    </div>
-  )
-};
-
-export default AddAppLink;
diff --git a/client/presentations/conclusion/summary/Page-summary-link.jsx b/client/presentations/conclusion/summary/Page-summary-link.jsx
deleted file mode 100644
index 9693b56b..00000000
--- a/client/presentations/conclusion/summary/Page-summary-link.jsx
+++ /dev/null
@@ -1,37 +0,0 @@
-'use strict'
-
-import React            from 'react';
-import { Link }         from 'react-router-dom';
-import { pathForPage }  from '../../../helpers/navigation/page';
-
-const PageSummaryLink = (props) => {
-  let className = `${props.name} summary edit button`;
-  let nextPathKey = props.summary || 'summary';
-
-  let linkTo = {
-    pathname: pathForPage(props.name),
-    state: { nextAddress: nextPathKey }
-  };
-
-  return (
-    <div className='summary-section'>
-      <div className='row'>
-        <div className='unit summary-content'>
-          {props.children}
-        </div>
-        <div className='shadow-container unit-right'>
-          <Link
-            to={linkTo}
-            className= {className}
-          >
-            <div className='unit edit-icon'></div>
-            <div className='unit text-area'>Edit</div>
-          </Link>
-        </div>
-      </div>
-      <hr/>
-    </div>
-  )
-};
-
-export default PageSummaryLink
diff --git a/client/presentations/conclusion/summary/current-card-info.jsx b/client/presentations/conclusion/summary/current-card-info.jsx
index de22bee7..9ef88082 100644
--- a/client/presentations/conclusion/summary/current-card-info.jsx
+++ b/client/presentations/conclusion/summary/current-card-info.jsx
@@ -1,29 +1,31 @@
 'use strict';
 
-import React              from 'react';
-import SummaryItem        from './summary-item.jsx';
-import { printDate }      from '../../../helpers/print-date';
-import * as dataPresent   from '../../../helpers/data-present';
-import PageSummaryLink    from './Page-summary-link.jsx';
+import React                from 'react';
+import SummaryItem          from './summary-item.jsx';
+import { printDate }        from '../../../helpers/print-date';
+import * as dataPresent     from '../../../helpers/data-present';
+import PageSummaryLink      from '../../../containers/page-summary-link.jsx';
 import { cardNumberOrNone } from '../../../helpers/data/my-history';
+import translations         from '../../../i18n';
 
 export const CardNumber = (props) => {
-  let cardNumber = cardNumberOrNone(props);
+
   return (
     <SummaryItem
       title = {props.title}
-      text  = {cardNumber}
+      text  = {props.cardNumber}
     />
   )
 };
 
 export const CardDate = (props) => {
-  if (!dataPresent.date(props.currentCardInfo)) { return null;}
-  let date = printDate(props.currentCardInfo);
+  if (!props.showIf) { return null; }
+  let date    = printDate(props.cardInfo);
+  let locale  = props.locale;
   return (
     <SummaryItem
-      title = 'Expiration date:'
-      text  = {date}
+      title = { translations[locale].summaryPage.shared.expirationDate }
+      text  = { date }
     />
   )
 };
@@ -33,15 +35,16 @@ export const CurrentCardInfo = (props) => {
   return (
     <PageSummaryLink
       {...props}
-      name      = {props.editKey}
     >
       <CardNumber
-        number  = {props.currentCardInfo.number}
-        title   = {props.title}
+        cardNumber  = { cardNumberOrNone(props.currentCardInfo)}
+        title       = { props.title}
       />
 
       <CardDate
-        currentCardInfo = {props.currentCardInfo}
+        cardInfo    = { props.currentCardInfo}
+        locale      = { props.locale }
+        showIf      = { dataPresent.date(props.currentCardInfo)}
       />
     </PageSummaryLink>
   );
diff --git a/client/presentations/conclusion/summary/dl-app.jsx b/client/presentations/conclusion/summary/dl-app.jsx
index 56dd24a6..18d7da98 100644
--- a/client/presentations/conclusion/summary/dl-app.jsx
+++ b/client/presentations/conclusion/summary/dl-app.jsx
@@ -2,47 +2,51 @@
 
 import React                       from 'react';
 import Accordion                   from '../../../containers/accordion.jsx';
+import RealID                      from './real-id.jsx';
 import {
   DLApplicationNotStarted,
   DLAction,
   CurrentDLInfo,
-  DLRealID,
   LicenseType
 } from './dl-app/index';
 
 const DLApp = (props) => {
   let locale      = props.ui.locale;
   let application = props.application;
+  let cardType    = 'DL';
   return (
     <Accordion id='driver-license-application-details-summary' title='My Driver License' key='driver-license-application-details-summary'>
       <DLApplicationNotStarted
         DLApp             = { application.DLApp }
         locale            = { locale }
-        summary           = 'summary'
+        cardType          = { cardType }
+        editKey           = 'wdywtdt'
       />
       <DLAction
         DLApp             = { application.DLApp }
         locale            = { locale }
-        summary           = 'summary'
+        editKey           = 'wdywtdt'
+        cardType          = { cardType }
       />
       <CurrentDLInfo
         DLApp             = { application.DLApp }
-        currentCardInfo   = { application.DLApp.currentCard}
         locale            = { locale }
-        summary           = 'summary'
+        editKey           = 'currentCardInfo'
+        cardType          = { cardType }
       />
-      <DLRealID
+      <RealID
+        showIf            = { application.DLApp.isApplying }
         realID            = { application.DLApp.realID }
-        DLApp             = { application.DLApp }
         locale            = { locale }
-        summary           = 'summary'
-        name              = 'realID'
+        editKey           = 'realID'
         title             = 'Real-ID Compliant'
+        cardType          = { cardType }
       />
       <LicenseType
         DLApp             = { application.DLApp }
         locale            = { locale }
-        summary           = 'summary'
+        editKey           = 'chooseLicenseClass'
+        cardType          = { cardType }
       />
     </Accordion>
   );
diff --git a/client/presentations/conclusion/summary/dl-app/current-dl-info.jsx b/client/presentations/conclusion/summary/dl-app/current-dl-info.jsx
index 1f662279..82366062 100644
--- a/client/presentations/conclusion/summary/dl-app/current-dl-info.jsx
+++ b/client/presentations/conclusion/summary/dl-app/current-dl-info.jsx
@@ -2,6 +2,7 @@
 
 import React              from 'react';
 import { existingDL }     from '../../../../helpers/data/card-type';
+import translations       from '../../../../i18n';
 import {
   CurrentCardInfo
 } from '../current-card-info.jsx';
@@ -9,13 +10,12 @@ import {
 
 const CurrentDLInfo = (props) => {
   if(!existingDL(props)) { return null; }
-
+  let locale = props.locale;
   return (
     <CurrentCardInfo
       {...props}
-      editKey         = 'addCurrentCardInfo'
       currentCardInfo = { props.DLApp.currentCard }
-      title           = 'Driver license number'
+      title           = { translations[locale].summaryPage.myDL.currentCard }
     />
   )
 };
diff --git a/client/presentations/conclusion/summary/dl-app/dl-action.jsx b/client/presentations/conclusion/summary/dl-app/dl-action.jsx
index 4adba868..64fb0ed9 100644
--- a/client/presentations/conclusion/summary/dl-app/dl-action.jsx
+++ b/client/presentations/conclusion/summary/dl-app/dl-action.jsx
@@ -1,7 +1,7 @@
 'use strict';
 
-import React            from 'react';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import React                from 'react';
+import PageSummaryLink      from '../../../../containers/page-summary-link.jsx';
 import {
   DLAppExists,
   renewDL,
@@ -25,7 +25,6 @@ const DLAction = (props) => {
   return (
     <PageSummaryLink
       {...props}
-      name    = 'addWdywtdt'
     >
       <New        showIf = {getNewDL(props)}  locale = {locale}/>
       <Renew      showIf = {renewDL(props)}   locale = {locale}/>
diff --git a/client/presentations/conclusion/summary/dl-app/dl-application-not-started.jsx b/client/presentations/conclusion/summary/dl-app/dl-application-not-started.jsx
index 10e45a6e..5097af1f 100644
--- a/client/presentations/conclusion/summary/dl-app/dl-application-not-started.jsx
+++ b/client/presentations/conclusion/summary/dl-app/dl-application-not-started.jsx
@@ -1,8 +1,8 @@
 'use strict';
 
-import React          from "react";
-import translations   from '../../../../i18n';
-import AddAppLink     from '../Add-app-link.jsx';
+import React                from "react";
+import translations         from '../../../../i18n';
+import PageSummaryLink      from '../../../../containers/page-summary-link.jsx';
 
 import {
   DLAppExists
@@ -14,12 +14,12 @@ const DLApplicationNotStarted = (props) => {
   if(DLAppExists(props)) { return null; }
 
   return (
-    <AddAppLink
+    <PageSummaryLink
       {...props}
-      to      = '/driver-license'
+      add       = { true }
     >
       <p>{translations[locale].summaryPage.whatImDoing.nothing}</p>
-    </AddAppLink>
+    </PageSummaryLink>
   );
 };
 
diff --git a/client/presentations/conclusion/summary/dl-app/dl-real-id.jsx b/client/presentations/conclusion/summary/dl-app/dl-real-id.jsx
deleted file mode 100644
index 74b6bb4f..00000000
--- a/client/presentations/conclusion/summary/dl-app/dl-real-id.jsx
+++ /dev/null
@@ -1,22 +0,0 @@
-'use strict';
-
-import React            from "react";
-import RealID           from '../real-id.jsx';
-import {
-  DLAppExists
-} from '../../../../helpers/data/card-type';
-
-
-const DLRealID = (props) => {
-  let showIf = DLAppExists(props);
-  return (
-    <RealID
-      {...props}
-      showIf  = { showIf }
-      name    = 'realID'
-      title   = 'Real-ID Compliant'
-    />
-  );
-};
-
-export default DLRealID;
diff --git a/client/presentations/conclusion/summary/dl-app/index.js b/client/presentations/conclusion/summary/dl-app/index.js
index 7968cce4..e3e1ece7 100644
--- a/client/presentations/conclusion/summary/dl-app/index.js
+++ b/client/presentations/conclusion/summary/dl-app/index.js
@@ -1,14 +1,12 @@
 'use strict';
 
 import DLApplicationNotStarted     from './dl-application-not-started.jsx';
-import DLRealID                    from './dl-real-id.jsx';
 import DLAction                    from './dl-action.jsx';
 import LicenseType                 from './license-type.jsx';
 import CurrentDLInfo               from './current-dl-info.jsx';
 
 export {
   DLApplicationNotStarted,
-  DLRealID,
   DLAction,
   LicenseType,
   CurrentDLInfo
diff --git a/client/presentations/conclusion/summary/dl-app/license-type.jsx b/client/presentations/conclusion/summary/dl-app/license-type.jsx
index fb150d46..7e007490 100644
--- a/client/presentations/conclusion/summary/dl-app/license-type.jsx
+++ b/client/presentations/conclusion/summary/dl-app/license-type.jsx
@@ -3,7 +3,7 @@
 import React            from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
 import translations     from '../../../../i18n';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
 import {
   showLicenseClass
@@ -74,16 +74,15 @@ const LicenseType = (props) => {
 
   return (
     <PageSummaryLink
-      name= 'addLicenseClass'
-      summary = {props.summary}
+      {...props}
     >
       <SummaryItem
-        title='Need to drive'
-        text={vehicles}
+        title = { translations[locale].summaryPage.myDL.needToDriver.header }
+        text  = { vehicles}
       />
       <SummaryItem
-        title='Firefighter endorsement'
-        text={endorsements}
+        title = { translations[locale].summaryPage.myDL.firefighterEndorsement }
+        text  = { endorsements}
       />
     </PageSummaryLink>
   )
diff --git a/client/presentations/conclusion/summary/id-app.jsx b/client/presentations/conclusion/summary/id-app.jsx
index 5ce3df73..441ac133 100644
--- a/client/presentations/conclusion/summary/id-app.jsx
+++ b/client/presentations/conclusion/summary/id-app.jsx
@@ -2,10 +2,10 @@
 
 import React                        from 'react';
 import Accordion                    from '../../../containers/accordion.jsx';
+import RealID                       from './real-id.jsx';
 import {
   IDApplicationNotStarted,
   SeniorID,
-  IDRealID,
   ReducedOrNoFee,
   IDAction,
   CurrentIDInfo
@@ -14,42 +14,47 @@ import {
 const IDApp = (props) => {
   let application = props.application;
   let locale = props.ui.locale;
+  let cardType = 'ID';
 
   return (
     <Accordion id='id-application-details-summary' title='My ID' key='id-application-details-summary'>
       <IDApplicationNotStarted
         IDApp             = { application.IDApp }
         locale            = { locale }
-        summary           = 'summary'
+        editKey           = 'wdywtdt'
+        cardType          = { cardType }
       />
       <IDAction
         IDApp             = { application.IDApp }
         locale            = { locale }
-        summary           = 'summary'
+        editKey           = 'wdywtdt'
+        cardType          = { cardType }
       />
       <ReducedOrNoFee
         locale            = { locale }
-        summary           = 'summary'
         reducedFee        = { application.IDApp.reducedFee}
+        editKey           = 'reducedFeeID'
+        cardType          = { cardType }
       />
       <SeniorID
         locale            = { locale }
-        summary           = 'summary'
-        seniorID          = {application.IDApp.seniorID}
+        seniorID          = { application.IDApp.seniorID}
+        editKey           = 'seniorID'
+        cardType          = { cardType }
       />
       <CurrentIDInfo
         IDApp             = { application.IDApp}
         locale            = { locale }
-        summary           = 'summary'
-        currentCardInfo   = {application.IDApp.currentCard}
+        editKey           = 'currentCardInfo'
+        cardType          = { cardType }
       />
-      <IDRealID
+      <RealID
+        showIf            = { application.IDApp.isApplying }
         realID            = { application.IDApp.realID }
-        IDApp             = { application.IDApp }
-        summary           = 'summary'
         locale            = { locale }
-        name              = 'realID'
+        editKey           = 'realID'
         title             = 'Real-ID Compliant'
+        cardType          = { cardType }
       />
     </Accordion>
   )
diff --git a/client/presentations/conclusion/summary/id-app/current-id-info.jsx b/client/presentations/conclusion/summary/id-app/current-id-info.jsx
index 3dce37ba..098b89b3 100644
--- a/client/presentations/conclusion/summary/id-app/current-id-info.jsx
+++ b/client/presentations/conclusion/summary/id-app/current-id-info.jsx
@@ -3,18 +3,18 @@
 import React              from 'react';
 import { existingID }     from '../../../../helpers/data/card-type';
 import { CurrentCardInfo }from '../current-card-info.jsx';
-
+import translations       from '../../../../i18n';
 
 const CurrentIDInfo = (props) => {
-
   if(!existingID(props)) { return null; }
 
+  let locale = props.locale;
+
   return (
     <CurrentCardInfo
       {...props}
-      editKey         = 'addCurrentIDInfo'
       currentCardInfo = { props.IDApp.currentCard }
-      title           = 'ID card number'
+      title           = { translations[locale].summaryPage.myID.currentCard }
     />
   );
 };
diff --git a/client/presentations/conclusion/summary/id-app/id-action.jsx b/client/presentations/conclusion/summary/id-app/id-action.jsx
index 6302ce17..b490aef5 100644
--- a/client/presentations/conclusion/summary/id-app/id-action.jsx
+++ b/client/presentations/conclusion/summary/id-app/id-action.jsx
@@ -1,7 +1,7 @@
 'use strict';
 
-import React            from 'react';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import React                from 'react';
+import PageSummaryLink      from '../../../../containers/page-summary-link.jsx';
 import {
   IDAppExists,
   getNewID,
@@ -25,7 +25,6 @@ const IDAction = (props) => {
   return (
     <PageSummaryLink
       {...props}
-      name    = 'addIDWdywtdt'
     >
       <New        showIf = {getNewID(props)}    locale = {locale}/>
       <Renew      showIf = {renewID(props)}     locale = {locale}/>
diff --git a/client/presentations/conclusion/summary/id-app/id-application-not-started.jsx b/client/presentations/conclusion/summary/id-app/id-application-not-started.jsx
index 46488446..fa7c872a 100644
--- a/client/presentations/conclusion/summary/id-app/id-application-not-started.jsx
+++ b/client/presentations/conclusion/summary/id-app/id-application-not-started.jsx
@@ -1,8 +1,8 @@
 'use strict';
 
-import React          from "react";
-import translations   from '../../../../i18n';
-import AddAppLink     from '../Add-app-link.jsx';
+import React            from "react";
+import translations     from '../../../../i18n';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import {
   IDAppExists
 } from '../../../../helpers/data/card-type'
@@ -12,12 +12,12 @@ const IDApplicationNotStarted = (props) => {
   document.title = 'Summary of my application';
   if(IDAppExists(props)) { return null; }
   return (
-    <AddAppLink
+    <PageSummaryLink
       {...props}
-      to = '/id-card'
+      add       = { true }
     >
       <p>{translations[locale].summaryPage.whatImDoing.nothing}</p>
-    </AddAppLink>
+    </PageSummaryLink>
   );
 };
 
diff --git a/client/presentations/conclusion/summary/id-app/id-real-id.jsx b/client/presentations/conclusion/summary/id-app/id-real-id.jsx
deleted file mode 100644
index 44b21ad2..00000000
--- a/client/presentations/conclusion/summary/id-app/id-real-id.jsx
+++ /dev/null
@@ -1,22 +0,0 @@
-'use strict';
-
-import React            from "react";
-import RealID           from '../real-id.jsx';
-import {
-  IDAppExists
-} from '../../../../helpers/data/card-type';
-
-
-const IDRealID = (props) => {
-
-  return (
-    <RealID
-      {...props}
-      showIf = {IDAppExists(props)}
-      name  = 'realID'
-      title = 'Real-ID Compliant'
-    />
-  )
-};
-
-export default IDRealID;
diff --git a/client/presentations/conclusion/summary/id-app/index.js b/client/presentations/conclusion/summary/id-app/index.js
index d9378bfd..06d131a2 100644
--- a/client/presentations/conclusion/summary/id-app/index.js
+++ b/client/presentations/conclusion/summary/id-app/index.js
@@ -2,7 +2,6 @@
 
 import IDApplicationNotStarted      from './id-application-not-started.jsx';
 import SeniorID                     from './senior-id.jsx';
-import IDRealID                     from './id-real-id.jsx';
 import ReducedOrNoFee               from './reduced-or-no-fee.jsx';
 import IDAction                     from './id-action.jsx';
 import CurrentIDInfo                from './current-id-info.jsx';
@@ -10,7 +9,6 @@ import CurrentIDInfo                from './current-id-info.jsx';
 export {
   IDApplicationNotStarted,
   SeniorID,
-  IDRealID,
   ReducedOrNoFee,
   IDAction,
   CurrentIDInfo
diff --git a/client/presentations/conclusion/summary/id-app/reduced-or-no-fee.jsx b/client/presentations/conclusion/summary/id-app/reduced-or-no-fee.jsx
index 875ab1a8..8b8f71d2 100644
--- a/client/presentations/conclusion/summary/id-app/reduced-or-no-fee.jsx
+++ b/client/presentations/conclusion/summary/id-app/reduced-or-no-fee.jsx
@@ -2,7 +2,7 @@
 
 import React            from "react";
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
 import translations     from '../../../../i18n';
 import {
@@ -16,8 +16,8 @@ const Yes = (props) => {
   let locale = props.locale;
   return (
     <SummaryItem
-      title='Reduced or no-fee'
-      text={translations[locale].shared.commonAnswers.yes}
+      title = { translations[locale].summaryPage.myID.reducedFeeHeading }
+      text  = { translations[locale].shared.commonAnswers.yes}
     />
   )
 };
@@ -27,8 +27,8 @@ const No = (props) => {
   let locale = props.locale;
   return (
     <SummaryItem
-      title='Reduced or no-fee'
-      text={translations[locale].shared.commonAnswers.no}
+      title = { translations[locale].summaryPage.myID.reducedFeeHeading }
+      text  = { translations[locale].shared.commonAnswers.no}
     />
   )
 };
@@ -38,8 +38,8 @@ const ReducedOrNoFee = (props) => {
   let locale = props.locale;
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = 'reducedFeeID'
+      {...props}
+      name  = { props.editKey}
     >
       <Yes  reducedFee = {props.reducedFee} locale = {locale}/>
       <No   reducedFee = {props.reducedFee} locale = {locale}/>
diff --git a/client/presentations/conclusion/summary/id-app/senior-id.jsx b/client/presentations/conclusion/summary/id-app/senior-id.jsx
index ad93a853..d3ca3150 100644
--- a/client/presentations/conclusion/summary/id-app/senior-id.jsx
+++ b/client/presentations/conclusion/summary/id-app/senior-id.jsx
@@ -2,20 +2,21 @@
 
 import React            from "react";
 import { hasValue }     from '../../../../helpers/data/validations';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 
 const SeniorID = (props) => {
   if (!hasValue(props.seniorID)) { return null; }
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = 'seniorID'
+      {...props}
+      name    = { props.editKey }
     >
       <SummaryItem
-        title='Senior ID'
-        text={props.seniorID}
+        title = { translations[props.locale].summaryPage.myID.seniorIDHeading}
+        text  = { props.seniorID }
       />
     </PageSummaryLink>
   )
diff --git a/client/presentations/conclusion/summary/my-basics.jsx b/client/presentations/conclusion/summary/my-basics.jsx
index 6a7aa2df..8f46c323 100644
--- a/client/presentations/conclusion/summary/my-basics.jsx
+++ b/client/presentations/conclusion/summary/my-basics.jsx
@@ -21,41 +21,34 @@ const MyBasics = (props) => {
       <Empty
         {...application}
         locale            = { locale }
-        summary           = 'summary'
       />
       <LegalName
         locale            = { locale }
-        summary           = 'summary'
         legalName         = {application.basics.legalName}
         editKey           = 'legalName'
       />
       <DateOfBirth
         locale            = { locale }
-        summary           = 'summary'
         dateOfBirth       = {application.basics.dateOfBirth}
         editKey           = 'dateOfBirth'
       />
       <Address
         locale            = { locale }
-        summary           = 'summary'
         address           = { application.basics.address}
         editKey           = 'addresses'
       />
       <PhysicalTraits
         locale            = { locale }
-        summary           = 'summary'
         editKey           = 'sexEyeHair'
         physicalTraits    = { application.basics.physicalTraits}
       />
       <TraitsHeightWeight
         locale            = { locale }
-        summary           = 'summary'
         editKey           = 'heightWeight'
         traitsHeightWeight= { application.basics.traitsHeightWeight}
       />
       <SocialSecurity
         locale            = { locale }
-        summary           = 'summary'
         socialSecurity    = { application.basics.socialSecurity}
         editKey           = 'socialSecurity'
       />
diff --git a/client/presentations/conclusion/summary/my-basics/address.jsx b/client/presentations/conclusion/summary/my-basics/address.jsx
index fb794a79..8c46eaad 100644
--- a/client/presentations/conclusion/summary/my-basics/address.jsx
+++ b/client/presentations/conclusion/summary/my-basics/address.jsx
@@ -3,7 +3,7 @@
 import React            from "react";
 import * as dataPresent from '../../../../helpers/data-present';
 import { printDate }    from '../../../../helpers/print-date';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
 import translations     from '../../../../i18n';
 
@@ -23,8 +23,7 @@ const Address = (props) => {
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = {props.editKey}
+      {...props}
     >
       <SummaryItem
         title={translations[locale].summaryPage.myBasics.homeAddress}
diff --git a/client/presentations/conclusion/summary/my-basics/date-of-birth.jsx b/client/presentations/conclusion/summary/my-basics/date-of-birth.jsx
index 9e177f22..8487014b 100644
--- a/client/presentations/conclusion/summary/my-basics/date-of-birth.jsx
+++ b/client/presentations/conclusion/summary/my-basics/date-of-birth.jsx
@@ -3,8 +3,9 @@
 import React            from "react";
 import * as dataPresent from '../../../../helpers/data-present';
 import { printDate }    from '../../../../helpers/print-date';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 
 const DateOfBirth = (props) => {
   if (!dataPresent.date(props.dateOfBirth)) { return null; }
@@ -13,12 +14,11 @@ const DateOfBirth = (props) => {
 
   return (
     <PageSummaryLink
-      name    = {props.editKey}
-      summary = {props.summary}
+      {...props}
     >
       <SummaryItem
-        title = 'Date Of Birth'
-        text  = {dateOfBirth}
+        title = { translations[props.locale].shared.labels.dateOfBirth }
+        text  = { dateOfBirth}
       />
   </PageSummaryLink>
   );
diff --git a/client/presentations/conclusion/summary/my-basics/legal-name.jsx b/client/presentations/conclusion/summary/my-basics/legal-name.jsx
index 0612bef0..d0be047b 100644
--- a/client/presentations/conclusion/summary/my-basics/legal-name.jsx
+++ b/client/presentations/conclusion/summary/my-basics/legal-name.jsx
@@ -2,8 +2,9 @@
 
 import React            from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 
 const LegalName = (props) => {
   if (!dataPresent.legalName(props.legalName)) { return null; }
@@ -12,11 +13,10 @@ const LegalName = (props) => {
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = {props.editKey}
+      {...props}
     >
       <SummaryItem
-        title = 'Name'
+        title = { translations[props.locale].shared.labels.name}
         text  = {printedName}
       />
     </PageSummaryLink>
diff --git a/client/presentations/conclusion/summary/my-basics/physical-traits.jsx b/client/presentations/conclusion/summary/my-basics/physical-traits.jsx
index 816fe086..218bae1f 100644
--- a/client/presentations/conclusion/summary/my-basics/physical-traits.jsx
+++ b/client/presentations/conclusion/summary/my-basics/physical-traits.jsx
@@ -3,30 +3,30 @@
 import React            from "react";
 import * as dataPresent from '../../../../helpers/data-present';
 import { printDate }    from '../../../../helpers/print-date';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 
 const PhysicalTraits = (props) => {
   if (!dataPresent.physicalTraits(props.physicalTraits)) { return null; }
-
+  let locale = props.locale;
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = {props.editKey}
+      {...props}
     >
       <SummaryItem
-        title='Sex'
-        text={props.physicalTraits.sex}
+        title = { translations[locale].shared.labels.sex}
+        text  = { props.physicalTraits.sex}
       />
 
       <SummaryItem
-        title='Eye Color'
-        text={props.physicalTraits.eyeColor}
+        title = { translations[locale].summaryPage.myBasics.eyeColor}
+        text  = { props.physicalTraits.eyeColor}
       />
 
       <SummaryItem
-        title='Hair Color'
-        text={props.physicalTraits.hairColor}
+        title = { translations[locale].summaryPage.myBasics.hairColor }
+        text  = { props.physicalTraits.hairColor}
       />
     </PageSummaryLink>
     )
diff --git a/client/presentations/conclusion/summary/my-basics/social-security.jsx b/client/presentations/conclusion/summary/my-basics/social-security.jsx
index 6f77f251..379a3626 100644
--- a/client/presentations/conclusion/summary/my-basics/social-security.jsx
+++ b/client/presentations/conclusion/summary/my-basics/social-security.jsx
@@ -2,8 +2,9 @@
 
 import React            from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 import {
   hasSocialSecurityNo
 } from '../../../../helpers/data/ssn';
@@ -12,14 +13,14 @@ const SocialSecurity = (props) => {
   if(hasSocialSecurityNo(props)) { return null; }
 
   let socialSecurity =  'xxx' + '-' + 'xx' + '-' + props.socialSecurity.part3;
+  let locale = props.locale;
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = {props.editKey}
+      {...props}
     >
     <SummaryItem
-        title='Social Security Number'
+        title={ translations[locale].applicationPreparationPage.noRealIdSection.socialSecurity.header}
         text={socialSecurity}
       />
     </PageSummaryLink>
diff --git a/client/presentations/conclusion/summary/my-basics/traits-height-weight.jsx b/client/presentations/conclusion/summary/my-basics/traits-height-weight.jsx
index 4ea6ec25..65de0947 100644
--- a/client/presentations/conclusion/summary/my-basics/traits-height-weight.jsx
+++ b/client/presentations/conclusion/summary/my-basics/traits-height-weight.jsx
@@ -2,8 +2,9 @@
 
 import React            from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 
 const TraitsHeightWeight = (props) => {
   if (!dataPresent.traitsHeightWeight(props.traitsHeightWeight)) { return null; }
@@ -11,18 +12,18 @@ const TraitsHeightWeight = (props) => {
   let heightInches = props.traitsHeightWeight.heightInches || 0;
   let height = props.traitsHeightWeight.heightFeet + ' feet ' + heightInches + ' inches';
   let weight = props.traitsHeightWeight.weight + ' pounds';
+  let locale = props.locale;
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = {props.editKey}
+      {...props}
     >
       <SummaryItem
-        title='Height'
+        title={ translations[locale].summaryPage.myBasics.height}
         text={height}
       />
       <SummaryItem
-        title='Weight'
+        title={ translations[locale].summaryPage.myBasics.weight}
         text={weight}
       />
     </PageSummaryLink>
diff --git a/client/presentations/conclusion/summary/my-history.jsx b/client/presentations/conclusion/summary/my-history.jsx
index 648f350a..a6e4f784 100644
--- a/client/presentations/conclusion/summary/my-history.jsx
+++ b/client/presentations/conclusion/summary/my-history.jsx
@@ -1,7 +1,8 @@
 'use strict';
 
-import React                       from 'react';
-import Accordion                   from '../../../containers/accordion.jsx';
+import React                        from 'react';
+import Accordion                    from '../../../containers/accordion.jsx';
+import translations                 from '../../../i18n';
 import {
   LicenseIssues,
   LicenseAndIdHistory,
@@ -19,30 +20,31 @@ const MyHistory = (props) => {
       <MedicalHistory
         DLApp               = { application.DLApp }
         locale              = { locale }
-        summary             = 'summary'
         medicalHistory      = { application.history.medicalHistory}
+        showIf              = { application.DLApp.isApplying }
+        editKey             = 'medicalHistory'
       />
       <LicenseAndIdHistory
         locale              = { locale }
-        summary             = 'summary'
-        licenseAndIdHistory = {application.history.licenseAndIdHistory}
-        editKey             = 'addLicenseHistory'
-        title               = 'Previous DL/ID card number:'
+        licenseAndIdHistory = { application.history.licenseAndIdHistory}
+        editKey             = 'cardHistory'
+        title               = { translations[locale].summaryPage.myHistory.previousCard }
       />
       <NamesHistory
         locale              = { locale }
-        summary             = 'summary'
+        translations        = { translations }
         namesHistory        = { application.history.namesHistory}
+        editKey             = 'nameHistory'
       />
       <LicenseIssues
         locale              = { locale }
-        summary             = 'summary'
-        licenseIssues       = {application.history.licenseIssues}
+        licenseIssues       = { application.history.licenseIssues}
+        editKey             = 'licenseIssues'
       />
       <VeteransService
         locale              = { locale }
-        summary             = 'summary'
         veteransService     = { application.history.veteransService}
+        editKey             = 'veterans'
       />
     </Accordion>
   );
diff --git a/client/presentations/conclusion/summary/my-history/license-and-id-history.jsx b/client/presentations/conclusion/summary/my-history/license-and-id-history.jsx
index a75abd15..5ea4239c 100644
--- a/client/presentations/conclusion/summary/my-history/license-and-id-history.jsx
+++ b/client/presentations/conclusion/summary/my-history/license-and-id-history.jsx
@@ -3,8 +3,13 @@
 import React            from "react";
 import { hasValue }     from '../../../../helpers/data/validations';
 import { printDate }    from '../../../../helpers/print-date';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
+import {
+  CardNumber,
+  CardDate
+} from '../../../conclusion/summary/current-card-info.jsx';
 import {
   showIssuedIn,
   showExpirationDate,
@@ -17,41 +22,38 @@ const IssuedIn = (props) => {
 
   return (
     <SummaryItem
-      title='Issued in:'
+      title={translations[props.locale].summaryPage.myHistory.issuedIn + ':'}
       text={issuedBy}
     />
   )
 };
 
-const ExpirationDate = (props) => {
-  if (!showExpirationDate(props)) { return null; }
-  let date       = printDate(props.licenseAndIdHistory);
-  return (
-  <SummaryItem
-      title='Expiration date:'
-      text={date}
-    />
-  )
-};
-
 
 const LicenseAndIdHistory = (props) => {
   if (!hasValue(props.licenseAndIdHistory.isIssued)) { return null; }
 
-  let DLIDNumber = cardNumber(props);
+  let DLIDNumber  = cardNumber(props);
+  let locale      = props.locale;
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name    = {props.editKey}
+      {...props}
     >
-      <SummaryItem
-        title = {props.title}
-        text  = {DLIDNumber}
+      <CardNumber
+        title       = { props.title}
+        cardNumber  = { DLIDNumber}
+        locale      = { locale }
+      />
+      <IssuedIn
+        licenseAndIdHistory = {props.licenseAndIdHistory}
+        locale      = { locale }
       />
-      <IssuedIn       licenseAndIdHistory = {props.licenseAndIdHistory}/>
 
-      <ExpirationDate licenseAndIdHistory = {props.licenseAndIdHistory}/>
+      <CardDate
+        cardInfo  = { props.licenseAndIdHistory}
+        showIf    = { showExpirationDate(props)}
+        locale    = { locale }
+      />
 
     </PageSummaryLink>
   )
diff --git a/client/presentations/conclusion/summary/my-history/license-issues.jsx b/client/presentations/conclusion/summary/my-history/license-issues.jsx
index 8cdfa9cd..23051b7f 100644
--- a/client/presentations/conclusion/summary/my-history/license-issues.jsx
+++ b/client/presentations/conclusion/summary/my-history/license-issues.jsx
@@ -3,8 +3,9 @@
 import React            from 'react';
 import { printDate }    from '../../../../helpers/print-date';
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 import {
   licenseIssuesIsSuspended
 } from '../../../../helpers/data/my-history';
@@ -13,20 +14,20 @@ const LicenseIssues = (props) => {
   if (!dataPresent.licenseIssues(props.licenseIssues)) { return null; }
   let isSuspended = props.licenseIssues.isSuspended;
   let date        = printDate(props.licenseIssues);
-  let reason      = 'None';
+  let locale      = props.locale;
 
   if(licenseIssuesIsSuspended(props)) {
-    reason = props.licenseIssues.reason;
+
     return (
       <PageSummaryLink
-        name='licenseIssues'
+        {...props}
       >
         <SummaryItem
-          title='Driving record:'
-          text={reason}
+          title={ translations[locale].summaryPage.myHistory.drivingRecord }
+          text= { props.licenseIssues.reason}
         />
         <SummaryItem
-          title='Record date:'
+          title= { translations[locale].summaryPage.myHistory.recordDate }
           text={date}
         />
       </PageSummaryLink>
@@ -34,12 +35,11 @@ const LicenseIssues = (props) => {
   } else {
     return (
       <PageSummaryLink
-        name= 'addIssueHistory'
-        summary = {props.summary}
+        {...props}
       >
         <SummaryItem
-          title='Driving record:'
-          text={reason}
+          title = { translations[locale].summaryPage.myHistory.drivingRecord }
+          text  = { translations[locale].shared.summary.none }
         />
       </PageSummaryLink>
     )
diff --git a/client/presentations/conclusion/summary/my-history/medical-history.jsx b/client/presentations/conclusion/summary/my-history/medical-history.jsx
index 83117cb6..609ed618 100644
--- a/client/presentations/conclusion/summary/my-history/medical-history.jsx
+++ b/client/presentations/conclusion/summary/my-history/medical-history.jsx
@@ -3,28 +3,28 @@
 import React            from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
 import { DLAppExists }  from '../../../../helpers/data/card-type';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 import {
   getStringByMedical
 }   from '../../../../helpers/data/my-history';
 
 const MedicalHistory = (props) => {
-  if (!DLAppExists(props)) { return null; }
+  if (!props.showIf) { return null; }
   let medicalCondition = getStringByMedical(props);
+  let locale = props.locale;
 
   return (
     <PageSummaryLink
-      name= 'addMedicalHistory'
-      summary = {props.summary}
+      {...props}
     >
       <SummaryItem
-        title='Medical conditions:'
+        title= { translations[locale].summaryPage.myHistory.medicalConditions }
         text={medicalCondition}
       />
     </PageSummaryLink>
-    );
-
+  );
 };
 
 export default MedicalHistory;
diff --git a/client/presentations/conclusion/summary/my-history/names-history.jsx b/client/presentations/conclusion/summary/my-history/names-history.jsx
index 419a9f89..2ab4f080 100644
--- a/client/presentations/conclusion/summary/my-history/names-history.jsx
+++ b/client/presentations/conclusion/summary/my-history/names-history.jsx
@@ -2,8 +2,9 @@
 
 import React from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
+import translations     from '../../../../i18n';
 import {
   getStringByPreviousNames
 } from '../../../../helpers/data/my-history';
@@ -14,12 +15,11 @@ const NamesHistory = (props) => {
 
   return (
     <PageSummaryLink
-      name='nameHistory'
-      summary = {props.summary}
+      {...props}
     >
       <SummaryItem
-        title='Previous Names'
-        text={text}
+        title = { translations[props.locale].summaryPage.myHistory.previousNames}
+        text  = {text}
       />
     </PageSummaryLink>
   );
diff --git a/client/presentations/conclusion/summary/my-history/veterans-service.jsx b/client/presentations/conclusion/summary/my-history/veterans-service.jsx
index 6555baf1..157c8830 100644
--- a/client/presentations/conclusion/summary/my-history/veterans-service.jsx
+++ b/client/presentations/conclusion/summary/my-history/veterans-service.jsx
@@ -2,16 +2,16 @@
 
 import React from 'react';
 import * as dataPresent from '../../../../helpers/data-present';
-import PageSummaryLink  from '../Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../containers/page-summary-link.jsx';
 import SummaryItem      from '../summary-item.jsx';
 import { isVeteran }    from '../../../../helpers/data/veteran';
-
+import translations     from '../../../../i18n';
 
 const BenefitInfo = (props) => {
   if (!isVeteran(props)) { return null; }
   return (
     <SummaryItem
-      title='Get benefit information:'
+    title= { translations[props.locale].summaryPage.myHistory.getBenefitsInformation + ':'}
       text={props.veteransService.receiveBenefits}
     />
   )
@@ -21,7 +21,7 @@ const PrintedOnCard = (props) => {
   if (!isVeteran(props)) { return null; }
   return (
     <SummaryItem
-      title='"Veteran" printed on card(s):'
+    title= { translations[props.locale].summaryPage.myHistory.veteranPrintedOnCard + ':'}
       text={props.veteransService.veteransIdentifier}
     />
   )
@@ -29,19 +29,18 @@ const PrintedOnCard = (props) => {
 
 const VeteransService = (props) => {
   if (!dataPresent.veteransService(props.veteransService)) { return null; }
-
+  let locale = props.locale;
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name='veterans'
+      {...props}
     >
       <SummaryItem
-        title='Veteran:'
+        title= { translations[locale].summaryPage.myHistory.veteran + ':'}
         text={props.veteransService.isVeteran}
       />
 
-      <BenefitInfo    veteransService={props.veteransService} />
-      <PrintedOnCard  veteransService={props.veteransService} />
+      <BenefitInfo    veteransService={props.veteransService} locale={locale} />
+      <PrintedOnCard  veteransService={props.veteransService} locale={locale}/>
 
     </PageSummaryLink>
   )
diff --git a/client/presentations/conclusion/summary/organ-donation.jsx b/client/presentations/conclusion/summary/organ-donation.jsx
index 7c99dc17..c987c385 100644
--- a/client/presentations/conclusion/summary/organ-donation.jsx
+++ b/client/presentations/conclusion/summary/organ-donation.jsx
@@ -2,23 +2,24 @@
 import React            from 'react';
 import Accordion        from '../../../containers/accordion.jsx';
 import * as dataPresent from '../../../helpers/data-present';
-import PageSummaryLink  from './Page-summary-link.jsx';
+import PageSummaryLink  from '../../../containers/page-summary-link.jsx';
 import SummaryItem      from './summary-item.jsx';
+import translations     from '../../../i18n';
 
 const Organ = (props) => {
   if (!dataPresent.organDonation(props.organDonation)) { return null; }
+  let locale = props.locale;
 
   return (
     <PageSummaryLink
-      summary = {props.summary}
-      name='organDonation'
+      {...props}
     >
       <SummaryItem
-        title='Be an organ donor'
+        title={ translations[locale].summaryPage.organDonation.beAnOrganDonor}
         text={props.organDonation.donateOrgan}
       />
       <SummaryItem
-        title='Donate $2'
+        title={ translations[locale].summaryPage.organDonation.donate}
         text={props.organDonation.donateMoney}
       />
     </PageSummaryLink>
@@ -30,7 +31,8 @@ const OrganDonation = (props) => {
     <Accordion id='organ-donation-summary' title='Organ donation' key='organ-donation-summary'>
       <Organ
         organDonation       = { props.application.organDonation}
-        summary             = 'summary'
+        editKey             = 'organDonation'
+        locale              = { props.ui.locale }
       />
     </Accordion>
   );
diff --git a/client/presentations/conclusion/summary/real-id.jsx b/client/presentations/conclusion/summary/real-id.jsx
index c8a23c35..d2e2bab2 100644
--- a/client/presentations/conclusion/summary/real-id.jsx
+++ b/client/presentations/conclusion/summary/real-id.jsx
@@ -1,7 +1,7 @@
 'use strict';
 
 import React              from "react";
-import PageSummaryLink    from './Page-summary-link.jsx';
+import PageSummaryLink    from '../../../containers/page-summary-link.jsx';
 
 import {
   Yes,
diff --git a/client/presentations/conclusion/summary/voting.jsx b/client/presentations/conclusion/summary/voting.jsx
index 2aaa4865..dbb384cd 100644
--- a/client/presentations/conclusion/summary/voting.jsx
+++ b/client/presentations/conclusion/summary/voting.jsx
@@ -24,7 +24,6 @@ const Voting = (props) => {
         eligibilityRequirements = { application.voting.eligibilityRequirements}
         dateOfBirth             = { application.basics.dateOfBirth}
         locale                  = { locale }
-        summary                 = 'summary'
         editKey                 = 'citizenship'
       />
       <EligibilityRequirements
@@ -32,7 +31,6 @@ const Voting = (props) => {
         citizenStatus           = { application.voting.citizenStatus}
         dateOfBirth             = { application.basics.dateOfBirth}
         locale                  = { locale }
-        summary                 = 'summary'
         editKey                 = 'votingEligibility'
       />
       <OptOut
@@ -41,7 +39,6 @@ const Voting = (props) => {
         citizenStatus           = {application.voting.citizenStatus}
         dateOfBirth             = {application.basics.dateOfBirth}
         locale                  = { locale }
-        summary                 = 'summary'
         editKey                 = 'votingOptOut'
       />
       <PoliticalPartyChoose
@@ -49,32 +46,32 @@ const Voting = (props) => {
         eligibilityRequirements = {application.voting.eligibilityRequirements}
         citizenStatus           = {application.voting.citizenStatus}
         dateOfBirth             = {application.basics.dateOfBirth}
-        summary                 = 'summary'
         locale                  = { locale }
+        editKey                 = 'choosePoliticalParty'
       />
       <BallotLanguage
         ballotLanguage          = {application.basics.language.ballotLanguage}
         eligibilityRequirements = {application.voting.eligibilityRequirements}
         citizenStatus           = {application.voting.citizenStatus}
         dateOfBirth             = {application.basics.dateOfBirth}
-        summary                 = 'summary'
         locale                  = { locale }
+        editKey                 = 'chooseBallotLanguage'
       />
       <BallotByMail
         ballotByMail            = {application.voting.ballotByMail}
         eligibilityRequirements = {application.voting.eligibilityRequirements}
         citizenStatus           = {application.voting.citizenStatus}
         dateOfBirth             = {application.basics.dateOfBirth}
-        summary                 = 'summary'
         locale                  = { locale }
+        editKey                 = 'ballotByMail'
       />
       <ContactMethods
         contactMethods          = {application.voting.contactMethods}
         eligibilityRequirements = {application.voting.eligibilityRequirements}
         citizenStatus           = {application.voting.citizenStatus}
         dateOfBirth             = {application.basics.dateOfBirth}
-        summary                 = 'summary'
         locale                  = { locale }
+        editKey                 = 'contactMethods'
       />
     </Accordion>
   )
diff --git a/client/presentations/conclusion/summary/voting/ballot-by-mail.jsx b/client/presentations/conclusion/summary/voting/ballot-by-mail.jsx
index 9248dd40..8908d987 100644
--- a/client/presentations/conclusion/summary/voting/ballot-by-mail.jsx
+++ b/client/presentations/conclusion/summary/voting/ballot-by-mail.jsx
@@ -2,15 +2,14 @@
 
 import React                    from 'react';
 import translations             from '../../../../i18n';
-import { 
+import {
   ballotByMailSelected,
   eligibilityRequirementsYes,
   eligibleForCitizen
 } from '../../../../helpers/data/voting';
-import { ageChecks }           from '../../../../helpers/calculate-age';
-
-import PageSummaryLink  from '../Page-summary-link.jsx';
-import SummaryItem      from '../summary-item.jsx';
+import { ageChecks }            from '../../../../helpers/calculate-age';
+import PageSummaryLink          from '../../../../containers/page-summary-link.jsx';
+import SummaryItem              from '../summary-item.jsx';
 
 const BallotByMail = (props) => {
   let locale = props.locale;
@@ -19,8 +18,7 @@ const BallotByMail = (props) => {
   {
     return (
       <PageSummaryLink
-        to='/voting-registration/vote-by-mail'
-        name='ballotByMail'
+        {...props}
       >
         <SummaryItem
           title={translations[locale].summaryPage.voterRegistration.voteByMail}
diff --git a/client/presentations/conclusion/summary/voting/ballot-language.jsx b/client/presentations/conclusion/summary/voting/ballot-language.jsx
index ad3f5831..5771afcc 100644
--- a/client/presentations/conclusion/summary/voting/ballot-language.jsx
+++ b/client/presentations/conclusion/summary/voting/ballot-language.jsx
@@ -8,7 +8,7 @@ import {
 } from '../../../../helpers/data/voting';
 import { ageChecks }                from '../../../../helpers/calculate-age';
 import translations                 from '../../../../i18n';
-import PageSummaryLink              from '../Page-summary-link.jsx';
+import PageSummaryLink              from '../../../../containers/page-summary-link.jsx';
 import SummaryItem                  from '../summary-item.jsx';
 
 
@@ -55,8 +55,7 @@ const BallotLanguage = (props) => {
   {
     return (
       <PageSummaryLink
-        to='/voting-registration/language'
-        name='chooseBallotLanguage'
+        {...props}
       >
         <SummaryItem
           title={translations[locale].summaryPage.voterRegistration.ballotLanguage}
diff --git a/client/presentations/conclusion/summary/voting/choose-party.jsx b/client/presentations/conclusion/summary/voting/choose-party.jsx
index 98ee4d69..c2c4d782 100644
--- a/client/presentations/conclusion/summary/voting/choose-party.jsx
+++ b/client/presentations/conclusion/summary/voting/choose-party.jsx
@@ -2,7 +2,7 @@
 
 import React from 'react';
 
-import PageSummaryLink              from '../Page-summary-link.jsx';
+import PageSummaryLink              from '../../../../containers/page-summary-link.jsx';
 import SummaryItem                  from '../summary-item.jsx';
 import {
   politicalPartySelected,
@@ -21,8 +21,7 @@ const PoliticalPartyChoose = (props) => {
   {
     return (
       <PageSummaryLink
-        to='/voting-registration/choose-party'
-        name='choosePoliticalParty'
+        {...props}
       >
         <SummaryItem
           title={translations[locale].summaryPage.voterRegistration.politicalParty}
diff --git a/client/presentations/conclusion/summary/voting/citizen-status.jsx b/client/presentations/conclusion/summary/voting/citizen-status.jsx
index 238f3230..74b90bc2 100644
--- a/client/presentations/conclusion/summary/voting/citizen-status.jsx
+++ b/client/presentations/conclusion/summary/voting/citizen-status.jsx
@@ -10,7 +10,7 @@ import {
  }  from '../../../../helpers/data/voting';
 import { hasValue }                 from '../../../../helpers/data/validations';
 import { ageChecks }                from '../../../../helpers/calculate-age';
-import PageSummaryLink              from '../Page-summary-link.jsx';
+import PageSummaryLink              from '../../../../containers/page-summary-link.jsx';
 import SummaryItem                  from '../summary-item.jsx';
 import * as dataPresent             from '../../../../helpers/data-present';
 
@@ -57,8 +57,7 @@ const CitizenStatus = (props) => {
   if ((declineToAnswer(props.citizenStatus)) || (!ageChecks.Under16(props.dateOfBirth, now)) && (citizenStatusNotChosen(props))) {
     return (
       <PageSummaryLink
-        summary={props.summary}
-        name={props.editKey}
+        {...props}
       >
         <SummaryItem
           title={translations[locale].summaryPage.voterRegistration.citizen}
@@ -69,8 +68,7 @@ const CitizenStatus = (props) => {
   }
   return (
     <PageSummaryLink
-      summary={props.summary}
-      name={props.editKey}
+      {...props}
     >
       <Yes     {...props}   citizenStatus={props.citizenStatus} />
       <Decline {...props}   citizenStatus={props.citizenStatus} />
diff --git a/client/presentations/conclusion/summary/voting/contact-methods.jsx b/client/presentations/conclusion/summary/voting/contact-methods.jsx
index bb6b8dd9..06071235 100644
--- a/client/presentations/conclusion/summary/voting/contact-methods.jsx
+++ b/client/presentations/conclusion/summary/voting/contact-methods.jsx
@@ -14,7 +14,7 @@ import {
   shouldContact,
   skipAnswer
 } from '../../../../helpers/data/contact-methods';
-import PageSummaryLink              from '../Page-summary-link.jsx';
+import PageSummaryLink              from '../../../../containers/page-summary-link.jsx';
 import SummaryItem                  from '../summary-item.jsx';
 
 const title = <div className='translation-missing'>Should Contact</div>;
@@ -49,21 +49,20 @@ const ContactMethods = (props) => {
   } else if (skipAnswer(props)) {
     contactMethods = <p>{translations[locale].shared.commonAnswers.skip}</p>
   };
-  
+
   let now = props.now ? props.now : new Date();
   if ((!ageChecks.Under16(props.dateOfBirth, now)) && (eligibleForCitizen(props)) && (eligibilityRequirementsYes(props)))
   {
     return (
     <PageSummaryLink
-      to='/voting-registration/contact-methods'
-      name='contactMethods'
+      {...props}
     >
-    <SummaryItem
+      <SummaryItem
         title={title}
         text={contactMethods}
       />
       <EmailAddress {...props} />
-      <PhoneNumber  {...props} /> 
+      <PhoneNumber  {...props} />
     </PageSummaryLink>
     )
   }
diff --git a/client/presentations/conclusion/summary/voting/eligibility-requirements.jsx b/client/presentations/conclusion/summary/voting/eligibility-requirements.jsx
index f30b5e52..b17b315d 100644
--- a/client/presentations/conclusion/summary/voting/eligibility-requirements.jsx
+++ b/client/presentations/conclusion/summary/voting/eligibility-requirements.jsx
@@ -9,7 +9,7 @@ import {
 }  from '../../../../helpers/data/voting';
 import { hasValue }            from '../../../../helpers/data/validations';
 import { ageChecks }           from '../../../../helpers/calculate-age';
-import PageSummaryLink         from '../Page-summary-link.jsx';
+import PageSummaryLink         from '../../../../containers/page-summary-link.jsx';
 import SummaryItem             from '../summary-item.jsx';
 import * as dataPresent        from '../../../../helpers/data-present';
 
@@ -55,8 +55,7 @@ const EligibilityRequirements = (props) => {
   if ((declineToAnswer(props.eligibilityRequirements)) || (!ageChecks.Under16(props.dateOfBirth, now)) && (eligibilityNotChosen(props))) {
     return (
       <PageSummaryLink
-        summary={props.summary}
-        name={props.editKey}
+        {...props}
       >
         <SummaryItem
           title={translations[locale].summaryPage.voterRegistration.eligible}
@@ -67,8 +66,7 @@ const EligibilityRequirements = (props) => {
   }
   return (
     <PageSummaryLink
-      summary={props.summary}
-      name={props.editKey}
+      {...props}
     >
       <Yes        {...props} />
       <Decline    {...props} />
diff --git a/client/presentations/conclusion/summary/voting/opt-out.jsx b/client/presentations/conclusion/summary/voting/opt-out.jsx
index 95a090bf..08f5e00e 100644
--- a/client/presentations/conclusion/summary/voting/opt-out.jsx
+++ b/client/presentations/conclusion/summary/voting/opt-out.jsx
@@ -9,10 +9,10 @@ import {
   eligibilityRequirementsYes,
   eligibleForCitizen
 }   from '../../../../helpers/data/voting';
-import { ageChecks }                from '../../../../helpers/calculate-age';
+import { ageChecks }            from '../../../../helpers/calculate-age';
 
-import PageSummaryLink         from '../Page-summary-link.jsx';
-import SummaryItem             from '../summary-item.jsx';
+import PageSummaryLink          from '../../../../containers/page-summary-link.jsx';
+import SummaryItem              from '../summary-item.jsx';
 
 const OptOut = (props) => {
   let locale = props.locale;
@@ -30,8 +30,7 @@ const OptOut = (props) => {
   if ((!ageChecks.Under16(props.dateOfBirth, now)) && (eligibleForCitizen(props)) && (eligibilityRequirementsYes(props))) {
     return (
       <PageSummaryLink
-        summary={props.summary}
-        name={props.editKey}
+        {...props}
       >
         <SummaryItem
           title={translations[locale].summaryPage.voterRegistration.registrationChoice}
diff --git a/client/presentations/get-started/correct-or-update-page.jsx b/client/presentations/get-started/correct-or-update-page.jsx
index 64788fbc..1229fe1c 100644
--- a/client/presentations/get-started/correct-or-update-page.jsx
+++ b/client/presentations/get-started/correct-or-update-page.jsx
@@ -45,6 +45,7 @@ const Form = (props) => {
           <RadioForm
             {...props}
             formName  = { formName }
+            selectedValue = { props.cardChanges.correctOrUpdate }
           />
           <UpdateForm
             {...props}
diff --git a/client/presentations/get-started/intro-page/correcting-id-info.jsx b/client/presentations/get-started/intro-page/correcting-id-info.jsx
index d6f2787e..8a9adcdc 100644
--- a/client/presentations/get-started/intro-page/correcting-id-info.jsx
+++ b/client/presentations/get-started/intro-page/correcting-id-info.jsx
@@ -11,7 +11,7 @@ import { correctID }          from '../../../helpers/data/card-type';
 
 const Senior = (props) => {
   let locale = props.locale;
-  if (!gettingSeniorID(props)) { return null; }
+  if (!gettingSeniorID(props.IDApp)) { return null; }
   return convertToHtml('p', translations[locale].intro.getStartedPage.whatYouAreDoing.correctingSeniorID);
 };
 
@@ -23,7 +23,7 @@ const Reduced = (props) => {
 
 const Regular = (props) => {
   let locale = props.locale;
-  if (gettingSeniorID(props) || choosingReducedFee(props.IDApp)) { return null; }
+  if (gettingSeniorID(props.IDApp) || choosingReducedFee(props.IDApp)) { return null; }
   return convertToHtml('p', translations[locale].intro.getStartedPage.whatYouAreDoing.correctingID);
 };
 
diff --git a/client/presentations/get-started/intro-page/updating-id-info.jsx b/client/presentations/get-started/intro-page/updating-id-info.jsx
index cfb1882d..3422b2ca 100644
--- a/client/presentations/get-started/intro-page/updating-id-info.jsx
+++ b/client/presentations/get-started/intro-page/updating-id-info.jsx
@@ -8,7 +8,7 @@ import { choosingReducedFee } from '../../../helpers/data/reduced-fee';
 import { convertToHtml } from '../../../i18n/convert-to-html.jsx';
 
 const Senior = (props) => {
-  if (!gettingSeniorID(props)) { return null; }
+  if (!gettingSeniorID(props.IDApp)) { return null; }
   let locale = props.locale;
   return convertToHtml('p', translations[locale].intro.getStartedPage.whatYouAreDoing.updatingSeniorID);
 };
@@ -20,7 +20,7 @@ const Reduced = (props) => {
 };
 
 const Regular = (props) => {
-  if (gettingSeniorID(props) || choosingReducedFee(props.IDApp)) { return null; }
+  if (gettingSeniorID(props.IDApp) || choosingReducedFee(props.IDApp)) { return null; }
   let locale = props.locale;
   return convertToHtml('p', translations[locale].intro.getStartedPage.whatYouAreDoing.updatingID);
 };
diff --git a/client/presentations/get-started/what-do-you-want-to-do-today-page.jsx b/client/presentations/get-started/what-do-you-want-to-do-today-page.jsx
index f6792888..905284fc 100644
--- a/client/presentations/get-started/what-do-you-want-to-do-today-page.jsx
+++ b/client/presentations/get-started/what-do-you-want-to-do-today-page.jsx
@@ -10,9 +10,8 @@ import translations         from '../../i18n';
 import { convertToHtml }    from '../../i18n/convert-to-html.jsx';
 import Translate            from '../../i18n/translate-tag.jsx';
 import {
-  getTextFromPathname,
-  onIDFlow
-}  from '../../helpers/data/pathnames';
+  getCorrectString
+}  from '../../helpers/data/card-type';
 
 const Form = (props) => {
   let locale = props.locale;
@@ -37,15 +36,15 @@ const Form = (props) => {
     ]
   };
 
-  let text = getTextFromPathname(
+  let text = getCorrectString(
     props,
-    translations[locale].intro.wdywtdtPage,
     tempObjectThatNeedsTranslations,
-    anotherTempObjectThatNeedsTranslation
+    anotherTempObjectThatNeedsTranslation,
+    translations[locale].intro.wdywtdtPage,
   );
 
-  let name = getTextFromPathname(
-    props, 'cardAction', 'DLAction', 'IDAction'
+  let name = getCorrectString(
+    props, 'DLAction', 'IDAction', 'cardAction',
   );
 
   return (
@@ -63,7 +62,7 @@ const Form = (props) => {
         </Translate>
 
         <form onSubmit= { props.onSubmit }>
-          <div className='row inner-buttom'>
+          <div className='row inner-button'>
             <fieldset>
               <RadioCollection
                 {...props}
diff --git a/client/presentations/home.jsx b/client/presentations/home.jsx
index 712e7b91..78b2f6d0 100644
--- a/client/presentations/home.jsx
+++ b/client/presentations/home.jsx
@@ -7,9 +7,15 @@ import linkData from '../helpers/navigation/pages';
 
 const LinkListItem = (props) => {
   let className = props.description.replace(/\s+/g, '-');
+  let urlPath = props.path;
+  if (typeof(urlPath) !== 'string') {
+    urlPath = urlPath({
+      flow: ''
+    });
+  }
   return (
     <li style={{padding: '0px'}}>
-      <Link className={className} to={ props.path }>{props.description}</Link>
+      <Link className={className} to={ urlPath }>{props.description}</Link>
     </li>
   );
 };
@@ -67,13 +73,6 @@ const Home = () => {
         <LinkSection name='IDDL Conclusion'>
           { wrapGroup(linkData.iddl.conclusion) }
         </LinkSection>
-        <LinkSection name='Add DL'>
-          { wrapGroup(linkData.iddl.addDL) }
-        </LinkSection>
-        <LinkSection name='Add ID'>
-          { wrapGroup(linkData.iddl.addID) }
-        </LinkSection>
-
         <hr/>
         <h3>CDL App</h3>
         <LinkSection name='CDL Get Started'>
diff --git a/client/presentations/my-history/names-history-page.jsx b/client/presentations/my-history/names-history-page.jsx
index 002080bd..ca021aff 100644
--- a/client/presentations/my-history/names-history-page.jsx
+++ b/client/presentations/my-history/names-history-page.jsx
@@ -22,6 +22,7 @@ const NamesHistoryPage = (props) => {
       {convertToHtml('h2', translations[locale].myHistory.nameHistoryPage.pagePrompt, 'question')}
         <UsedPreviousNames
           {...props}
+          selectedValue = { props.namesHistory.hasUsedPreviousNames}
         />
         <EnterPreviousNames
           {...props}
diff --git a/client/presentations/page-summary-link.jsx b/client/presentations/page-summary-link.jsx
new file mode 100644
index 00000000..100316ff
--- /dev/null
+++ b/client/presentations/page-summary-link.jsx
@@ -0,0 +1,52 @@
+'use strict';
+
+import React              from 'react';
+import { Link }           from 'react-router-dom';
+import { pathForPage }    from '../helpers/navigation/page';
+import translations       from '../i18n';
+import { addOrEdit }      from '../helpers/data/pathnames';
+
+
+const LinkPresentation = (props) => {
+  let className = `${props.editKey} summary edit button ${props.cardType}`;
+
+  let addText = 'Add';
+  let editText = translations[props.locale].summaryPage.buttons.edit;
+
+  let buttonText = addOrEdit(props, addText, editText);
+  let flow = addOrEdit(props, 'add', 'edit');
+  let flowChange = props.onFlowChange;
+  let cardType  = props.cardType;
+
+  let linkTo = {
+    pathname: pathForPage(props.editKey, {
+      flow: flow
+    })
+  };
+
+  const handleClick = (props) => {
+    return flowChange(flow, cardType);
+  };
+
+  return (
+    <div className='summary-section'>
+      <div className='row'>
+        <div className='unit summary-content'>
+          {props.children}
+        </div>
+        <div className='shadow-container unit-right' onClick={handleClick}>
+          <Link
+            to={linkTo}
+            className= {className}
+          >
+            <div className='unit edit-icon'></div>
+            <div className='unit text-area'>{buttonText}</div>
+          </Link>
+        </div>
+      </div>
+      <hr/>
+    </div>
+  )
+};
+
+export default LinkPresentation;
\ No newline at end of file
diff --git a/client/reducers/application/dl-app/update-dl-action.js b/client/reducers/application/dl-app/update-dl-action.js
index 21241845..5b0c246a 100644
--- a/client/reducers/application/dl-app/update-dl-action.js
+++ b/client/reducers/application/dl-app/update-dl-action.js
@@ -24,7 +24,10 @@ const formReducer = (state = defaultState(), action) => {
         newState = 'new';
       }
     }
-    else if (value === 'DL'){
+    else if (action.payload.name === 'addFromSummary') {
+      newState = state;
+    }
+    else if (value === 'DL' ){
       newState =  action.payload.name;
     }
   }
@@ -43,11 +46,6 @@ const formReducer = (state = defaultState(), action) => {
       newState = 'new';
     }
   }
-
-  else if (action.type === TYPES.ADD_APP) {
-    newState = state;
-  }
-
   return newState;
 };
 export default formReducer;
\ No newline at end of file
diff --git a/client/reducers/application/dl-app/update-dl.js b/client/reducers/application/dl-app/update-dl.js
index f635275e..8da686a3 100644
--- a/client/reducers/application/dl-app/update-dl.js
+++ b/client/reducers/application/dl-app/update-dl.js
@@ -1,7 +1,11 @@
 'use strict';
 
 import { TYPES }            from '../../../actions';
-import { cardTypeAction }   from '../../../helpers/reducers';
+import {
+  cardTypeAction,
+  sameIfAdding,
+  trueIfYesNeverFalse
+}   from '../../../helpers/reducers';
 import { driverLicense }    from '../../../helpers/data/pathnames';
 
 const defaultState = () => {
@@ -13,6 +17,7 @@ const formReducer = (state = defaultState(), action) => {
   if (!cardTypeAction(action)) { return state; }
 
   let newState = false;
+  let name = action.payload.name;
 
   if (action.type === TYPES.UPDATE_CARD_TYPE) {
     let value = action.payload.value.split('-');
@@ -23,6 +28,8 @@ const formReducer = (state = defaultState(), action) => {
       else {
         newState = action.payload.value === 'DL-true';
       }
+    } else if( name === 'addFromSummary') {
+      newState = trueIfYesNeverFalse(action.payload.value, 'DL', state);
     }
     else {
       newState = action.payload.value === 'DL';
@@ -30,18 +37,7 @@ const formReducer = (state = defaultState(), action) => {
   }
 
   else if (action.type === TYPES.UPDATE_CARD_ACTION) {
-
-    if (action.payload.name === 'DLAction' || action.payload.name === 'IDAction') {
-      newState = state;
-    }
-  }
-
-  else if (action.type === TYPES.ADD_APP ){
-    if (driverLicense(action.payload.value)) {
-      newState = true;
-    } else {
-      newState = state;
-    }
+    newState = sameIfAdding(name, state);
   }
 
   else if (action.type === TYPES.UPDATE_YOUTH_ID_INSTEAD) {
diff --git a/client/reducers/application/id-app/update-id-action.js b/client/reducers/application/id-app/update-id-action.js
index 31eea2d7..4f8ea9b7 100644
--- a/client/reducers/application/id-app/update-id-action.js
+++ b/client/reducers/application/id-app/update-id-action.js
@@ -25,6 +25,9 @@ const formReducer = (state = defaultState(), action) => {
         newState = 'new';
       }
     }
+    else if (action.payload.name === 'addFromSummary') {
+      newState = state;
+    }
     else if (value === 'ID'){
       newState = name;
     }
@@ -48,10 +51,6 @@ const formReducer = (state = defaultState(), action) => {
     }
   }
 
-  else if (action.type === TYPES.ADD_APP) {
-    newState = state;
-  }
-
   return newState;
 
 };
diff --git a/client/reducers/application/id-app/update-id.js b/client/reducers/application/id-app/update-id.js
index ece63752..4c03ac24 100644
--- a/client/reducers/application/id-app/update-id.js
+++ b/client/reducers/application/id-app/update-id.js
@@ -1,17 +1,23 @@
 'use strict';
 
 import { TYPES }            from '../../../actions';
-import { cardTypeAction }   from '../../../helpers/reducers';
+import {
+  cardTypeAction,
+  sameIfAdding,
+  trueIfYesNeverFalse
+}   from '../../../helpers/reducers';
 
 const defaultState = () => {
  return false;
 };
 
+
 const formReducer = (state = defaultState(), action) => {
   if (!action.payload) { return state; }
   if ( !cardTypeAction(action) ) { return state; }
 
   let newState = false;
+  let name = action.payload.name;
 
   if (action.type === TYPES.UPDATE_CARD_TYPE) {
     let value = action.payload.value.split('-');
@@ -22,30 +28,20 @@ const formReducer = (state = defaultState(), action) => {
       else {
         newState = action.payload.value === 'ID-true';
       }
+    } else if(name === 'addFromSummary'){
+      newState = trueIfYesNeverFalse(action.payload.value, 'ID', state);
+
     } else {
       newState = action.payload.value === 'ID';
     }
   }
 
   else if (action.type === TYPES.UPDATE_CARD_ACTION){
-    if (action.payload.name === 'IDAction') {
-      newState = state;
-    }
-    else if (action.payload.name === 'DLAction') {
-      newState = state;
-    }
-  }
-
-  else if (action.type === TYPES.ADD_APP){
-    if (action.payload.value === 'id-card') {
-      newState = true;
-    } else {
-      newState = state;
-    }
+    newState = sameIfAdding(name, state);
   }
 
   else if (action.type === TYPES.UPDATE_YOUTH_ID_INSTEAD) {
-    if (action.payload.name === 'youthIDOnly') {
+    if (name === 'youthIDOnly') {
       newState = true;
     }
     else {
diff --git a/client/reducers/application/update-card-action.js b/client/reducers/application/update-card-action.js
index 9c5202aa..24cc0b33 100644
--- a/client/reducers/application/update-card-action.js
+++ b/client/reducers/application/update-card-action.js
@@ -1,19 +1,22 @@
 'use strict';
 
 import { TYPES }            from '../../actions';
+import formValueReducer     from './../form-value-reducer';
 
 const defaultState = () =>  {
   return '';
 };
 
-const formReducer = (state = defaultState(), action) => {
-  if (!action.payload) { return state; }
-  if (action.type !== TYPES.ADD_APP && action.type !== TYPES.UPDATE_CARD_ACTION) { return state; }
+export default formValueReducer(defaultState, TYPES.UPDATE_CARD_ACTION);
 
-  if (action.type === TYPES.UPDATE_CARD_ACTION) {
-    return action.payload.value;
-  }
-  return defaultState();
-};
 
-export default formReducer;
\ No newline at end of file
+// const formReducer = (state = defaultState(), action) => {
+//   if (!action.payload) { return state; }
+//   if (action.type !== TYPES.UPDATE_CARD_ACTION) { return state; }
+
+//     return action.payload.value;
+
+//   return defaultState();
+// };
+
+// export default formReducer;
\ No newline at end of file
diff --git a/client/reducers/application/update-card-type.js b/client/reducers/application/update-card-type.js
index d43b4d63..4ac2647b 100644
--- a/client/reducers/application/update-card-type.js
+++ b/client/reducers/application/update-card-type.js
@@ -15,10 +15,13 @@ const defaultState = () => {
 const formReducer = (state = defaultState(), action) => {
   if (!action.payload) { return state;}
   if (!cardTypeAction(action)){ return state; }
-
   let newState = [];
   if (action.type === TYPES.UPDATE_CARD_TYPE) {
-    newState = formValueArrayReducer(action, state);
+    if (action.payload.name === 'addFromSummary') {
+      newState.push(action.payload.value);
+    } else {
+      newState = formValueArrayReducer(action, state);
+    }
   }
 
   else if (action.type === TYPES.UPDATE_CARD_ACTION) {
@@ -27,14 +30,6 @@ const formReducer = (state = defaultState(), action) => {
     }
   }
 
-  else if (action.type === TYPES.ADD_APP) {
-    if (driverLicense(action.payload.value)) {
-      newState = ['DL'];
-    } else if (idCard(action.payload.value)) {
-      newState = ['ID'];
-    }
-  }
-
   else if (action.type === TYPES.UPDATE_YOUTH_ID_INSTEAD) {
     if (action.payload.value === 'Yes') {
       newState = ['ID'];
@@ -44,7 +39,6 @@ const formReducer = (state = defaultState(), action) => {
     }
     else { newState = ['DL']; }
   }
-
   return newState;
 };
 
diff --git a/client/reducers/ui/add-app.js b/client/reducers/ui/app-type.js
similarity index 100%
rename from client/reducers/ui/add-app.js
rename to client/reducers/ui/app-type.js
diff --git a/client/reducers/ui/index.js b/client/reducers/ui/index.js
index c5f54171..1d9969fd 100644
--- a/client/reducers/ui/index.js
+++ b/client/reducers/ui/index.js
@@ -7,7 +7,7 @@ import accordions           from './accordions';
 import section              from './section';
 import validations          from './validations';
 import hover                from './hover';
-import addApp               from './add-app';
+import flow                 from './app-type';
 import chooseApp            from './choose-app';
 import locale               from './locale';
 
@@ -17,7 +17,7 @@ const rootReducer = combineReducers({
   section,
   validations,
   hover,
-  addApp,
+  flow  ,
   chooseApp,
   locale
 });
diff --git a/package-lock.json b/package-lock.json
index 5f6bca07..85ed75b1 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -3025,7 +3025,6 @@
       "version": "2.6.9",
       "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
       "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
-      "dev": true,
       "requires": {
         "ms": "2.0.0"
       }
diff --git a/test/client/helpers/data/cdl-test.js b/test/client/helpers/data/cdl-test.js
index 9157ccbf..a4a4c6a4 100644
--- a/test/client/helpers/data/cdl-test.js
+++ b/test/client/helpers/data/cdl-test.js
@@ -18,7 +18,7 @@ describe('Data helpers for cdl data', function() {
   let props;
   beforeEach(function() {
     props = {
-      addApp: '',
+      chooseApp: '',
       dateOfBirth: {
         month: '03',
         day: '10',
@@ -28,18 +28,18 @@ describe('Data helpers for cdl data', function() {
   });
   describe('#showCDLUnder21', function() {
     it('returns false when user is on regular IDDL application', function() {
-      props.addApp = 'iddl';
+      props.chooseApp = 'iddl';
       assert.equal(showCDLUnder21(props), false);
     });
 
     it('returns false when user is older than 21', function() {
-      props.addApp = 'cdl';
+      props.chooseApp = 'cdl';
       props.dateOfBirth = '1970';
       assert.equal(showCDLUnder21(props), false);
     });
 
     it('returns true when user is under than 21 and is on cdl application', function() {
-      props.addApp = 'cdl';
+      props.chooseApp = 'cdl';
       assert.equal(showCDLUnder21(props), true);
     });
   });
diff --git a/test/client/helpers/data/pathnames-test.js b/test/client/helpers/data/pathnames-test.js
index 1940b45c..1cca6729 100644
--- a/test/client/helpers/data/pathnames-test.js
+++ b/test/client/helpers/data/pathnames-test.js
@@ -3,120 +3,44 @@
 const assert = require('assert');
 
 import {
-  onIDFlow,
   getTextFromState,
-  getTextFromPathname,
-  addingApp,
-  splitPathname,
   getActionFromState,
   hasChosenApp,
-  goToSummary
+  editMode,
+  addOrEdit,
+  goToCardHistory,
+  nextOrSummary,
+  applyEditOrAddPath,
+  applyOrEditCDLPath
 } from '../../../../client/helpers/data/pathnames';
 
+
 describe('Data helpers for pathnames', function() {
 
   let props;
-    beforeEach(function() {
-      props = {
-        location: {
-          pathname: '',
-          nextAddress: ''
-        }
-      };
-    });
-  describe('#onIDFlow', function() {
-
-    it('returns true if pathname begins with string /add/id-card', function() {
-      props.location.pathname = '/add/id-card';
-      assert.equal(onIDFlow(props), true);
-    });
-
-    it('returns false if pathname begins with string /apply/', function() {
-      props.location.pathname = '/apply/what-do-you-want-to-do-today';
-      assert.equal(onIDFlow(props), false);
-    });
+  beforeEach(function() {
+    props = {
+      flow: ''
+    };
   });
 
   describe('#getTextFromState', function() {
+    const iddlText = 'normal flow';
+    const altText = 'adding or editing card';
 
-    const applyString = 'I am going through the initial flow';
-    const addString = 'I am adding another card after reaching the summary';
-
-    beforeEach(function() {
-      props = {
-        addApp: ''
-      }
-    });
-
-    it('returns third argument if addApp state is "driver-license"', function() {
-      props.addApp = 'driver-license';
-      assert.deepEqual(getTextFromState(props, applyString, addString), addString);
-    });
-
-    it('returns the second argument if addApp state is blank', function() {
-      assert.deepEqual(getTextFromState(props, applyString, addString), applyString);
-    });
-
-    it('returns the third argument if addApp state is "id-card"', function() {
-      props.addApp = 'id-card';
-      assert.deepEqual(getTextFromState(props, applyString, addString), addString);
-    });
-  });
-
-  describe('#getTextFromPathname', function() {
-    const DLText = 'Now I want to add a DL';
-    const IDText = 'Now I want to add an ID';
-    const initialText = 'This is the regular initial flow';
-
-    beforeEach(function() {
-      props = {
-        location: {
-          pathname: ''
-        },
-        sectionKey: 'intro'
-      };
-    });
-
-    it('returns DLString if user is on a url to add DL to existing app', function() {
-      props.location.pathname = '/add/driver-license/';
-      assert.equal(getTextFromPathname(props, initialText, DLText, IDText), DLText);
+    it('returns 2nd argument if user is not editing or adding card', function() {
+      assert.equal(getTextFromState(props, iddlText, altText), iddlText);
     });
-
-    it('returns "id-card" if user is on a url to add an ID to existing application', function() {
-      props.location.pathname = '/add/id-card/';
-      assert.equal(getTextFromPathname(props, initialText, DLText, IDText), IDText);
+    it('returns 3rd argument if user is editing card', function() {
+      props.flow = 'edit';
+      assert.equal(getTextFromState(props, iddlText, altText), altText);
     });
-
-    it('returns the second argument if user is on initial flow', function() {
-      assert.equal(getTextFromPathname(props, initialText, DLText, IDText), initialText);
+    it('returns 3rd argument if user is adding card', function() {
+      props.flow = 'add';
+      assert.equal(getTextFromState(props, iddlText, altText), altText);
     });
   });
 
-  describe('#addingApp', function() {
-    it('returns true if value equals "driver-license"', function() {
-      assert.equal(addingApp('driver-license'), true);
-    });
-
-    it('returns true if value equals "id-card"', function() {
-      assert.equal(addingApp('id-card'), true);
-    });
-
-    it('returns false if value equals "intro"', function() {
-      assert.equal(addingApp('intro'), false);
-    });
-  });
-
-  describe('#splitPathname', function() {
-    it('returns "driver-license" in the url for the add DL wdywtdt page', function() {
-      let pathname = '/add/driver-license/what-do-you-want-to-do-today';
-      assert.equal(splitPathname(pathname), 'driver-license');
-    });
-
-    it('returns "id-card" in the url for the add ID wdywtdt url', function() {
-      let pathname = '/add/id-card/what-do-you-want-to-do-today';
-      assert.equal(splitPathname(pathname), 'id-card');
-    });
-  });
 
   describe('#getActionFromState', function() {
     let state;
@@ -129,24 +53,44 @@ describe('Data helpers for pathnames', function() {
           },
           IDApp: {
             action: 'ID action'
-          }
+          },
+          cardType: ''
         },
         ui: {
-          addApp: ''
+          flow: ''
         }
       };
-    })
-    it('returns the DLApp action if addApp state is "driver-license"', function() {
-      state.ui.addApp = 'driver-license';
-      assert.equal(getActionFromState(state), state.application.DLApp.action);
     });
-    it('returns the IDApp action if addApp state is "id-card"', function() {
-      state.ui.addApp = 'id-card';
-      assert.equal(getActionFromState(state), state.application.IDApp.action);
-    });
-    it('returns the default cardAction if page is regular flow', function() {
-      state.ui.addApp = 'id-and-card';
-      assert.equal(getActionFromState(state), state.application.cardAction);
+    describe('##normal flow', function() {
+      it('returns the default cardAction if page is regular flow', function() {
+        assert.equal(getActionFromState(state), state.application.cardAction);
+      });
+    });
+    describe('##editing', function() {
+      beforeEach(function() {
+        state.ui.flow = 'edit';
+      });
+      it('returns the DLApp action if user is editing DL card', function() {
+        state.application.cardType = ['DL'];
+        assert.equal(getActionFromState(state), state.application.DLApp.action);
+      });
+      it('returns the IDApp action if user is editing ID card', function() {
+        state.application.cardType = ['ID'];
+        assert.equal(getActionFromState(state), state.application.IDApp.action);
+      });
+    });
+    describe('##adding', function() {
+      beforeEach(function() {
+        state.ui.flow = 'add';
+      });
+      it('returns the DLApp action if user is adding DL card', function() {
+        state.application.cardType = ['DL'];
+        assert.equal(getActionFromState(state), state.application.DLApp.action);
+      });
+      it('returns the IDApp action if user is adding ID card', function() {
+        state.application.cardType = ['ID'];
+        assert.equal(getActionFromState(state), state.application.IDApp.action);
+      });
     });
   });
 
@@ -171,27 +115,99 @@ describe('Data helpers for pathnames', function() {
     });
   });
 
-  describe('#goToSummary', function() {
-    it('returns false if props location does not have state object', function() {
-      assert.equal(goToSummary(props), false);
-    });
-    it('returns false if location state nextAddress does not equal "summary" or "cdlSummary"', function() {
-      props.location.state = {
-        nextAddress: 'someOtherOne'
+  describe('#editMode', function() {
+    it('returns true if page has validateFromSummary property that is true', function() {
+      let props = {
+        addressName: 'legalName'
       };
-      assert.equal(goToSummary(props), false);
+      assert.equal(editMode(props), true);
     });
-    it('returns true if location state nextAddress equals "summary"', function() {
-      props.location.state = {
-        nextAddress: 'summary'
+
+    it('returns false if page does not have validateFromSummary property', function() {
+      let props = {
+        addressName: 'reducedFeeID'
       };
-      assert.equal(goToSummary(props), true);
+      assert.equal(editMode(props), false);
     });
-    it('returns true if location state nextAddress equals "cdlSummary"', function() {
-      props.location.state = {
-        nextAddress: 'cdlSummary'
-      };
-      assert.equal(goToSummary(props), true);
+  });
+
+  describe('#addOrEdit', function() {
+    it('returns "Add" if props have add key', function() {
+      props.add = true;
+      assert.equal(addOrEdit(props, 'Add', 'Edit'), 'Add');
+    });
+    it('returns "Edit" if props does not have add key', function() {
+      assert.equal(addOrEdit(props, 'Add', 'Edit'), 'Edit');
+    });
+  });
+
+  describe('#goToCardHistory', function() {
+    beforeEach(function() {
+      props.cardAction = '';
+      props.licenseAndIdHistory = {
+        DLIDNumber: '',
+        month: '',
+        day: '',
+        year: '',
+        isIssued: '',
+        issuedBy: ''
+      }
+    });
+
+
+    it('returns false if user has an existing card', function() {
+      props.cardAction = 'renew';
+      assert.equal(goToCardHistory(props), false);
+    });
+    it('returns false if user has a new card but has already entered licenseAndIdHistory', function() {
+      props.cardAction = 'new';
+      props.licenseAndIdHistory.isIssued = 'No';
+      assert.equal(goToCardHistory(props), false);
+    });
+    it('returns true if user has a new card and has not entered any license and id history', function() {
+      props.cardAction = 'new';
+      assert.equal(goToCardHistory(props), true);
+    });
+  });
+
+  describe('#nextOrSummary', function() {
+    it('returns a function', function() {
+      assert.equal(typeof(nextOrSummary('nextKey')), 'function');
+    });
+    it('returns "summary" when user is editing card', function() {
+      props.flow = 'edit';
+      assert.equal(nextOrSummary('nextKey')(props), 'summary');
+    });
+    it('returns "summary" when user is adding card', function() {
+      props.flow = 'add';
+      assert.equal(nextOrSummary('nextKey')(props), 'summary');
+    });
+    it('returns "nextKey" when passed "nextKey" and user is not editing or adding a card', function() {
+      assert.equal(nextOrSummary('nextKey')(props), 'nextKey');
+    });
+  });
+
+  describe('#applyEditOrAddPath', function() {
+    it('returns /apply/id-and-license + url if props.flow is not edit or add', function() {
+      assert.equal(applyEditOrAddPath('/card-action')(props), '/apply/id-and-license/card-action');
+    });
+    it('returns /apply/id-and-license/add + url if props.flow is add', function() {
+      props.flow = 'add';
+      assert.equal(applyEditOrAddPath('/card-action')(props), '/apply/id-and-license/add/card-action');
+    });
+    it('returns /apply/id-and-license/edit + url if props.flow is edit', function() {
+      props.flow = 'edit';
+      assert.equal(applyEditOrAddPath('/card-action')(props), '/apply/id-and-license/edit/card-action');
+    });
+  });
+
+  describe('#applyOrEditCDLPath', function() {
+    it('returns /apply/cdl + url if props.flow is not edit', function() {
+      assert.equal(applyOrEditCDLPath('/motorcycle')(props), '/apply/cdl/motorcycle');
+    });
+    it('returns /apply/cdl/edit + url if props.flow is edit', function() {
+      props.flow = 'edit';
+      assert.equal(applyOrEditCDLPath('/motorcycle')(props), '/apply/cdl/edit/motorcycle');
     });
   });
 });
diff --git a/test/client/helpers/data/reduced-fee-test.js b/test/client/helpers/data/reduced-fee-test.js
index aec2dd82..9406b2bb 100644
--- a/test/client/helpers/data/reduced-fee-test.js
+++ b/test/client/helpers/data/reduced-fee-test.js
@@ -19,9 +19,7 @@ describe('Data helpers for reduced fee', function() {
         ID: '',
         form: ''
       },
-      IDApp: {
-        seniorID: ''
-      }
+      seniorID: ''
     };
   });
 
@@ -29,7 +27,7 @@ describe('Data helpers for reduced fee', function() {
     it('is false if the person has already opted for a senior id', function() {
       data.cardType = ['ID', 'DL'];
       data.cardAction = 'new';
-      data.IDApp.seniorID = 'Yes';
+      data.seniorID = 'Yes';
 
       assert.equal(eligibleForReducedFee(data), false);
     });
@@ -100,11 +98,11 @@ describe('Data helpers for reduced fee', function() {
     });
     it('returns false if user has not selected to getting a reduced fee and is not getting a senior ID', function() {
       data.reducedFee.ID = '';
-      data.IDApp.seniorID = 'No';
+      data.seniorID = 'No';
       assert.equal(reducedOrNoFee(data), false);
     });
     it('returns true if user is getting a senior ID', function() {
-      data.IDApp.seniorID = 'Yes';
+      data.seniorID = 'Yes';
       assert.equal(reducedOrNoFee(data), true);
     });
   });
diff --git a/test/client/helpers/data/senior-test.js b/test/client/helpers/data/senior-test.js
index f0c70ba2..b5cf47ca 100644
--- a/test/client/helpers/data/senior-test.js
+++ b/test/client/helpers/data/senior-test.js
@@ -55,21 +55,19 @@ describe('Data helpers for senior', function() {
     let props;
     beforeEach(function() {
       props = {
-        IDApp: {
-          seniorID: ''
-        }
+        seniorID: ''
       }
     });
     it('returns false if value is No', function() {
-      props.IDApp.seniorID = 'No';
+      props.seniorID = 'No';
       assert.equal(gettingSeniorID(props), false);
     });
     it('returns false if value is blank', function() {
-      props.IDApp.seniorID = '';
+      props.seniorID = '';
       assert.equal(gettingSeniorID(props), false);
     });
     it('returns true if value is Yes', function() {
-      props.IDApp.seniorID = 'Yes';
+      props.seniorID = 'Yes';
       assert.equal(gettingSeniorID(props), true);
     });
   });
diff --git a/test/client/helpers/handlers/navigate-on-back-test.js b/test/client/helpers/handlers/navigate-on-back-test.js
index 94e36d4f..a9dd2206 100644
--- a/test/client/helpers/handlers/navigate-on-back-test.js
+++ b/test/client/helpers/handlers/navigate-on-back-test.js
@@ -13,6 +13,7 @@ describe('navigateOnBack', function() {
     event = { preventDefault: spy() };
     dispatch = spy();
     props = {
+      addressName: '',
       location: {},
       onSubmit: spy(),
       history: createMemoryHistory('/'),
@@ -24,17 +25,20 @@ describe('navigateOnBack', function() {
     };
   });
 
-  it('if props.location.state.nextAddress does not equal "summary", will go back one step in history', function() {
+  it('will go back one step in history if props.addressName key page does not have "canGoBack" property', function() {
+    props.addressName = 'wdywtdt';
     navigateOnBack(props, validations)(event);
     assert.equal(props.history.entries[0].pathname, '/');
   });
 
-  it('if props.location.state.nextAddress equals "summary", it will check the validations before going back', function() {
-    props.location = {
-      state: {
-        nextAddress: 'summary'
-      }
-    };
+  it('will go back one step in history if props.addressName key page has "canGoBack" property that is equal to true', function() {
+    props.addressName = 'updateAndCorrect';
+    navigateOnBack(props, validations)(event);
+    assert.equal(props.history.entries[0].pathname, '/');
+  });
+
+  it('it will check the validations before going back if props.addressName key page has "canGoBack" property that is false', function() {
+    props.addressName = 'medicalHistory';
     props.validations = false;
     navigateOnBack(props, validations)(event);
 
@@ -46,4 +50,6 @@ describe('navigateOnBack', function() {
       'dispatch not called'
     );
   });
+
+
 });
diff --git a/test/client/helpers/handlers/on-flow-change-test.js b/test/client/helpers/handlers/on-flow-change-test.js
index b03fad9f..99b054da 100644
--- a/test/client/helpers/handlers/on-flow-change-test.js
+++ b/test/client/helpers/handlers/on-flow-change-test.js
@@ -5,33 +5,46 @@ import sinon        from 'sinon';
 import onFlowChange from '../../../../client/helpers/handlers/on-flow-change';
 
 describe('onFlowChange', function() {
-  let props, dispatch, onChange;
+  let value, dispatch, onChange, flow, cardType;
 
   beforeEach(function() {
-    props = {
-      location: {
-        pathname: ''
-      },
-      addApp: ''
-    };
+    value = ''
     dispatch = sinon.spy();
     onChange = onFlowChange(dispatch);
+    flow = 'edit';
+    cardType = '';
   });
 
-  it('dispatches an action with the value if the split pathname equals "driver-license"', function() {
-    props.location.pathname = '/add/driver-license/';
-    onChange(props);
+  it('dispatches the ADD_APP action', function() {
+    onChange(flow, cardType);
     assert.ok(dispatch.calledWith({
       type: 'ADD_APP',
-      payload: { value: 'driver-license'}
+      payload: { value: flow}
     }));
   });
 
-  it('does not dispatch an action if the existing state already matches the split pathname', function() {
-    props.location.pathname = '/add/driver-license/';
-    props.addApp = 'driver-license';
-    onChange(props);
-    assert.equal(dispatch.called, false);
+  it('dispatches updateCardType when cardType is also passed', function() {
+    cardType = 'DT';
+    onChange(flow, cardType);
+    assert.ok(dispatch.calledWith({
+      type: 'UPDATE_CARD_TYPE',
+      payload: {
+        name: 'addFromSummary',
+        value: cardType
+      }
+    }));
+  });
+
+  it('dispatches updateCardAction when flow equals "add"', function() {
+    flow = 'add';
+    onChange(flow, cardType);
+    assert.ok(dispatch.calledWith({
+      type: 'UPDATE_CARD_ACTION',
+      payload: {
+        name: 'newFlow',
+        value: ''
+      }
+    }));
   });
 });
 
diff --git a/test/client/helpers/navigation/cdl/cdl-get-started-test.js b/test/client/helpers/navigation/cdl/cdl-get-started-test.js
new file mode 100644
index 00000000..80a4bf1c
--- /dev/null
+++ b/test/client/helpers/navigation/cdl/cdl-get-started-test.js
@@ -0,0 +1,182 @@
+'use strict';
+
+const assert = require('assert');
+
+import {
+  cdlWdywtdt,
+  cdlCurrentCard,
+  changedCDL,
+  cdlCurrentDL,
+  cdlSSN,
+  cdlCertification
+} from '../../../../../client/helpers/navigation/cdl/get-started/next-path';
+
+describe('CDL next-paths', function() {
+  let props;
+  beforeEach(function() {
+    props = {
+      cardAction: 'new',
+      flow: '',
+      currentCardInfo: {
+        number: '',
+        month: '',
+        day: '',
+        year: ''
+      }
+    };
+  });
+  describe('#initial flow', function() {
+    describe('#cdlWdywtdt', function() {
+      it('returns "cdlResidency" if user is getting a new card', function() {
+        assert.equal(cdlWdywtdt(props), 'cdlResidency');
+      });
+      it('returns "cdlCurrentCard" if user is replacing card', function() {
+        props.cardAction = 'replace';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
+      });
+      it('returns "cdlCurrentCard" if user is renewing card', function() {
+        props.cardAction = 'renew';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
+      });
+      it('returns "cdlCurrentCard" if user is changing a card', function() {
+        props.cardAction = 'change';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
+      });
+    });
+
+    describe('#cdlCurrentCard', function() {
+      it('returns "cdlResidency" if user is renewing a card', function() {
+        props.cardAction = 'renew';
+        assert.equal(cdlCurrentCard(props), 'cdlResidency');
+      });
+
+      it('returns "cdlCardReplacement" if user is replacing a card', function() {
+        props.cardAction = 'replace';
+        assert.equal(cdlCurrentCard(props), 'cdlCardReplacement');
+      });
+
+      it('returns "cdlChanges" if user is changing a card', function() {
+        props.cardAction = 'change';
+        assert.equal(cdlCurrentCard(props), 'cdlChanges');
+      });
+    });
+
+    describe('#changedCDL', function() {
+      it('goes to cdlResidency', function() {
+        assert.equal(changedCDL(props), 'cdlResidency');
+      });
+    });
+
+    describe('#cdlCurrentDL', function() {
+      it('returns cdlRealID', function() {
+        assert.equal(cdlCurrentDL(props), 'cdlRealID');
+      });
+    });
+
+    describe('#cdlSSN', function() {
+      it('returns "cdlCurrentDL" if user is getting a new card', function() {
+        assert.equal(cdlSSN(props), 'cdlCurrentDL');
+      });
+      it('returns "cdlRealID" if user is replacing, renewing, or changing a card', function() {
+        props.cardAction = 'renew';
+        assert.equal(cdlSSN(props), 'cdlRealID');
+      });
+    });
+
+    describe('#cdlCertification', function() {
+      it('returns "motorcycle" if user is getting a new card', function() {
+        let props = {
+          cardAction: 'new'
+        };
+        assert.equal(cdlCertification(props), 'motorcycle');
+      });
+      it('returns "cdlSummary" if user is replacing, renewing, or changing a card', function() {
+        let props = {
+          cardAction: 'replace'
+        };
+        assert.equal(cdlCertification(props), 'cdlSummary');
+      });
+    });
+  });
+
+  describe('#edit flow', function() {
+    beforeEach(function() {
+      props.flow = 'edit';
+      props.classM = '';
+    });
+    describe('#cdlWdywtdt', function() {
+      it('returns "cdlCurrentCard" if user is replacing card and has not provided current card info', function() {
+        props.cardAction = 'replace';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
+      });
+      it('returns "cdlCurrentCard" if user is renewing card', function() {
+        props.cardAction = 'renew';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
+      });
+      it('returns "cdlCurrentCard" if user is changing a card and has not provided current card info', function() {
+        props.cardAction = 'change';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
+      });
+      it('returns "cdlChanges" if user is changing a card and has provided current card info', function() {
+        props.cardAction = 'change';
+        props.currentCardInfo.number = 'aaaa111';
+        assert.equal(cdlWdywtdt(props), 'cdlChanges');
+      });
+      it('returns "cdlCardReplacement" if user is replacing a card and has provided current card info', function() {
+        props.cardAction = 'replace';
+        props.currentCardInfo.number = 'aaaa111';
+        assert.equal(cdlWdywtdt(props), 'cdlCardReplacement');
+      });
+      it('returns "cdlCurrentDL" if user is editing a new card', function() {
+        props.cardAction = 'new';
+        assert.equal(cdlWdywtdt(props), 'cdlCurrentDL');
+      });
+    });
+
+    describe('#cdlCurrentCard', function() {
+      it('returns "cdlSummary" if user is renewing a card', function() {
+        props.cardAction = 'renew';
+        assert.equal(cdlCurrentCard(props), 'cdlSummary');
+      });
+
+      it('returns "cdlCardReplacement" if user is replacing a card', function() {
+        props.cardAction = 'replace';
+        assert.equal(cdlCurrentCard(props), 'cdlCardReplacement');
+      });
+
+      it('returns "cdlChanges" if user is changing a card', function() {
+        props.cardAction = 'change';
+        assert.equal(cdlCurrentCard(props), 'cdlChanges');
+      });
+    });
+
+    describe('#changedCDL', function() {
+      it('goes to cdlSummary', function() {
+        assert.equal(changedCDL(props), 'cdlSummary');
+      });
+    });
+
+    describe('#cdlCurrentDL', function() {
+      it('goes to motorcycle if user has not entered that data', function() {
+        assert.equal(cdlCurrentDL(props), 'motorcycle');
+      });
+      it('goes to cdlSummary if user has already entered motorcycle data', function() {
+        props.classM = 'Yes';
+        assert.equal(cdlCurrentDL(props), 'cdlSummary');
+      });
+    });
+
+    describe('#cdlSSN', function() {
+      it('returns "cdlSummary" ', function() {
+        assert.equal(cdlSSN(props), 'cdlSummary');
+      });
+    });
+
+    describe('#cdlCertification', function() {
+      it('returns "cdlSummary"', function() {
+        props.cardAction = 'new';
+        assert.equal(cdlCertification(props), 'cdlSummary');
+      });
+    });
+  });
+});
diff --git a/test/client/helpers/navigation/cdl/cdl-test.js b/test/client/helpers/navigation/cdl/cdl-test.js
deleted file mode 100644
index bfc231d6..00000000
--- a/test/client/helpers/navigation/cdl/cdl-test.js
+++ /dev/null
@@ -1,84 +0,0 @@
-'use strict';
-
-const assert = require('assert');
-
-import {
-  cdlWdywtdt,
-  cdlCurrentCard,
-  cdlSSN,
-  cdlCertification
-} from '../../../../../client/helpers/navigation/cdl/get-started/next-path';
-
-describe('CDL next-paths', function() {
-  let props;
-  beforeEach(function() {
-    props = {
-      cardAction: 'new'
-    };
-  });
-
-  describe('#cdlWdywtdt', function() {
-    it('returns "cdlResidency" if user is getting a new card', function() {
-      assert.equal(cdlWdywtdt(props), 'cdlResidency');
-    });
-
-    it('returns "cdlCurrentCard" if user is replacing card', function() {
-      props.cardAction = 'replace';
-      assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
-    });
-
-    it('returns "cdlCurrentCard" if user is renewing card', function() {
-      props.cardAction = 'renew';
-      assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
-    });
-
-    it('returns "cdlCurrentCard" if user is changing a card', function() {
-      props.cardAction = 'change';
-      assert.equal(cdlWdywtdt(props), 'cdlCurrentCard');
-    });
-  });
-
-  describe('#cdlCurrentCare', function() {
-    it('returns "cdlResidency" if user is renewing a card', function() {
-      props.cardAction = 'renew';
-      assert.equal(cdlCurrentCard(props), 'cdlResidency');
-    });
-
-    it('returns "cdlResidency" if user is replacing a card', function() {
-      props.cardAction = 'replace';
-      assert.equal(cdlCurrentCard(props), 'cdlCardReplacement');
-    });
-
-    it('returns "cdlChanges" if user is changing a card', function() {
-      props.cardAction = 'change';
-      assert.equal(cdlCurrentCard(props), 'cdlChanges');
-    });
-  });
-
-  describe('#cdlSSN', function() {
-    it('returns "cdlCurrentDL" if user is getting a new card', function() {
-      assert.equal(cdlSSN(props), 'cdlCurrentDL');
-    });
-
-    it('returns "cdlRealID" if user is replacing, renewing, or changing a card', function() {
-      props.cardAction = 'renew';
-      assert.equal(cdlSSN(props), 'cdlRealID');
-    });
-  });
-
-  describe('#cdlCertification', function() {
-    it('returns "motorcycle" if user is getting a new card', function() {
-      let props = {
-        cardAction: 'new'
-      };
-      assert.equal(cdlCertification(props), 'motorcycle');
-    });
-
-    it('returns "cdlSummary" if user is replacing, renewing, or changing a card', function() {
-      let props = {
-        cardAction: 'replace'
-      };
-      assert.equal(cdlCertification(props), 'cdlSummary');
-    });
-  });
-});
diff --git a/test/client/helpers/navigation/cdl/voter-registration-test.js b/test/client/helpers/navigation/cdl/voter-registration-test.js
index 43718103..6c46cc9b 100644
--- a/test/client/helpers/navigation/cdl/voter-registration-test.js
+++ b/test/client/helpers/navigation/cdl/voter-registration-test.js
@@ -30,7 +30,7 @@ describe('Data helpers for determining next path from current page and props in
   describe('#voterRegistration', function() {
     describe('##citizenship', function() {
       it('returns "summary" if user is not eligible for citizenship and is not preregistering', function() {
-        assert.equal(citizenship(data), 'summary');
+        assert.equal(citizenship(data), 'cdlSummary');
       });
 
       it('returns "votingEligibility" if user is eligible for citizenship and is not preregistering', function() {
@@ -47,7 +47,7 @@ describe('Data helpers for determining next path from current page and props in
 
     describe('##votingEligibility', function() {
       it('returns "summary" if user is not eligible for voting and is not preregistering', function() {
-        assert.equal(votingEligibility(data), 'summary');
+        assert.equal(votingEligibility(data), 'cdlSummary');
       });
 
       it('returns "votingOptOut" if user is eligible for voting and is not preregistering', function() {
diff --git a/test/client/helpers/navigation/id-dl/add-dl-test.js b/test/client/helpers/navigation/id-dl/add-dl-test.js
deleted file mode 100644
index 910857ce..00000000
--- a/test/client/helpers/navigation/id-dl/add-dl-test.js
+++ /dev/null
@@ -1,102 +0,0 @@
-'use strict';
-
-const assert = require('assert');
-
-import {
-  addWdywtdt,
-  addCurrentCardInfo,
-  addMedicalHistory
-} from '../../../../../client/helpers/navigation/id-dl/add-dl/next-path';
-
-
-describe('Add-DL next paths', function() {
-  let data;
-  beforeEach(function() {
-    data = {
-      cardType: [],
-      cardAction: '',
-      currentCardInfo: {
-        number: ''
-      },
-      dateOfBirth: {
-        year: (new Date().getFullYear() - 30).toString(),
-        month: '10',
-        day: '10'
-      }
-    };
-  });
-
-  describe('#addWdywtdt', function() {
-    it('returns "addLicenseClass" if user is getting a new card', function() {
-      data.cardAction = 'new';
-      assert.equal(addWdywtdt(data), 'addLicenseClass');
-    });
-
-    it('returns "addCurrentCardInfo" if user is renewing a card and user has not already added currentCardInfo in ID path', function() {
-      data.cardAction = 'renew';
-      assert.equal(addWdywtdt(data), 'addCurrentCardInfo');
-    });
-
-    it('returns "addCurrentCardInfo" if user is replacing a card and user has not already added currentCardInfo in ID path', function() {
-      data.cardAction = 'replace';
-      assert.equal(addWdywtdt(data), 'addCurrentCardInfo');
-    });
-
-    it('returns "addUpdateCorrect" if user is a senior changing a card who has already entered current card info', function() {
-      data.cardAction = 'change';
-      data.dateOfBirth.year = '1950';
-      data.currentCardInfo = {
-        number: '00000'
-      };
-      assert.equal(addWdywtdt(data), 'addUpdateCorrect');
-    });
-
-    it('returns "addReplacementDetails" if user is replacing a card but has already entered currentCardInfo in ID flow', function() {
-      data.cardAction = 'replace';
-      data.currentCardInfo = {
-        number: '00000'
-      };
-      assert.equal(addWdywtdt(data), 'addReplacementDetails');
-    });
-  });
-
-  describe('#addCurrentCardInfo', function() {
-    it('returns "addLicenseClass" if user is getting a new card', function() {
-      data.cardAction = 'new';
-      assert.equal(addCurrentCardInfo(data), 'addLicenseClass');
-    });
-
-    it('returns "addLicenseClass" if user is renewing a card', function() {
-      data.cardAction = 'renew';
-      assert.equal(addCurrentCardInfo(data), 'addLicenseClass');
-    });
-
-    it('returns "addUpdateCorrect" if user is changing a card', function() {
-      data.cardAction = 'change';
-      assert.equal(addCurrentCardInfo(data), 'addUpdateCorrect');
-    });
-
-    it('returns "addReplacementDetails" if user is replacing a card', function() {
-      data.cardAction = 'replace';
-      assert.equal(addCurrentCardInfo(data), 'addReplacementDetails');
-    });
-  });
-
-  describe('#addMedicalHistory', function() {
-    it('returns "addLicenseHistory" if user is getting a new card', function() {
-      data.cardAction = 'new';
-      assert.equal(addMedicalHistory(data), 'addLicenseHistory');
-    });
-
-    it('returns "addIssueHistory" if user is replacing a card', function() {
-      data.cardAction = 'replace';
-      assert.equal(addMedicalHistory(data), 'addIssueHistory');
-    });
-
-    it('returns "addIssueHistory" if user is changing a card', function() {
-      data.cardAction = 'change';
-      assert.equal(addMedicalHistory(data), 'addIssueHistory');
-    });
-  });
-});
-
diff --git a/test/client/helpers/navigation/id-dl/add-id-test.js b/test/client/helpers/navigation/id-dl/add-id-test.js
deleted file mode 100644
index f8e1a15d..00000000
--- a/test/client/helpers/navigation/id-dl/add-id-test.js
+++ /dev/null
@@ -1,126 +0,0 @@
-'use strict';
-
-const assert = require('assert');
-
-import {
-  addIDWdywtdt,
-  addCurrentIDInfo,
-  addChangedID,
-  addSeniorID
-} from '../../../../../client/helpers/navigation/id-dl/add-id/next-path';
-
-describe('Add ID Card next-paths', function() {
-  let props;
-  beforeEach(function() {
-    props = {
-      cardType: ['ID'],
-      cardAction: 'new',
-      dateOfBirth: {
-        month: '04',
-        day: '10',
-        year: (new Date().getFullYear() - 20).toString()
-      }
-    };
-  });
-
-  describe('#addIDWdywtdt', function() {
-
-    it('returns "addReducedFee" if user is a non-senior getting a new card', function() {
-      assert.equal(addIDWdywtdt(props), 'addReducedFee');
-    });
-    it('returns "addReducedFee" if user is a non-senior renewing a card who has already entered current card info', function() {
-      props.cardAction = 'renew';
-      props.currentCardInfo = {
-        number: '0000'
-      };
-      assert.equal(addIDWdywtdt(props), 'addReducedFee');
-    });
-
-    it('returns "addCurrentIDInfo" if user is a senior renewing a card who has not already entered current card info', function() {
-      props.dateOfBirth.year = '1950';
-      props.cardAction = 'renew';
-      assert.equal(addIDWdywtdt(props), 'addCurrentIDInfo');
-    });
-
-    it('returns "addCurrentIDInfo" if user is a non-senior replacing a card who has not already entered current card info', function() {
-      props.cardAction = 'replace';
-      assert.equal(addIDWdywtdt(props), 'addCurrentIDInfo');
-    });
-
-    it('returns "addCorrectUpdateID" if user is a senior changing a card who has already entered current card info', function() {
-      props.cardAction = 'change';
-      props.dateOfBirth.year = '1950';
-      props.currentCardInfo = {
-        number: '00000000'
-      };
-      assert.equal(addIDWdywtdt(props), 'addCorrectUpdateID');
-    });
-
-    it('returns "addIDReplacementDetails" if user is a senior replacing a card who has already entered current card info', function() {
-      props.cardAction = 'replace';
-      props.dateOfBirth = '1950';
-      props.currentCardInfo = {
-        number: '00000000'
-      };
-      assert.equal(addIDWdywtdt(props), 'addIDReplacementDetails');
-    });
-
-    it('returns "addSeniorID" if user is a senior', function() {
-      props.dateOfBirth.year = '1950';
-      assert.equal(addIDWdywtdt(props), 'addSeniorID');
-    });
-  });
-
-  describe('#addCurrentIDInfo', function() {
-    it('returns "addSeniorID" if user is a senior getting a new card', function() {
-      props.cardAction = 'new';
-      props.dateOfBirth.year = '1950';
-      assert.equal(addCurrentIDInfo(props), 'addSeniorID');
-    });
-
-    it('returns "addIDReplacementDetails" if user is replacing a card', function() {
-      props.cardAction = 'replace';
-      assert.equal(addCurrentIDInfo(props), 'addIDReplacementDetails');
-    });
-
-    it('returns "addCorrectUpdateID" if user is updating or correcting a card', function() {
-      props.cardAction = 'change';
-      assert.equal(addCurrentIDInfo(props), 'addCorrectUpdateID');
-    });
-
-    it('returns "addReducedFee" if non-senior user is renewing or getting a new card', function() {
-      props.cardAction = 'new';
-      assert.equal(addCurrentIDInfo(props), 'addReducedFee');
-    });
-  });
-
-  describe('#addChangedID', function() {
-    it('returns "addSeniorID" if user is a senior', function() {
-      props.dateOfBirth.year = '1950';
-      assert.equal(addChangedID(props), 'addSeniorID');
-    });
-    it('returns "addReducedFee" otherwise', function() {
-      assert.equal(addChangedID(props), 'addReducedFee');
-    });
-  });
-
-  describe('#addSeniorID', function() {
-    it('returns "summary" if user is getting a senior ID', function() {
-      let props = {
-        IDApp: {
-          seniorID: 'Yes'
-        }
-      };
-      assert.equal(addSeniorID(props), "summary");
-    });
-
-    it('returns "addReducedFee" if user is getting a senior ID', function() {
-      let props = {
-        IDApp: {
-          seniorID: 'No'
-        }
-      };
-      assert.equal(addSeniorID(props), "addReducedFee");
-    });
-  });
-});
\ No newline at end of file
diff --git a/test/client/helpers/navigation/id-dl/get-started-test.js b/test/client/helpers/navigation/id-dl/get-started-test.js
index affaea60..a8d0d3f0 100644
--- a/test/client/helpers/navigation/id-dl/get-started-test.js
+++ b/test/client/helpers/navigation/id-dl/get-started-test.js
@@ -3,202 +3,603 @@
 const assert = require('assert');
 
 import {
+  dateOfBirth,
+  wdywtdt,
   chooseCardType,
   currentCardInfo,
-  updateAndCorrect,
-  replacementDetails,
+  changedCard,
   realID,
+  seniorID,
   chooseLicenseClass
 } from '../../../../../client/helpers/navigation/id-dl/get-started/next-path';
 
 const today = new Date();
-const bothCards = {
-  cardAction: 'new',
-  cardType: ['ID', 'DL'],
-  IDApp: {
-    isApplying: true,
-    action: 'new',
-    reducedFee: {
-      ID: ''
-    }
-  },
-  DLApp: {
-    isApplying: true,
-    action: 'new'
-  },
-  dateOfBirth: {
-    year: (today.getFullYear() - 40).toString(),
-    month: (today.getMonth()).toString(),
-    day: today.getDate().toString()
-  }
-};
 
-function buildCardType(type, action){
-  let state = {
-    cardType: [type],
-    cardAction: action,
-    IDApp: {
-      isApplying: false,
-      action: ''
-    },
-    DLApp: {
-      isApplying: false,
-      action: ''
-    },
+const state = () => {
+  return {
+    cardType: [],
+    cardAction: '',
     dateOfBirth: {
       year: (today.getFullYear() - 40).toString(),
       month: (today.getMonth()).toString(),
       day: today.getDate().toString()
-    }
+    },
+    currentCardInfo: {
+      number: '',
+      day: '',
+      year: ''
+    },
+    licenseAndIdHistory: {
+      isIssued: '',
+      month: '',
+      year: '',
+      day: ''
+    },
+    reducedFee: {
+      ID: ''
+    },
+    seniorID: '',
+    flow: ''
   };
-  if (type === 'DL') {
-    state.DLApp.isApplying = true;
-    state.DLApp.action = action;
-  }
-  if (type === 'ID') {
-    state.IDApp.isApplying = true;
-    state.IDApp.action = action;
-  }
-  return state;
 };
 
-const seniorYear = (today) => {
-  return (today.getFullYear() - 65).toString()
-};
+const ID = ['ID'];
+const DL = ['DL'];
+const both = ['ID', 'DL'];
+
+const seniorYear = (today.getFullYear() - 65).toString();
+
+const youthYear = (today.getFullYear() - 15).toString();
 
 describe('Data helpers for determining next path from current page and props in get-started section', function() {
   let data;
-  beforeEach(function() {
-    data = buildCardType('', '');
-    data.dateOfBirth = {
-      year: (today.getFullYear() - 40).toString(),
-      month: (today.getMonth()).toString(),
-      day: today.getDate().toString()
-    };
-  });
 
-  describe('#getStarted section', function() {
-    let props;
+  describe('#normal flow', function() {
     beforeEach(function() {
-      props = {
-        chooseApp: ''
-      }
+      data = state();
+    });
+    describe('##dateOfBirth', function() {
+      it('goes to wdywtdt page', function() {
+        assert.equal(dateOfBirth(data), 'wdywtdt');
+      });
+    });
+    describe('##wdywtdt', function() {
+      it('goes to chooseCardType', function() {
+        assert.equal(wdywtdt(data), 'chooseCardType');
+      });
     });
-
     describe('##chooseCardType', function() {
       it('if senior customer has existing card it will navigate to the existing card page', function() {
-        data = buildCardType('ID', 'renew');
-        data.dateOfBirth.year = seniorYear(today);
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = seniorYear;
         assert.equal(chooseCardType(data), 'currentCardInfo');
       });
 
       it('if too young for a DL diverts to the youth notifcation page', function() {
-        data = buildCardType('DL', 'new');
+        data.cardType = DL;
+        data.cardAction = 'new';
         data.dateOfBirth.year =(today.getFullYear() - 15).toString();
 
         assert.equal(chooseCardType(data), 'youthIDInstead');
       });
 
       it('if applying for a new ID and a senior', function() {
-        data = buildCardType('ID', 'new');
-        data.dateOfBirth.year = seniorYear(today);
+        data.cardType = ID;
+        data.cardAction = 'new';
+        data.dateOfBirth.year = seniorYear;
         assert.equal(chooseCardType(data), 'seniorID');
       });
 
       it('if applying for a new DL, will go to real id', function() {
-        data = buildCardType('DL', 'new');
+        data.cardType = DL;
+        data.cardAction = 'new';
         assert.equal(chooseCardType(data), 'realID');
       });
     });
-
-    describe('##replacementDetails', function() {
+    describe('##changedCard', function() {
       it('takes seniors replacing a DL to the realID page', function() {
-        data = buildCardType('DL', 'replace');
-        data.dateOfBirth.year = seniorYear(today);
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        data.dateOfBirth.year = seniorYear;
 
-        assert.equal(replacementDetails(data), 'realID');
+        assert.equal(changedCard(data), 'realID');
       });
 
       it('takes seniors replacing an ID to the seniorID page', function(){
-        data = buildCardType('ID', 'replace');
-        data.dateOfBirth.year = seniorYear(today);
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.dateOfBirth.year = seniorYear;
 
-        assert.equal(replacementDetails(data), 'seniorID');
+        assert.equal(changedCard(data), 'seniorID');
       });
 
       it('takes not-yet-seniors to the realID page', function() {
-        data = buildCardType('DL', 'replace');
+        data.cardType = DL;
+        data.cardAction = 'replace';
         data.dateOfBirth.year = (today.getFullYear() - 30).toString();
 
-        assert.equal(replacementDetails(data), 'realID');
+        assert.equal(changedCard(data), 'realID');
       });
     });
-
     describe('##currentCardInfo', function() {
-      it('if applying for an ID and a senior', function() {
-        data = buildCardType('ID', 'renew');
-        data.dateOfBirth.year = seniorYear(today);
-
+      it('senior renewing an ID goes to seniorID', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = seniorYear;
         assert.equal(currentCardInfo(data), 'seniorID');
       });
 
-      it('if not eligible for senior id moves to real id', function() {
-        data = buildCardType('DL', 'renew');
-        data.dateOfBirth.year = seniorYear(today);
+      it('non-senior user renewing an ID goes to realID', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
         assert.equal(currentCardInfo(data), 'realID');
       });
-    });
 
-    describe('#updateAndCorrect', function() {
-      it('goes to seniorID page if user is senior updating an ID', function() {
-        data = buildCardType('ID', 'change');
-        data.dateOfBirth.year = seniorYear(today);
-        data.IDApp.cardChanges = {
-          correctOrUpdate: 'update',
-          sections: ['name']
-        };
-        assert.equal(updateAndCorrect(data), 'seniorID');
+      it('senior renewing a DL goes to real id', function() {
+        data.cardType = DL;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(currentCardInfo(data), 'realID');
       });
-
-      it('otherwise goes to realID page', function() {
-        assert.equal(updateAndCorrect(data), 'realID');
+      it('senior changing an ID goes to updates and corrections', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(currentCardInfo(data), 'updateAndCorrect');
+      });
+      it('senior changing a DL goes to updates and corrections', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(currentCardInfo(data), 'updateAndCorrect');
+      });
+      it('senior replacing an ID goes to replacementDetails', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(currentCardInfo(data), 'replacementDetails');
+      });
+      it('senior replacing a DL goes to updates and corrections', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(currentCardInfo(data), 'replacementDetails');
       });
     });
-
     describe('##realID', function() {
       it('when getting a DL, it goes to the page for choosing a class', function() {
-        data = buildCardType('DL', 'renew');
+        data.cardType = DL;
+        data.cardAction = 'renew';
         assert.equal(realID(data), 'chooseLicenseClass');
       });
 
       it('if eligible for a reduced fee, it goes to that page', function() {
-        data = buildCardType('ID', 'renew');
+        data.cardType = ID;
+        data.cardAction = 'renew';
         assert.equal(realID(data), 'reducedFeeID');
       });
 
-      it('goes to get started in other cases', function() {
-        data = buildCardType('ID', 'renew');
-        data.dateOfBirth.year = seniorYear(today);
-        data.IDApp.seniorID = 'Yes';
+      it('goes to get started if user is renewing a senior ID', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = seniorYear;
+        data.seniorID = 'Yes';
         assert.equal(realID(data), 'getStarted');
       });
     });
-
+    describe('##seniorID', function() {
+      it('goes to realID', function() {
+        assert.equal(seniorID(data), 'realID');
+      });
+    });
     describe('#chooseLicenseClass', function() {
       it('if eligible for a reduced fee, it goes to that page', function() {
-        data = bothCards;
-        data.IDApp.reducedFee.ID = 'Yes';
+        data.cardType = both;
+        data.reducedFee.ID = 'Yes';
         assert.equal(chooseLicenseClass(data), 'reducedFeeID');
       });
 
       it('goes to get started in other cases', function() {
-        data = bothCards;
-        data.dateOfBirth.year = seniorYear(today);
-        data.IDApp.seniorID = 'Yes';
+        data.cardType = both;
+        data.dateOfBirth.year = seniorYear;
+        data.seniorID = 'Yes';
 
         assert.equal(chooseLicenseClass(data), 'getStarted');
       });
     });
   });
+
+  describe('#adding card flow', function() {
+    beforeEach(function() {
+      data = state()
+      data.flow = 'add';
+    });
+    describe('##wdywtdt', function() {
+      it('user getting a new DL goes to licenseClass', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        assert.equal(wdywtdt(data), 'chooseLicenseClass');
+      });
+      it('non-senior user getting a new ID goes to reducedfee', function() {
+        data.cardType = ID;
+        data.cardAction = 'new';
+        assert.equal(wdywtdt(data), 'reducedFeeID');
+      });
+      it('senior user getting a new DL goes to licenseClass', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(wdywtdt(data), 'chooseLicenseClass');
+      });
+      it('senior user getting a new ID goes to seniorID', function() {
+        data.cardType = ID;
+        data.cardAction = 'new';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(wdywtdt(data), 'seniorID');
+      });
+      it('user replacing an ID  who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user renewing an ID who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user changing an ID who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user replacing a DL who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user renewing a DL who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = DL;
+        data.cardAction = 'renew';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user changing a DL who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user renewing an ID who has entered current card info goes to reduced fee', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'reducedFeeID');
+      });
+      it('senior renewing an ID who has entered current card info goes to seniorID', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = seniorYear;
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'seniorID');
+      });
+      it('user renewing a DL who has entered current card info goes to licenseClass', function() {
+        data.cardType = DL;
+        data.cardAction = 'renew';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'chooseLicenseClass');
+      });
+      it('user replacing an ID who has entered current card info goes to replacementDetails', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'replacementDetails');
+      });
+      it('user changing an ID who has entered current card info goes to updateAndCorrect', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'updateAndCorrect');
+      });
+      it('user replacing a DL who has entered current card info goes to replacementDetails', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'replacementDetails');
+      });
+      it('user changing a DL who has entered current card info goes to updateAndCorrect', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'updateAndCorrect');
+      });
+    });
+    describe('##currentCardInfo', function() {
+      it('user renewing a DL goes to licenseClass', function() {
+        data.cardType = DL;
+        data.cardAction = 'renew';
+        data.currentCardInfo.number = '1111';
+        assert.equal(currentCardInfo(data), 'chooseLicenseClass');
+      });
+      it('user getting a new DL goes to chooseLicenseClass', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.currentCardInfo.number = '1111';
+        assert.equal(currentCardInfo(data), 'chooseLicenseClass');
+      });
+      it('senior user renewing an ID goes to reducedFee (not seniorID, that will come later)', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.currentCardInfo.number = '1111';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(currentCardInfo(data), 'reducedFeeID');
+      });
+      it('user getting a new ID goes to reducedFee', function() {
+        data.cardType = ID;         data.cardAction = 'new';
+        data.currentCardInfo.number = '1111';
+        assert.equal(currentCardInfo(data), 'reducedFeeID');
+      });
+      it('user replacing an ID goes to replacementDetails', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        assert.equal(currentCardInfo(data), 'replacementDetails');
+      });
+      it('user changing an ID goes to updateAndCorrect', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        assert.equal(currentCardInfo(data), 'updateAndCorrect');
+      });
+      it('user replacing a DL goes to replacementDetails', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        assert.equal(currentCardInfo(data), 'replacementDetails');
+      });
+      it('user changing a DL goes to updateAndCorrect', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        assert.equal(currentCardInfo(data), 'updateAndCorrect');
+      });
+    });
+    describe('##changedCard', function() {
+      it('user getting a DL goes to licenseClass', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        assert.equal(changedCard(data), 'chooseLicenseClass');
+      });
+      it('user getting an ID goes to reducedFee', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        assert.equal(changedCard(data), 'reducedFeeID');
+      });
+      it('senior user getting an ID goes to seniorID', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(changedCard(data), 'seniorID');
+      });
+    });
+    describe('##realID', function() {
+      it('goes to summary', function() {
+        assert.equal(realID(data), 'summary');
+      });
+    });
+    describe('##seniorID', function() {
+      it('senior user getting a senior ID goes to summary', function() {
+        data.cardType = ID;
+        data.cardAction = 'new';
+        data.seniorID = 'Yes';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(seniorID(data), 'summary');
+      });
+      it('senior user not getting a senior ID goes to reducedFee', function() {
+        data.cardType = ID;
+        data.cardAction = 'new';
+        data.seniorID = 'No';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(seniorID(data), 'reducedFeeID');
+      });
+    });
+
+    describe('##chooseLicenseClass', function() {
+      it('user adding a DL goes to medicalHistory', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        assert.equal(chooseLicenseClass(data), 'medicalHistory');
+      });
+    })
+  });
+
+  describe('#editing card flow', function() {
+    beforeEach(function() {
+      data = state()
+      data.flow = 'edit';
+    });
+
+    describe('##dateOfBirth', function() {
+      it('senior user getting an ID goes to seniorID', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(dateOfBirth(data), 'seniorID');
+      });
+      it('youth user getting an ID goes to summary', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.dateOfBirth.year = youthYear;
+        assert.equal(dateOfBirth(data), 'summary');
+      });
+      it('youth user getting a DL goes to youthIDInstead', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.dateOfBirth.year = youthYear;
+        assert.equal(dateOfBirth(data), 'youthIDInstead');
+      });
+      it('30-something user goes to summary always', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        assert.equal(dateOfBirth(data), 'summary');
+      });
+    });
+
+    describe('##wdywtdt', function() {
+      it('user replacing an ID  who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user renewing an ID who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user changing an ID who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user replacing a DL who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user renewing a DL who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = DL;         data.cardAction = 'renew';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user changing a DL who has not entered current card info goes to currentCardInfo', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user replacing an ID who has entered current card info goes to replacementDetails', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'replacementDetails');
+      });
+      it('user changing an ID who has entered current card info goes to updateAndCorrect', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'updateAndCorrect');
+      });
+      it('user replacing a DL who has entered current card info goes to replacementDetails', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'replacementDetails');
+      });
+      it('user changing a DL who has entered current card info goes to updateAndCorrect', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'updateAndCorrect');
+      });
+      it('user who is getting a new ID or DL who has not entered any licenseAndIdHistory goes to cardHistory', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        assert.equal(wdywtdt(data), 'cardHistory');
+      });
+      it('user who is getting a new ID or DL who has entered licenseAndIdHistory goes to summary', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.licenseAndIdHistory.isIssued = 'No';
+        assert.equal(wdywtdt(data), 'summary');
+      });
+      it('user who is renewing an ID or DL who has not entered any licenseAndIdHistory goes to currentCardInfo ', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        assert.equal(wdywtdt(data), 'currentCardInfo');
+      });
+      it('user who is renewing an ID or DL who has entered current card info goes to summary', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        data.currentCardInfo.number = '1111';
+        assert.equal(wdywtdt(data), 'summary');
+      });
+    });
+
+    describe('##currentCardInfo', function() {
+      it('user replacing an ID goes to replacementDetails', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        assert.equal(currentCardInfo(data), 'replacementDetails');
+      });
+      it('user changing an ID goes to updateAndCorrect', function() {
+        data.cardType = ID;
+        data.cardAction = 'change';
+        assert.equal(currentCardInfo(data), 'updateAndCorrect');
+      });
+      it('user replacing a DL goes to replacementDetails', function() {
+        data.cardType = DL;
+        data.cardAction = 'replace';
+        assert.equal(currentCardInfo(data), 'replacementDetails');
+      });
+      it('user changing a DL goes to updateAndCorrect', function() {
+        data.cardType = DL;
+        data.cardAction = 'change';
+        assert.equal(currentCardInfo(data), 'updateAndCorrect');
+      });
+      it('user renewing an ID or DL goes to summary', function() {
+        data.cardType = ID;
+        data.cardAction = 'renew';
+        assert.equal(currentCardInfo(data), 'summary');
+      });
+      it('user getting a new ID or DL goes to cardHistory', function() {
+        data.cardType = ID;
+        data.cardAction = 'new';
+        assert.equal(currentCardInfo(data), 'cardHistory');
+      });
+      it('user getting a new ID or DL who has already entered licenseAndIdHistory goes to summary', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.licenseAndIdHistory.isIssued = 'No';
+        assert.equal(currentCardInfo(data), 'summary');
+      });
+    });
+
+    describe('##changedCard', function() {
+      it('senior user replacing an ID goes to summary', function() {
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.dateOfBirth.year = seniorYear;
+        assert.equal(changedCard(data), 'summary');
+      });
+      it('user getting a new card who has not entered licenseAndIdHistory goes to cardHistory', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        assert.equal(changedCard(data), 'cardHistory');
+      });
+      it('user getting a new card who has entered licenseAndIdHistory goes to summary', function() {
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.licenseAndIdHistory.isIssued = 'No';
+        assert.equal(changedCard(data), 'summary');
+      });
+    });
+
+    describe('##realID', function(){
+      it('goes to summary', function() {
+        assert.equal(realID(data), 'summary');
+      });
+    });
+
+    describe('##seniorID', function() {
+      it('senior user getting senior ID goes to summary', function() {
+        data.seniorID = 'Yes';
+        assert.equal(seniorID(data), 'summary');
+      });
+      it('senior user not getting senior ID who has already entered reduced fee info goes to summary', function() {
+        data.seniorID = 'No';
+        data.reducedFee.ID = 'No';
+        assert.equal(seniorID(data), 'summary');
+      });
+      it('senior user not getting senior ID who has not already entered reduced fee info goes to reducedFee', function() {
+        data.seniorID = 'No';
+        data.reducedFee.ID = '';
+        assert.equal(seniorID(data), 'reducedFeeID');
+      });
+    });
+  });
 });
 
diff --git a/test/client/helpers/navigation/id-dl/my-basics-test.js b/test/client/helpers/navigation/id-dl/my-basics-test.js
index a7d9fd06..820feed7 100644
--- a/test/client/helpers/navigation/id-dl/my-basics-test.js
+++ b/test/client/helpers/navigation/id-dl/my-basics-test.js
@@ -7,93 +7,70 @@ import {
 } from '../../../../../client/helpers/navigation/id-dl/my-basics/next-path';
 
 const today = new Date();
-const bothCards = {
-  cardAction: 'new',
-  cardType: ['ID', 'DL'],
-  IDApp: {
-    isApplying: true,
-    action: 'new',
-    reducedFee: {
-      ID: ''
-    }
-  },
-  DLApp: {
-    isApplying: true,
-    action: 'new'
-  },
-  dateOfBirth: {
-    year: (today.getFullYear() - 40).toString(),
-    month: (today.getMonth()).toString(),
-    day: today.getDate().toString()
-  }
-};
 
-function buildCardType(type, action){
-  let state = {
-    cardType: [type],
-    cardAction: action,
+const state = () => {
+  return {
+    cardType: [],
+    cardAction: '',
     IDApp: {
       isApplying: false,
       action: ''
     },
-    DLApp: {
-      isApplying: false,
-      action: ''
-    },
     dateOfBirth: {
       year: (today.getFullYear() - 40).toString(),
       month: (today.getMonth()).toString(),
       day: today.getDate().toString()
-    }
+    },
+    seniorID: '',
+    flow: ''
   };
-  if (type === 'DL') {
-    state.DLApp.isApplying = true;
-    state.DLApp.action = action;
-  }
-  if (type === 'ID') {
-    state.IDApp.isApplying = true;
-    state.IDApp.action = action;
-  }
-  return state;
-};
-
-const seniorYear = (today) => {
-  return (today.getFullYear() - 65).toString()
 };
+const seniorYear =  (today.getFullYear() - 65).toString();
+const ID = ['ID'];
+const DL = ['DL'];
+const both = ['ID', 'DL'];
 
 describe('Data helpers for determining next path from current page and props in my-basics section', function() {
   let data;
   beforeEach(function() {
-    data = buildCardType('', '');
-    data.dateOfBirth = {
-      year: (today.getFullYear() - 40).toString(),
-      month: (today.getMonth()).toString(),
-      day: today.getDate().toString()
-    };
+    data = state();
   });
 
   describe('#myBasics section', function() {
     describe('#socialSecurity', function() {
       it('goes to medicalHistory page if user is replacing a DL', function() {
-        data = buildCardType('DL', 'replace');
+        data.cardType = DL;
+        data.cardAction = 'replace';
         assert.equal(socialSecurity(data), 'medicalHistory');
       });
 
       it('goes to medicalHistory page if user is getting a new DL', function() {
-        data = buildCardType('DL', 'new');
+        data.cardType = DL;
+        data.cardAction = 'new';
         assert.equal(socialSecurity(data), 'medicalHistory');
       });
 
       it('goes to cardHistory, skipping medicalHistory, if user is getting a new ID', function() {
-        data = buildCardType('ID', 'new');
+        data.cardType = ID;
+        data.cardAction = 'new';
+        data.IDApp.action = 'new';
         assert.equal(socialSecurity(data), 'cardHistory');
       });
 
       it('goes to nameHistory, skipping medicalHistory and cardHistory, if user is replacing an ID', function() {
-        data = buildCardType('ID', 'replace');
+        data.cardType = ID;
+        data.cardAction = 'replace';
+        data.IDApp.action = 'replace';
         assert.equal(socialSecurity(data), 'nameHistory');
       });
     });
   });
+
+  describe('#editing', function() {
+    it('goes to summary', function() {
+      data.flow = 'edit';
+      assert.equal(socialSecurity(data), 'summary');
+    });
+  });
 });
 
diff --git a/test/client/helpers/navigation/id-dl/my-history-test.js b/test/client/helpers/navigation/id-dl/my-history-test.js
index 0146298d..54b7d9b7 100644
--- a/test/client/helpers/navigation/id-dl/my-history-test.js
+++ b/test/client/helpers/navigation/id-dl/my-history-test.js
@@ -4,77 +4,137 @@ const assert = require('assert');
 
 import {
   medicalHistory,
-  nameHistory
+  nameHistory,
+  cardHistory
 } from '../../../../../client/helpers/navigation/id-dl/my-history/next-path';
 
 
-function buildCardType(type, action){
-  let state = {
-    cardType: [type],
-    cardAction: action,
-    IDApp: {
-      isApplying: false,
-      action: ''
-    },
+let state = () => {
+  return  {
+    cardType: [],
+    cardAction: '',
     DLApp: {
       isApplying: false,
       action: ''
-    }
+    },
+    licenseAndIdHistory: {
+      DLIDNumber: ''
+    },
+    flow: ''
   };
-  if (type === 'DL') {
-    state.DLApp.isApplying = true;
-    state.DLApp.action = action;
-  }
-  if (type === 'ID') {
-    state.IDApp.isApplying = true;
-    state.IDApp.action = action;
-  }
-  return state;
 };
 
+const ID = ['ID'];
+const DL = ['DL'];
+const both = ['ID', 'DL'];
+
 describe('Data helpers for determining next path from current page and props in my-history section', function() {
   let data;
   beforeEach(function() {
-    data = buildCardType('', '');
+    data = state();
   });
 
-  describe('#myHistory section', function() {
-    describe('#medicalHistory', function() {
+  describe('#regular flow', function() {
+    describe('##medicalHistory', function() {
       it('goes to cardHistory if user is getting a new DL', function() {
-        data = buildCardType('DL', 'new');
-
+        data.cardType = DL;
+        data.cardAction = 'new';
+        data.DLApp.action = 'new';
+        data.DLApp.isApplying = true;
         assert.equal(medicalHistory(data), 'cardHistory');
       });
 
       it('goes to nameHistory, skipping cardHistory, if user is changing an existing DL', function() {
-        data = buildCardType('DL', 'replace');
-
+        data.cardType = DL;
+        data.cardAction = 'replace';
         assert.equal(medicalHistory(data), 'nameHistory');
       });
 
       it('goes to nameHistory, skipping cardHistory, if user is getting a new ID', function() {
-        data = buildCardType('ID', 'new');
+        data.cardType = ID;
+        data.cardAction = 'new';
         assert.equal(medicalHistory(data), 'nameHistory');
       });
     });
 
-    describe('#nameHistory', function() {
+    describe('##nameHistory', function() {
       it('goes to licenseIssues if user is getting a new DL', function() {
-        data = buildCardType('DL', 'new');
+        data.cardType = DL;
+        data.cardAction = 'new';
         assert.equal(nameHistory(data), 'licenseIssues');
       });
 
       it('goes to licenseIssues page if user is getting a DL that is not new', function() {
-        data = buildCardType('DL', 'change');
+        data.cardType = DL;
+        data.cardAction = 'change';
         assert.equal(nameHistory(data), 'licenseIssues');
       });
 
       it('goes to veterans page if user is getting an ID', function() {
-        data = buildCardType('ID', 'new');
+        data.cardType = ID;
+        data.cardAction = 'new';
         assert.equal(nameHistory(data), 'veterans');
       });
     });
+
+    describe('##cardHistory', function() {
+      it('user getting a DL goes to nameHistory', function() {
+        data.cardType = DL;
+        assert.equal(cardHistory(data), 'nameHistory');
+      });
+    });
+  });
+
+  describe('#adding', function() {
+    beforeEach(function() {
+      data.flow = 'add';
+    });
+    describe('##medicalHistory', function() {
+      it('user replacing, renewing, or changing card goes to licenseIssues', function() {
+        data.cardAction = 'replace';
+        assert.equal(medicalHistory(data), 'licenseIssues');
+      });
+      it('user getting a new card goes to cardHistory', function() {
+        data.cardAction = 'new';
+        assert.equal(medicalHistory(data), 'cardHistory');
+      });
+      it('user getting a new card who has already entered cardHistory goes to summary', function() {
+        data.cardAction = 'new';
+        data.licenseAndIdHistory.DLIDNumber = '111';
+        assert.equal(medicalHistory(data), 'summary');
+      });
+    });
+
+    describe('##nameHistory', function() {
+      it('goes to summary', function() {
+        assert.equal(nameHistory(data), 'summary');
+      });
+    });
+
+    describe('##cardHistory', function() {
+      it('user adding a DL goes to issueHistory', function() {
+        data.cardType = DL;
+        assert.equal(cardHistory(data), 'licenseIssues');
+      });
+    })
   });
 
+  describe('#editing', function() {
+    beforeEach(function() {
+      data.flow = 'edit';
+    });
+
+    describe('##medicalHistory', function() {
+      it('goes to the summary', function() {
+        assert.equal(medicalHistory(data), 'summary');
+      });
+    });
+
+    describe('##nameHistory', function() {
+      it('goes to the summary', function() {
+        assert.equal(nameHistory(data), 'summary');
+      });
+    });
+  });
 });
 
diff --git a/test/client/helpers/navigation/id-dl/voter-registration-test.js b/test/client/helpers/navigation/id-dl/voter-registration-test.js
index cbaa78c6..be64353e 100644
--- a/test/client/helpers/navigation/id-dl/voter-registration-test.js
+++ b/test/client/helpers/navigation/id-dl/voter-registration-test.js
@@ -22,7 +22,8 @@ describe('Data helpers for determining next path from current page and props in
         year: (today.getFullYear() - 40).toString(),
         month: (today.getMonth()).toString(),
         day: today.getDate().toString()
-      }
+      },
+      flow: ''
     };
   });
 
diff --git a/test/client/helpers/navigation/page-test.js b/test/client/helpers/navigation/page-test.js
index 5f61d0d5..2e3a8500 100644
--- a/test/client/helpers/navigation/page-test.js
+++ b/test/client/helpers/navigation/page-test.js
@@ -12,11 +12,17 @@ import pages from '../../../../client/helpers/navigation/pages';
 
 describe('Data helpers for page', function() {
   it('#pageFor return the value object for the page', function() {
-    assert.deepEqual(pageFor('realID'), pages.iddl.getStarted[10]);
+    assert.deepEqual(pageFor('realID', {flow: ''}), pages.iddl.getStarted[10]);
   });
 
   it('#pathForPage return the path of that key', function() {
-    assert.deepEqual(pathForPage('realID'), pages.iddl.getStarted[10].path);
+    let props = {flow: ''};
+    assert.deepEqual(pathForPage('realID', props), pages.iddl.getStarted[10].path(props));
+  });
+  it('#pathForPage return the edit path of that key when props.flow equals edit', function() {
+    let props = { flow: 'edit'};
+    assert.deepEqual(pathForPage('realID', props), pages.iddl.getStarted[10].path(props));
+    assert.ok(pathForPage('realID', props).includes('/edit/'));
   });
 
   it('#nextPath return the full path given page with only one path', function() {
@@ -38,11 +44,5 @@ describe('Data helpers for page', function() {
     );
   });
 
-  it('return /apply/summary if state has been passed from link', function() {
-    assert.equal(
-      nextPath('trueName', {location: {state: {nextAddress: 'summary'}}}),
-      '/apply/id-and-license/summary'
-    );
-  });
 });
 
diff --git a/test/client/helpers/reducers-helper-test.js b/test/client/helpers/reducers-helper-test.js
index 41cc3db2..66c7b3e1 100644
--- a/test/client/helpers/reducers-helper-test.js
+++ b/test/client/helpers/reducers-helper-test.js
@@ -3,11 +3,16 @@
 import assert from 'assert';
 import {
   cardTypeAction,
+  trueIfYesNeverFalse,
+  sameIfAdding,
   realID
 } from '../../../client/helpers/reducers';
 
 describe('reducer helper functions', function() {
   let action;
+  const state = {
+    key: 'value'
+  };
   beforeEach(function() {
     action = {
       type: '',
@@ -37,6 +42,27 @@ describe('reducer helper functions', function() {
     });
   });
 
+  describe('#trueIfYesNeverFalse', function() {
+    it('returns true if value matches the type', function() {
+      assert.equal(trueIfYesNeverFalse('ID', 'ID', state), true);
+    });
+    it('returns state if value does not match the type', function() {
+      assert.equal(trueIfYesNeverFalse('ID', 'DL', state), state);
+    });
+  });
+
+  describe('#sameIfAdding', function() {
+    it('returns false if name does not match "IDAction" or "DLAction"', function() {
+      assert.equal(sameIfAdding('bothCards', state), false);
+    });
+    it('returns state if name is IDAction', function() {
+      assert.equal(sameIfAdding('IDAction', state), state);
+    });
+    it('returns state if name is DLAction', function() {
+      assert.equal(sameIfAdding('DLAction', state), state);
+    });
+  });
+
   describe('#realID', function() {
     let state;
     beforeEach(function() {
diff --git a/test/client/presentations/cdl/summary/my-basics-test.js b/test/client/presentations/cdl/summary/my-basics-test.js
index 52c32199..f0959e78 100644
--- a/test/client/presentations/cdl/summary/my-basics-test.js
+++ b/test/client/presentations/cdl/summary/my-basics-test.js
@@ -81,16 +81,16 @@ describe('CDL Summary My Basics section', function() {
   });
 
   it('shows the dob', function() {
-    assert.equal(component.text().includes('Date Of Birth'), true);
+    assert.equal(component.text().includes('Date of birth'), true);
     assert.equal(component.text().includes('01/29/1957'), true);
   });
 
   it('shows the physical traits', function() {
     assert.equal(component.text().includes('Sex'), true);
     assert.equal(component.text().includes('Female'), true);
-    assert.equal(component.text().includes('Eye Color'), true);
+    assert.equal(component.text().includes('Eye color'), true);
     assert.equal(component.text().includes('Black'), true);
-    assert.equal(component.text().includes('Hair Color'), true);
+    assert.equal(component.text().includes('Hair color'), true);
     assert.equal(component.text().includes('Gray'), true);
   });
 
@@ -110,7 +110,7 @@ describe('CDL Summary My Basics section', function() {
   });
 
   it('shows the social security', function() {
-    assert.equal(component.text().includes('Social Security Number'), true);
+    assert.equal(component.text().includes('Social Security number'), true);
     assert.equal(component.text().includes('xxx-xx-6789'), true);
   });
 });
\ No newline at end of file
diff --git a/test/client/presentations/cdl/summary/my-cdl-test.js b/test/client/presentations/cdl/summary/my-cdl-test.js
index 8661203b..5f7f8836 100644
--- a/test/client/presentations/cdl/summary/my-cdl-test.js
+++ b/test/client/presentations/cdl/summary/my-cdl-test.js
@@ -185,7 +185,7 @@ describe('CDL Summary My CDL Application section', function() {
           <MyApp { ...props } />
         </Wrapper>
       );
-      assert.ok(component.text().includes('Expiration date:09/03/2000'));
+      assert.ok(component.text().includes('Expiration date09/03/2000'));
     });
   });
 
diff --git a/test/client/presentations/cdl/summary/my-history-test.js b/test/client/presentations/cdl/summary/my-history-test.js
index d5d95dd4..f748c951 100644
--- a/test/client/presentations/cdl/summary/my-history-test.js
+++ b/test/client/presentations/cdl/summary/my-history-test.js
@@ -61,13 +61,14 @@ describe('CDL Summary My Basics section', function() {
           <MyHistory { ...props } />
         </Wrapper>
       );
-      assert.ok(!component.text().includes('Medical conditions:'))
+      assert.ok(!component.text().includes('Medical conditions'))
     });
 
     it('shows the medical info text if user selected Yes to having a medical condition', function() {
       let testString = 'missing toenails';
       props.cdl.history.medicalHistory.hasMedicalCondition = 'Yes';
       props.cdl.history.medicalHistory.medicalInfo = testString;
+
       component = render(
         <Wrapper>
           <MyHistory { ...props } />
@@ -119,7 +120,7 @@ describe('CDL Summary My Basics section', function() {
           <MyHistory { ...props } />
         </Wrapper>
       );
-      assert.ok(component.text().includes('Expiration date:4/27/4058'), 'expiration date missing');
+      assert.ok(component.text().includes('Expiration date4/27/4058'), 'expiration date missing');
     });
   });
 
diff --git a/test/client/presentations/conclusion/current-card-info-test.js b/test/client/presentations/conclusion/current-card-info-test.js
index 702e6044..8fdd224e 100644
--- a/test/client/presentations/conclusion/current-card-info-test.js
+++ b/test/client/presentations/conclusion/current-card-info-test.js
@@ -3,6 +3,10 @@
 import assert                   from 'assert';
 import React                    from 'react';
 import { render }               from 'enzyme';
+import { spy }                  from 'sinon';
+import wrapperGenerator         from '../../support/wrapper';
+import configure                from '../../support/configure-enzyme';
+import store                    from '../../support/page-store';
 import {
   CardDate,
   CardNumber,
@@ -11,7 +15,7 @@ import {
 
 describe('Current Card Info shared components', function() {
   let props;
-
+  const Wrapper = wrapperGenerator(store);
   beforeEach(function() {
     props = {
       currentCardInfo: {
@@ -21,47 +25,51 @@ describe('Current Card Info shared components', function() {
         year: ''
       },
       number: '',
-      title: ''
+      title: '',
+      showIf: true,
+      locale: 'en',
+      editKey: 'currentCardInfo'
     }
   });
 
   describe('#CardNumber', function() {
-    it('returns "None" if number is blank', function() {
-      let component = render(
-        <CardNumber {...props} />
-      );
-      assert.ok(component.text().includes('None'));
-    });
     it('includes the title passed in props', function() {
       props.title = 'Driver License Number';
-      props.number = '1111'
+      props.cardNumber = '1111'
       let component = render(
-        <CardNumber { ...props } />
+        <Wrapper>
+          <CardNumber { ...props } />
+        </Wrapper>
       );
       assert.equal(component.text().includes('Driver License Number'), true);
     });
     it('includes the number passed in props', function() {
-      props.number = '111111';
+      props.cardNumber = '111111';
+      props.title = 'Driver License Number';
       let component = render(
-        <CardNumber { ...props } />
+        <Wrapper>
+          <CardNumber { ...props } />
+        </Wrapper>
       );
       assert.equal(component.text().includes('111111'), true);
     });
   });
 
   describe('#CardDate', function() {
-    it('returns null if date is blank', function() {
+    it('returns null if showIf is false', function() {
+      props.showIf = false;
       let component = render(
         <CardDate { ...props } />
       );
       assert.equal(component.text(), '');
     });
     it('prints the date passed in props', function() {
-      props.currentCardInfo = {
+      props.cardInfo = {
         day: '10',
         month: '10',
         year: '2000'
       };
+      props.showIf = true;
       let component = render(
         <CardDate { ...props } />
       );
@@ -72,11 +80,33 @@ describe('Current Card Info shared components', function() {
 
   describe('#CurrentCardInfo', function() {
     it('returns null if currentCardInfo is blank', function() {
-      let component = render(
-        <CurrentCardInfo {...props} />
-      )
+        let component = render(
+          <Wrapper>
+            <CurrentCardInfo {...props} />
+          </Wrapper>
+        )
       assert.ok(!component.text().includes('None'));
     });
 
+    it('does not show the date if the date is blank', function() {
+      let component = render(
+        <Wrapper>
+          <CurrentCardInfo {...props} />
+        </Wrapper>
+      );
+      assert.ok(!component.text().includes('Expiration date'));
+    });
+    it('returns "None" if number is blank', function() {
+      props.title = 'Number '
+      props.currentCardInfo.year = '1999';
+      let component = render(
+        <Wrapper>
+          <CurrentCardInfo {...props} />
+        </Wrapper>
+      );
+
+      assert.ok(component.text().includes('Number None'));
+    });
+
   });
 });
\ No newline at end of file
diff --git a/test/client/presentations/conclusion/page-summary-link-test.js b/test/client/presentations/conclusion/page-summary-link-test.js
index 98910ad1..962fc8db 100644
--- a/test/client/presentations/conclusion/page-summary-link-test.js
+++ b/test/client/presentations/conclusion/page-summary-link-test.js
@@ -2,7 +2,7 @@
 
 import assert           from 'assert';
 import React            from 'react';
-import PageSummaryLink  from '../../../../client/presentations/conclusion/summary/Page-summary-link.jsx';
+import PageSummaryLink  from '../../../../client/presentations/page-summary-link.jsx';
 import { render }       from 'enzyme';
 import wrapperGenerator from '../../support/wrapper';
 import store            from '../../support/page-store';
@@ -14,8 +14,9 @@ describe('PageSummaryLink edit buttons on summary pages', function() {
   let locale = 'en';
   beforeEach(function() {
     props = {
-      name: 'addWdywtdt',
-      summary: 'summary',
+      editKey: 'wdywtdt',
+      cardType: 'ID',
+      flow: '',
       locale
     };
     component = render(
@@ -25,14 +26,35 @@ describe('PageSummaryLink edit buttons on summary pages', function() {
     );
   });
 
-  it('has a link with a className equal to the props.name', function() {
-    let className = '.'+props.name;
+  it('has a link with a className that includes props.editKey', function() {
+    let className = '.'+props.editKey;
     assert.ok(component.find(className).length)
   });
-  it('has a link that directs to the url associated with the props.name key', function() {
-    let className = '.'+props.name;
-    let url = pathForPage(props.name);
+  it('has a link with a className that includes props.cardType', function() {
+    let className = '.'+props.cardType;
+    assert.ok(component.find(className).length)
+  });
+
+  it('has a link that directs to the url associated with the props.editKey key', function() {
+    let className = '.'+props.editKey;
+    props.flow = 'edit';
+    let url = pathForPage(props.editKey, props);
     assert.equal(component.find(className)[0].attribs.href, url);
   });
 
+  it('has a button that has the text "Edit" if no prop.add is passed', function() {
+    assert.ok(component.text().includes('Edit'));
+  });
+
+  it('has a button that has the text "Add" if props.add is passed', function() {
+    props.add = true;
+    let component = render(
+      <Wrapper>
+        <PageSummaryLink {...props} />
+      </Wrapper>
+    );
+    assert.ok(component.text().includes('Add'));
+    assert.ok(!component.text().includes('Edit'));
+  });
+
 });
\ No newline at end of file
diff --git a/test/client/presentations/conclusion/summary-real-id-test.js b/test/client/presentations/conclusion/summary-real-id-test.js
index db67e42e..06a4db75 100644
--- a/test/client/presentations/conclusion/summary-real-id-test.js
+++ b/test/client/presentations/conclusion/summary-real-id-test.js
@@ -19,6 +19,7 @@ describe('RealID sections on summary pages', function() {
       realID: '',
       showIf: true,
       title: 'Real-ID Compliant',
+      editKey: 'realID',
       locale
     };
   });
diff --git a/test/client/presentations/conclusion/summary-test.js b/test/client/presentations/conclusion/summary-test.js
index 2733d929..7e053a60 100644
--- a/test/client/presentations/conclusion/summary-test.js
+++ b/test/client/presentations/conclusion/summary-test.js
@@ -10,47 +10,6 @@ import wrapperGenerator from '../../support/wrapper';
 import data             from '../../../../server/models/parsers/client-default-state.js';
 import translations     from '../../../../client/i18n';
 import SummaryPage      from '../../../../client/presentations/conclusion/summary-page.jsx';
-import {
-  DLApplicationNotStarted,
-  DLAction,
-  CurrentDLInfo,
-  DLRealID,
-  LicenseType
-} from '../../../../client/presentations/conclusion/summary/dl-app/index';
-import {
-  IDApplicationNotStarted,
-  SeniorID,
-  IDRealID,
-  ReducedOrNoFee,
-  IDAction,
-  CurrentIDInfo
-} from '../../../../client/presentations/conclusion/summary/id-app/index';
-import {
-  Empty,
-  LegalName,
-  DateOfBirth,
-  Address,
-  TraitsHeightWeight,
-  PhysicalTraits,
-  SocialSecurity
-} from '../../../../client/presentations/conclusion/summary/my-basics/index';
-import {
-  LicenseIssues,
-  LicenseAndIdHistory,
-  NamesHistory,
-  MedicalHistory,
-  VeteransService
-} from '../../../../client/presentations/conclusion/summary/my-history/index';
-import {
-  CitizenStatus,
-  EligibilityRequirements,
-  BallotByMail,
-  PoliticalPartyChoose,
-  BallotLanguage,
-  ContactMethods,
-  OptOut
-} from '../../../../client/presentations/conclusion/summary/voting/index';
-
 import OrganDonation      from '../../../../client/presentations/conclusion/summary/organ-donation.jsx';
 import GuardianSignature  from '../../../../client/presentations/conclusion/summary/guardian-signature.jsx'
 
@@ -91,1048 +50,9 @@ describe('Summary components', function() {
     props = Object.assign({}, data.application);
     props.server = '';
     props.onSubmit = spy();
-    props.summary = 'summary';
     props.locale = locale;
   });
 
-  describe('DLApp', function() {
-
-    describe('DLAction', function() {
-      let component;
-      beforeEach(function() {
-        props.cardType = ['DL'];
-        props.cardAction = 'new';
-        props.DLApp.isApplying = true;
-        props.DLApp.action = 'new';
-
-        component = render(
-          <Wrapper>
-            <DLAction
-              { ...props }
-            />
-          </Wrapper>
-        );
-      });
-      it('shows action for DL', function() {
-        assert.equal(component.text().includes('Applying for the first time'), true);
-      });
-
-      it('shows edit button going to the addWdywtdy page and then back to IDDL summary page', function() {
-        assert.ok(component.find('.addWdywtdt[href="/add/driver-license"]'));
-      });
-    });
-    describe('CurrentDLInfo', function() {
-      it('shows current card info when user is renewing a card and has provided info of card to renew', function() {
-        props.cardType = ['DL'];
-        props.cardAction = 'renew';
-        props.DLApp = {
-          isApplying: true,
-          action: 'renew'
-        }
-
-        props.DLApp.currentCard = {
-          number: 'a90382kf',
-          month: '11',
-          day: '13',
-          year: '2008'
-        };
-        let component = render(
-          <Wrapper>
-            <CurrentDLInfo
-              {...props}
-            />
-          </Wrapper>
-        );
-        assert.equal(component.text().includes('Driver license numbera90382kf'), true);
-        assert.equal(component.text().includes('Expiration date:11/13/2008'), true)
-      });
-    });
-
-    describe('DLRealID', function() {
-
-      it('shows Real-ID Compliant No if user is getting a DL but not getting a real ID on the DL', function(){
-        props.DLApp = {
-          isApplying: true,
-          realID: 'No'
-        };
-        props.IDApp = {
-          isApplying: true,
-          realID: 'Yes'
-        };
-        props.realID = props.DLApp.realID;
-
-
-        let component = render(
-          <Wrapper>
-            <DLRealID { ...props } />
-          </Wrapper>
-        );
-        assert.ok(component.text().includes('Real-ID CompliantNo'));
-      });
-      it('shows Real-ID Compliant Yes if user is getting a real ID on the DL', function(){
-        props.DLApp = {
-          isApplying: true,
-          realID: 'Yes'
-        };
-        props.IDApp = {
-          isApplying: true,
-          realID: 'No'
-        };
-        props.realID = props.DLApp.realID;
-
-        let component = render(
-          <Wrapper>
-            <DLRealID { ...props } />
-          </Wrapper>
-        );
-        assert.ok(component.text().includes('Real-ID CompliantYes'));
-      });
-      it('does not show if user is not getting a DL', function() {
-        props.DLApp = {
-          isApplying: false,
-          realID: ''
-        };
-        props.IDApp = {
-          isApplying: false,
-          realID: ''
-        };
-        props.realID = props.DLApp.realID;
-
-        let component = render(
-          <Wrapper>
-            <DLRealID { ...props } />
-          </Wrapper>
-        );
-        assert.ok(!component.text().includes('Real-ID'));
-      });
-
-      it('shows No if props.realID is blank', function() {
-        props.DLApp = {
-          isApplying: true,
-          realID: ''
-        };
-        props.IDApp = {
-          isApplying: false,
-          realID: ''
-        };
-        props.realID = props.DLApp.realID;
-
-
-        let component = render(
-          <Wrapper>
-            <DLRealID { ...props } />
-          </Wrapper>
-        );
-        assert.ok(component.text().includes('Real-ID CompliantNo'));
-      });
-
-      it('shows No if props.realID is No', function() {
-        props.realID = 'No';
-        props.DLApp = {
-          isApplying: true,
-          realID: ''
-        };
-        props.IDApp = {
-          isApplying: false,
-          realID: ''
-        };
-
-        let component = render(
-          <Wrapper>
-            <DLRealID { ...props } />
-          </Wrapper>
-        );
-        assert.equal(component.text().includes('Real-ID CompliantNo'), true);
-      });
-
-    });
-    describe('LicenseType', function() {
-      it('lists which types of licenses the user has selected', function() {
-        props.cardType = ['DL'];
-        props.DLApp = {
-          isApplying: true,
-          action: 'new',
-          licenseType: {
-            type: ['car', 'cycle'],
-            needEndorsement: 'Yes',
-            endorsement: 'firefighter'
-          },
-          locale: 'en'
-        };
-        data.summary = 'summary';
-
-        let component = render(
-          <Wrapper>
-            <LicenseType
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.ok(component.text().includes('Car (Class C)'), 'car type not rendered in summary');
-        assert.ok(component.text().includes('Motorcycle (Class M)'), 'moto type not rendered in summary');
-        assert.ok(!component.text().includes('Housecar'));
-        assert.ok(component.text().includes('Firefighter endorsementYes'), 'license endorsement not rendered in summary');
-      });
-    });
-  });
-
-  describe('IDApp', function() {
-
-    describe('IDAction', function() {
-      it('shows action for ID', function() {
-        props.cardType = ['ID'];
-        props.IDApp = {
-          isApplying: true,
-          action: 'new',
-          cardChanges: {
-            correctOrUpdate: ''
-          }
-        };
-
-        let component = render(
-          <Wrapper>
-            <IDAction
-              { ...props }
-            />
-          </Wrapper>
-        );
-        assert.equal(component.text().includes('Applying for the first time'), true);
-      });
-    });
-    describe('CurrentIDInfo', function() {
-      it('shows current card info when user is renewing a card and has provided info of card to renew', function() {
-        props.cardType = ['ID'];
-        props.cardAction = 'renew';
-        props.IDApp = {
-          isApplying: true,
-          action: 'renew'
-        };
-
-        props.IDApp.currentCard = {
-          number: 'a90382kf',
-          month: '11',
-          day: '13',
-          year: '2008'
-        };
-        let component = render(
-          <Wrapper>
-            <CurrentIDInfo
-              {...props}
-            />
-          </Wrapper>
-        );
-        assert.equal(component.text().includes('ID card numbera90382kf'), true);
-        assert.equal(component.text().includes('Expiration date:11/13/2008'), true);
-      });
-    });
-    describe('SeniorID', function() {
-      it('shows SeniorID selection', function(){
-        props.seniorID = 'Yes';
-
-        let component = render(
-          <Wrapper>
-            <SeniorID
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.ok(component.text().includes('Senior IDYes'));
-      });
-    });
-
-    describe('IDRealID', function() {
-      it('shows Real-ID Compliant Yes when user is using ID as real ID', function(){
-        props.IDApp = {
-          isApplying: true,
-          realID: 'Yes'
-        };
-        props.realID = props.IDApp.realID;
-        props.DLApp = {
-          isApplying: true,
-          realID: 'No'
-        };
-
-        let component = render(
-          <Wrapper>
-            <IDRealID { ...props } />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Real-ID CompliantYes'), true);
-      });
-
-      it('shows RealID Compliant No for ID when user is using DL as real ID but is getting an ID', function(){
-        props.IDApp = {
-          isApplying: true,
-          realID: 'No'
-        };
-        props.realID = props.IDApp.realID;
-        props.DLApp = {
-          isApplying: true,
-          realID: 'Yes'
-        };
-
-        let component = render(
-          <Wrapper>
-            <IDRealID { ...props } />
-          </Wrapper>
-        );
-        assert.equal(component.text().includes('Real-ID CompliantNo'), true);
-      });
-
-
-      it('does not show if the user is not getting an ID', function() {
-
-        let component = render(
-          <Wrapper>
-            <IDRealID { ...props } />
-          </Wrapper>
-        );
-        assert.ok(!component.text().includes('Real-ID Compliant'));
-      });
-    });
-
-    describe('ReducedOrNoFee', function() {
-      it('returns null when no value', function(){
-        props.IDApp = {
-          isApplying: true,
-          action: 'new',
-          reducedFee: {
-            ID: 'Yes',
-            form: 'Yes'
-          },
-          realID: ''
-        };
-
-        let component = render(
-          <Wrapper>
-            <ReducedOrNoFee
-              { ...props }
-              reducedFee = {props.IDApp.reducedFee}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.find('.summary-section'), false);
-      });
-    });
-  });
-
-  describe('MyHistory', function() {
-
-    describe('LicenseAndIDHistory', function() {
-      it('shows "None" when no license and id history', function() {
-        let licenseAndIdHistory = {
-          DLIDNumber: '',
-          issuedBy: '',
-          month: '',
-          day: '',
-          year: '',
-          isIssued: 'No'
-        };
-
-        let component = render(
-          <Wrapper>
-            <LicenseAndIdHistory
-              { ...props }
-              title = 'Previous DL/ID card number'
-              editKey = 'addLicenseHistory'
-              licenseAndIdHistory={licenseAndIdHistory}
-              title = 'Previous DL/ID card number'
-              editKey = 'cardHistory'
-              summary = 'summary'
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Previous DL/ID card number'), true);
-        assert.equal(component.text().includes('None'), true);
-      });
-
-      it('shows license and id history selections', function(){
-        let licenseAndIdHistory = {
-          DLIDNumber: '111',
-          issuedBy: 'CA',
-          month: '1',
-          day: '1',
-          year: '2018',
-          isIssued: 'Yes'
-        };
-
-        let component = render(
-          <Wrapper>
-            <LicenseAndIdHistory
-              { ...props }
-              title = 'Previous DL/ID card number'
-              editKey = 'addLicenseHistory'
-              licenseAndIdHistory={licenseAndIdHistory}
-              title = 'Previous DL/ID card number'
-              editKey = 'cardHistory'
-              summary = 'summary'
-            />
-          </Wrapper>
-        )
-
-        assert.equal(component.text().includes('Previous DL/ID card number'), true);
-        assert.equal(component.text().includes('111'), true);
-        assert.equal(component.text().includes('Issued in'), true);
-        assert.equal(component.text().includes('CA'), true);
-        assert.equal(component.text().includes('Expiration date'), true);
-        assert.equal(component.text().includes('1/1/2018'), true);
-      });
-    });
-
-    describe('NamesHistory', function() {
-      it('shows "None" when no names history', function(){
-        props.namesHistory = {
-          hasUsedPreviousNames: 'No',
-          previousNames: ''
-        };
-        let component = render(
-          <Wrapper>
-            <NamesHistory
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Previous Names'), true);
-        assert.equal(component.text().includes('None'), true);
-      });
-
-      it('shows names history', function(){
-        props.namesHistory = {
-          hasUsedPreviousNames: 'Yes',
-          previousNames: 'John Doe'
-        };
-
-        let component = render(
-          <Wrapper>
-            <NamesHistory
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Previous Names'), true);
-        assert.equal(component.text().includes('John Doe'), true);
-      });
-    });
-
-    describe('MedicalHistory', function() {
-      describe('when not getting a DL', function() {
-        it('does not show medical history', function() {
-          let medicalHistory = {
-            hasMedicalCondition: 'Yes',
-            medicalInfo: 'blind'
-          };
-
-          props.DLApp.isApplying = false;
-
-          let component = render(
-            <Wrapper>
-              <MedicalHistory
-              { ...props }
-              medicalHistory={medicalHistory}
-              />
-            </Wrapper>
-          )
-          assert.equal(component.text().includes('Medical conditions'), false);
-          assert.equal(component.text().includes('None'), false);
-        });
-      });
-
-      describe('when getting a DL', function() {
-        it('shows "None" when no medical history', function() {
-          let medicalHistory = {
-            hasMedicalCondition: 'No',
-            medicalInfo: ''
-          };
-          props.cardType = ['DL'];
-          props.DLApp = {
-            isApplying: true,
-            action: 'new'
-          };
-
-          let component = render(
-            <Wrapper>
-            <MedicalHistory
-            { ...props }
-            medicalHistory={medicalHistory}
-            />
-            </Wrapper>
-          )
-          assert.equal(component.text().includes('Medical conditions'), true);
-          assert.equal(component.text().includes('None'), true);
-        });
-
-      it('shows medical history', function(){
-        let medicalHistory = {
-          hasMedicalCondition: 'Yes',
-          medicalInfo: 'Blind'
-        };
-        props.cardType = ['DL'];
-        props.DLApp = {
-          isApplying: true,
-          action: 'new'
-        };
-
-        let component = render(
-            <Wrapper>
-            <MedicalHistory
-            { ...props }
-            medicalHistory={medicalHistory}
-            />
-            </Wrapper>
-          )
-          assert.equal(component.text().includes('Medical conditions'), true);
-          assert.equal(component.text().includes('Blind'), true);
-        });
-      })
-    });
-    describe('LicenseIssues', function() {
-      it('shows "None" when no license issues', function(){
-        let licenseIssues = {
-          isSuspended: 'No',
-          month: '',
-          day: '',
-          year: '',
-          reason: ''
-        };
-
-        let component = render(
-          <Wrapper>
-            <LicenseIssues
-              { ...props }
-              licenseIssues={licenseIssues}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Driving record'), true);
-        assert.equal(component.text().includes('None'), true);
-      });
-
-      it('shows license issues selections', function(){
-        let licenseIssues = {
-          isSuspended: 'Yes',
-          month: '11',
-          day: '11',
-          year: '2015',
-          reason: 'DUI'
-        };
-
-        let component = render(
-          <Wrapper>
-            <LicenseIssues
-              { ...props }
-              licenseIssues={licenseIssues}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Driving record'), true);
-        assert.equal(component.text().includes('DUI'), true);
-        assert.equal(component.text().includes('Record date:'), true);
-        assert.equal(component.text().includes('11/11/2015'), true);
-      });
-    });
-
-    describe('VeteransService', function() {
-      it('shows veterans service selections', function(){
-        let veteransService = {
-          isVeteran: 'Yes',
-          receiveBenefits: 'No',
-          previouslyDesignated: 'Yes',
-          veteransIdentifier: 'Yes'
-        };
-
-        let component = render(
-          <Wrapper>
-            <VeteransService
-              { ...props }
-              veteransService={veteransService}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Veteran:'), true);
-        assert.equal(component.text().includes('Yes'), true);
-        assert.equal(component.text().includes('Get benefit information:'), true);
-        assert.equal(component.text().includes('No'), true);
-        assert.equal(component.text().includes('"Veteran" printed on card(s):'), true);
-      });
-
-      it('shows only isVeteran answer if answer is No', function() {
-        let veteransService = {
-          isVeteran: 'No',
-          receiveBenefits: '',
-          previouslyDesignated: '',
-          veteransIdentifier: ''
-        };
-        let component = render(
-          <Wrapper>
-            <VeteransService
-              { ...props }
-              veteransService={veteransService}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Veteran:No'), true);
-        assert.equal(component.text().includes('Get benefit information:'), false);
-        assert.equal(component.text().includes('"Veteran" printed on card(s):'), false);
-      });
-    });
-  });
-
-  describe('MyBasics', function() {
-    describe('Empty', function() {
-      it('returns null when no value', function() {
-        let component = render(
-          <Wrapper>
-            <Empty { ...props } />
-          </Wrapper>
-        );
-
-        assert.ok(component.text().includes('No information has been entered yet'));
-      });
-    });
-    describe('LegalName', function() {
-      it('shows name when name entered', function() {
-        props.legalName = {
-          firstName: 'this',
-          middleName: 'is',
-          lastName: 'my',
-          suffix: 'III'
-        };
-        props.editKey = 'legalName';
-        let component = render(
-          <Wrapper>
-            <LegalName
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Name'), true);
-        assert.equal(component.text().includes('this is my III'), true);
-      });
-    });
-
-    describe('DateOfBirth', function() {
-      it('shows date of birth fields', function(){
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        props.editKey = 'dateOfBirth';
-        let component = render(
-          <Wrapper>
-            <DateOfBirth
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Date Of Birth'), true);
-        assert.equal(component.text().includes('11/11/1999'), true);
-      });
-    });
-    describe('Address', function() {
-      it('shows address fields', function(){
-        props.basics.address.homeAddressSameAsMailing = 'No';
-        props.basics.address.home = {
-          street_1: '111 Main Street',
-          street_2: '',
-          city: 'Sacramento',
-          state: 'CA',
-          zip: '95814'
-        };
-
-        props.basics.address.mailing = {
-          street_1: '222 High Street',
-          street_2: '',
-          city: 'Beverly Hills',
-          state: 'CA',
-          zip: '90210'
-        };
-
-        props.editKey = 'addresses';
-
-        let component = render(
-          <Wrapper>
-            <Address
-              { ...props }
-              address = {props.basics.address}
-            />
-          </Wrapper>
-        )
-
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.myBasics.homeAddress}`), true);
-        assert.equal(component.text().includes('111 Main Street'), true);
-        assert.equal(component.text().includes('Sacramento, CA 95814'), true);
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.myBasics.mailingAddress}`), true);
-        assert.equal(component.text().includes('222 High Street'), true);
-        assert.equal(component.text().includes('Beverly Hills, CA 90210'), true);
-      });
-    });
-    describe('TraitsHeightWeight', function() {
-      it('shows height and weight traits', function(){
-        props.traitsHeightWeight = {
-          weight: '200',
-          heightFeet: '6',
-          heightInches: '3'
-        };
-
-        props.editKey = 'heightWeight';
-
-        let component = render(
-          <Wrapper>
-            <TraitsHeightWeight
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Height'), true);
-        assert.equal(component.text().includes('6 feet 3 inches'), true);
-        assert.equal(component.text().includes('Weight'), true);
-        assert.equal(component.text().includes('200 pounds'), true);
-      });
-    });
-    describe('PhysicalTraits', function() {
-      it('shows physical traits', function(){
-        props.physicalTraits = {
-          sex: 'Female',
-          eyeColor: 'Green',
-          hairColor: 'Black'
-        };
-
-        props.editKey = 'sexEyeHair';
-
-        let component = render(
-          <Wrapper>
-            <PhysicalTraits
-              { ...props }
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Sex'), true);
-        assert.equal(component.text().includes('Female'), true);
-        assert.equal(component.text().includes('Eye Color'), true);
-        assert.equal(component.text().includes('Green'), true);
-        assert.equal(component.text().includes('Hair Color'), true);
-        assert.equal(component.text().includes('Black'), true);
-      });
-    });
-    describe('SocialSecurity', function() {
-      it('shows social security number', function(){
-        let socialSecurity = {
-          hasSocialSecurity: 'Yes',
-          part1: '234',
-          part2: '56',
-          part3: '1293'
-        };
-
-        props.editKey = 'socialSecurity';
-
-        let component = render(
-          <Wrapper>
-            <SocialSecurity
-              { ...props }
-              socialSecurity={socialSecurity}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Social Security Number'), true);
-        assert.equal(component.text().includes('xxx-xx-1293'), true);
-      });
-    });
-  });
-
-  describe('Voting', function() {
-    describe('CitizenStatus', function() {
-      it('shows citizens status', function(){
-         props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        let citizenStatus = 'Yes';
-        props.editKey = 'citizenship';
-
-        let component = render(
-          <Wrapper>
-            <CitizenStatus
-              { ...props }
-              citizenStatus={citizenStatus}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.citizen}`), true);
-        assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
-      });
-      it('shows decline to answer text when user has declined to answer', function() {
-        let citizenStatus = 'decline';
-         props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        props.editKey = 'citizenship';
-
-        let component = render(
-          <Wrapper>
-            <CitizenStatus
-              { ...props }
-              citizenStatus={citizenStatus}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.citizen}`), true);
-        assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.declineToAnswer}`), true);
-      });
-       it('citizenship shows not available because youth cannot preregister', function() {
-         let youthYear = new Date().getFullYear() - 14;
-         let citizenStatus = 'Decline to answer';
-         props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: youthYear
-        };
-
-        let component = render(
-          <Wrapper>
-            <CitizenStatus
-              { ...props }
-              citizenStatus={citizenStatus}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.citizen}`), true);
-        assert.equal(component.text().includes('Not Available'), true);
-      });
-    });
-
-    describe('EligibilityRequirements', function() {
-      it('eligibility shows not available because youth cannot preregister', function(){
-        let eligibilityRequirements = 'Decline to answer';
-        let youthYear = new Date().getFullYear() - 14;
-         props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: youthYear
-        };
-
-        let component = render(
-          <Wrapper>
-            <EligibilityRequirements
-              { ...props }
-              eligibilityRequirements={eligibilityRequirements}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.eligible}`), true);
-        assert.equal(component.text().includes('Not Available'), true);
-      });
-       it('shows eligibility', function(){
-        let eligibilityRequirements = 'Yes';
-         props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        props.editKey = 'votingEligibility';
-
-        let component = render(
-          <Wrapper>
-            <EligibilityRequirements
-              { ...props }
-              eligibilityRequirements={eligibilityRequirements}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.eligible}`), true);
-        assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
-      });
-    });
-
-    describe('OptOut', function() {
-      it('shows opt out', function(){
-        props.citizenStatus = 'Yes';
-        props.eligibilityRequirements = 'Yes';
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        let optOut = 'new';
-        props.editKey = 'votingOptOut';
-
-        let component = render(
-          <Wrapper>
-            <OptOut
-              { ...props }
-              optOut={optOut}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.registrationChoice}`), true);
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.choiceYes}`), true);
-      });
-    });
-
-    describe('PoliticalPartyChoose', function() {
-    it('shows political party selections', function(){
-        props.citizenStatus = 'Yes';
-        props.eligibilityRequirements = 'Yes';
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-      let politicalPartyChoose = {
-        isSelected: 'Yes',
-        politicalPartyChoose: 'Green Party'
-      };
-
-      let component = render(
-        <Wrapper>
-          <PoliticalPartyChoose
-            { ...props }
-            politicalPartyChoose={politicalPartyChoose}
-          />
-        </Wrapper>
-      )
-      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.politicalParty}`), true);
-      assert.equal(component.text().includes('Green Party'), true);
-    });
-
-    it('shows No Answer after user has switched answer', function() {
-        props.citizenStatus = 'Yes';
-        props.eligibilityRequirements = 'Yes';
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-      let politicalPartyChoose = {
-        isSelected: 'Skip',
-        politicalPartyChoose: 'Green Party'
-      };
-
-      let component = render(
-        <Wrapper>
-          <PoliticalPartyChoose
-            { ...props }
-            politicalPartyChoose={politicalPartyChoose}
-          />
-        </Wrapper>
-      );
-      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.politicalParty}`), true);
-      assert.equal(component.text().includes('No answer'), true);
-    });
-
-    it('shows the other party typed into the form', function() {
-      props.citizenStatus = 'Yes';
-      props.eligibilityRequirements = 'Yes';
-      props.dateOfBirth = {
-        month: '11',
-        day: '11',
-        year: '1999'
-      };
-      let politicalPartyChoose = {
-        isSelected: 'Yes',
-        politicalPartyChoose: 'Other',
-        otherParty: 'the French Canadians'
-      };
-
-      let component = render(
-        <Wrapper>
-          <PoliticalPartyChoose
-            { ...props }
-            politicalPartyChoose={politicalPartyChoose}
-          />
-        </Wrapper>
-      );
-      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.politicalParty}`), true);
-      assert.equal(component.text().includes('the French Canadians'), true);
-    });
-  });
-
-    describe('BallotLanguage', function() {
-      it('shows ballot language selection', function(){
-        props.citizenStatus = 'Yes';
-        props.eligibilityRequirements = 'Yes';
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        let ballotLanguage = 'ko';
-
-        let component = render(
-          <Wrapper>
-            <BallotLanguage
-              { ...props }
-              ballotLanguage={ballotLanguage}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.ballotLanguage}`), true);
-        assert.equal(component.text().includes('Korean'), true);
-      });
-    });
-
-    describe('BallotByMail', function() {
-      it('shows ballot by mail selection', function(){
-        props.citizenStatus = 'Yes';
-        props.eligibilityRequirements = 'Yes';
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        let ballotByMail = 'Yes';
-
-        let component = render(
-          <Wrapper>
-            <BallotByMail
-              { ...props }
-              ballotByMail={ballotByMail}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.voteByMail}`), true);
-        assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
-      });
-    });
-
-    describe('ContactMethods', function() {
-      it('shows contact methods selections', function () {
-        props.citizenStatus = 'Yes';
-        props.eligibilityRequirements = 'Yes';
-        props.dateOfBirth = {
-          month: '11',
-          day: '11',
-          year: '1999'
-        };
-        let contactMethods = {
-          shouldContact: 'Yes',
-          emailAddress: 'email@email.com',
-          phoneNumber1: '111',
-          phoneNumber2: '111',
-          phoneNumber3: '1111'
-        };
-
-        let component = render(
-          <Wrapper>
-            <ContactMethods
-              { ...props }
-              contactMethods={contactMethods}
-            />
-          </Wrapper>
-        )
-        assert.equal(component.text().includes('Should Contact'), true);
-        assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.email}`), true);
-        assert.equal(component.text().includes('email@email.com'), true);
-        assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.phone}`), true);
-        assert.equal(component.text().includes('(111) 111-1111'), true);
-      });
-    });
-  });
-
   describe('OrganDonation', function() {
     it('shows organ donation selections', function(){
       let data = {
@@ -1141,6 +61,9 @@ describe('Summary components', function() {
             donateMoney: 'Yes',
             donateOrgan: 'Yes'
           }
+        },
+        ui: {
+          locale: 'en'
         }
       };
 
diff --git a/test/client/presentations/conclusion/summary/dl-app-test.js b/test/client/presentations/conclusion/summary/dl-app-test.js
new file mode 100644
index 00000000..b23b367e
--- /dev/null
+++ b/test/client/presentations/conclusion/summary/dl-app-test.js
@@ -0,0 +1,198 @@
+'use strict';
+
+import assert           from 'assert';
+import React            from 'react';
+import configure        from '../../../support/configure-enzyme';
+import { render }       from 'enzyme';
+import { spy }          from 'sinon';
+import store            from '../../../support/page-store';
+import wrapperGenerator from '../../../support/wrapper';
+import data             from '../../../../../server/models/parsers/client-default-state.js';
+import translations     from '../../../../../client/i18n';
+
+import DLApp            from '../../../../../client/presentations/conclusion/summary/dl-app.jsx';
+import {
+  DLApplicationNotStarted,
+  DLAction,
+  CurrentDLInfo,
+  LicenseType
+} from '../../../../../client/presentations/conclusion/summary/dl-app/index';
+
+const Wrapper = wrapperGenerator(store);
+let locale = 'en';
+
+
+describe('Summary DL App section components', function() {
+  let props;
+  before(function() {
+    props = Object.assign({}, data.application);
+    props.locale = locale;
+    props.cardType = 'DL';
+  });
+
+  describe('#DLApplicationNotStarted', function(){
+    beforeEach(function() {
+      props.editKey = 'wdywtdt';
+    });
+    it('shows "No application started" text when user has not added an ID application', function() {
+      let component = render(
+        <Wrapper>
+          <DLApplicationNotStarted {...props} />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('No application started'));
+    });
+    it('shows Add button with className that includes "wdywtdt"', function() {
+      let component = render(
+        <Wrapper>
+          <DLApplicationNotStarted {...props} />
+        </Wrapper>
+      );
+      assert.ok(component.find('.wdywtdt').length);
+      assert.ok(component.text().includes('Add'));
+    });
+  });
+
+  describe('#DLAction', function() {
+    let component;
+    beforeEach(function() {
+      props.cardAction = 'new';
+      props.DLApp.isApplying = true;
+      props.DLApp.action = 'new';
+      props.editKey = 'wdywtdt';
+
+      component = render(
+        <Wrapper>
+          <DLAction
+            { ...props }
+          />
+        </Wrapper>
+      );
+    });
+    it('shows action for DL', function() {
+      assert.equal(component.text().includes('Applying for the first time'), true);
+    });
+
+    it('shows edit button going to the wdywtdy page and then back to IDDL summary page', function() {
+      assert.ok(component.find('.wdywtdt[href="/edit/id-and-license/what-do-you-want-to-do-today"]'));
+    });
+  });
+
+  describe('#CurrentDLInfo', function() {
+    it('shows current card info when user is renewing a card and has provided info of card to renew', function() {
+      props.cardAction = 'renew';
+      props.DLApp = {
+        isApplying: true,
+        action: 'renew'
+      }
+      props.DLApp.currentCard = {
+        number: 'a90382kf',
+        month: '11',
+        day: '13',
+        year: '2008'
+      };
+      props.editKey = 'currentCardInfo';
+
+      let component = render(
+        <Wrapper>
+          <CurrentDLInfo
+            {...props}
+          />
+        </Wrapper>
+      );
+      assert.equal(component.text().includes('Driver license numbera90382kf'), true);
+      assert.equal(component.text().includes('Expiration date11/13/2008'), true)
+    });
+  });
+
+  describe('#LicenseType', function() {
+    it('lists which types of licenses the user has selected', function() {
+      props.DLApp = {
+        isApplying: true,
+        action: 'new',
+        licenseType: {
+          type: ['car', 'cycle'],
+          needEndorsement: 'Yes',
+          endorsement: 'firefighter'
+        },
+        locale: 'en'
+      };
+      props.editKey = 'chooseLicenseClass';
+
+      let component = render(
+        <Wrapper>
+          <LicenseType
+            { ...props }
+          />
+        </Wrapper>
+      )
+      assert.ok(component.text().includes('Car (Class C)'), 'car type not rendered in summary');
+      assert.ok(component.text().includes('Motorcycle (Class M)'), 'moto type not rendered in summary');
+      assert.ok(!component.text().includes('Housecar'));
+      assert.ok(component.text().includes('Firefighter endorsementYes'), 'license endorsement not rendered in summary');
+    });
+  });
+
+  describe('#DL RealID', function() {
+    beforeEach(function() {
+      props = Object.assign({}, data);
+      props.editKey = 'realID';
+      props.ui = { locale };
+    });
+
+    it('shows Real-ID Compliant No if user is getting an ID but not getting a real ID on the DL', function(){
+      props.application.DLApp.isApplying = true;
+      props.application.DLApp.realID = 'No';
+      let component = render(
+        <Wrapper>
+          <DLApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Real-ID CompliantNo'));
+    });
+    it('shows Real-ID Compliant Yes if user is getting a real ID on the DL', function(){
+      props.application.DLApp.isApplying = true;
+      props.application.DLApp.realID = 'Yes';
+
+      let component = render(
+        <Wrapper>
+          <DLApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Real-ID CompliantYes'));
+    });
+    it('does not show if user is not getting a DL', function() {
+      props.application.DLApp.realID = 'No';
+      props.application.DLApp.isApplying = false;
+      let component = render(
+        <Wrapper>
+          <DLApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(!component.text().includes('Real-ID'));
+    });
+
+    it('shows No if props.DLApp.RealID is blank', function() {
+      props.application.DLApp.isApplying = true;
+      props.application.DLApp.realID = '';
+
+      let component = render(
+        <Wrapper>
+          <DLApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Real-ID CompliantNo'));
+    });
+
+    it('has a link button with href to "realID" edit path', function() {
+      props.application.DLApp.isApplying = true;
+      let component = render(
+        <Wrapper>
+          <DLApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.find('.realID.button[href="/apply/id-and-license/edit/real-id"]').length);
+    });
+  });
+
+});
\ No newline at end of file
diff --git a/test/client/presentations/conclusion/summary/id-app-test.js b/test/client/presentations/conclusion/summary/id-app-test.js
new file mode 100644
index 00000000..3c0019d4
--- /dev/null
+++ b/test/client/presentations/conclusion/summary/id-app-test.js
@@ -0,0 +1,212 @@
+'use strict';
+
+import assert           from 'assert';
+import React            from 'react';
+import configure        from '../../../support/configure-enzyme';
+import { render }       from 'enzyme';
+import { spy }          from 'sinon';
+import store            from '../../../support/page-store';
+import wrapperGenerator from '../../../support/wrapper';
+import data             from '../../../../../server/models/parsers/client-default-state.js';
+import translations     from '../../../../../client/i18n';
+
+import IDApp            from '../../../../../client/presentations/conclusion/summary/id-app.jsx';
+import {
+  IDApplicationNotStarted,
+  SeniorID,
+  ReducedOrNoFee,
+  IDAction,
+  CurrentIDInfo
+} from '../../../../../client/presentations/conclusion/summary/id-app/index';
+
+const Wrapper = wrapperGenerator(store);
+let locale = 'en';
+
+describe('Summary ID App section', function() {
+  let props;
+  beforeEach(function() {
+    props = {
+      application: Object.assign({}, data.application),
+      onSubmit: spy(),
+      ui: { locale }
+    };
+  });
+
+  describe('ID RealID', function() {
+
+    it('shows Real-ID Compliant No if user is getting an ID but not getting a real ID on the ID', function(){
+      props.application.IDApp.isApplying = true;
+      props.application.IDApp.realID = 'No';
+
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Real-ID CompliantNo'));
+    });
+    it('shows Real-ID Compliant Yes if user is getting a real ID on the ID', function(){
+      props.application.IDApp.isApplying = true;
+      props.application.IDApp.realID = 'Yes';
+
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Real-ID CompliantYes'));
+    });
+    it('does not show if user is not getting an ID', function() {
+      props.application.IDApp.isApplying = false;
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(!component.text().includes('Real-ID'));
+    });
+
+    it('shows No if props.IDApp.RealID is blank', function() {
+      props.application.IDApp.isApplying = true;
+      props.application.IDApp.realID = '';
+
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Real-ID CompliantNo'));
+    });
+
+    it('has a link button with href to "realID" edit path', function() {
+      props.application.IDApp.isApplying = true;
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.find('.realID.button[href="/apply/id-and-license/edit/real-id"]').length);
+    });
+  });
+
+  describe('IDAction', function() {
+    it('has an edit button with link to "wdywtdt" edit path if user is getting an ID', function() {
+      props.application.IDApp.isApplying = true;
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.find('.wdywtdt.button[href="/apply/id-and-license/edit/what-do-you-want-to-do-today"]').length);
+      assert.ok(component.text().includes('Edit'));
+    });
+    it('has an add button with link to "wdywtdt" add path if user is not getting an ID', function() {
+      props.application.IDApp.isApplying = false;
+      let component = render(
+        <Wrapper>
+          <IDApp { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.find('.wdywtdt.button[href="/apply/id-and-license/add/what-do-you-want-to-do-today"]').length);
+      assert.ok(component.text().includes('Add'));
+    });
+  });
+});
+
+describe('Summary ID App section components', function() {
+  let props;
+  beforeEach(function() {
+    props = Object.assign({}, data.application);
+    props.locale = locale;
+    props.cardType = 'ID';
+  });
+  describe('IDAction', function() {
+    it('shows action for ID', function() {
+      props.IDApp = {
+        isApplying: true,
+        action: 'new',
+        cardChanges: {
+          correctOrUpdate: ''
+        }
+      };
+      props.editKey = 'wdywtdt';
+
+      let component = render(
+        <Wrapper>
+          <IDAction
+            { ...props }
+          />
+        </Wrapper>
+      );
+      assert.equal(component.text().includes('Applying for the first time'), true);
+    });
+  });
+  describe('CurrentIDInfo', function() {
+    it('shows current card info when user is renewing a card and has provided info of card to renew', function() {
+      props.cardAction = 'renew';
+      props.IDApp = {
+        isApplying: true,
+        action: 'renew'
+      };
+
+      props.IDApp.currentCard = {
+        number: 'a90382kf',
+        month: '11',
+        day: '13',
+        year: '2008'
+      };
+      props.editKey = 'currentCardInfo';
+
+      let component = render(
+        <Wrapper>
+          <CurrentIDInfo
+            {...props}
+            editKey = 'currentCardInfo'
+          />
+        </Wrapper>
+      );
+      assert.equal(component.text().includes('ID card numbera90382kf'), true);
+      assert.equal(component.text().includes('Expiration date11/13/2008'), true);
+    });
+  });
+  describe('SeniorID', function() {
+    it('shows SeniorID selection', function(){
+      props.seniorID = 'Yes';
+
+      let component = render(
+        <Wrapper>
+          <SeniorID
+            { ...props }
+            editKey = 'seniorID'
+          />
+        </Wrapper>
+      )
+      assert.ok(component.text().includes('Senior IDYes'));
+    });
+  });
+
+  describe('ReducedOrNoFee', function() {
+    it('returns null when no value', function(){
+      props.IDApp = {
+        isApplying: true,
+        action: 'new',
+        reducedFee: {
+          ID: 'Yes',
+          form: 'Yes'
+        },
+        realID: ''
+      };
+      props.editKey = 'reducedFeeID';
+
+      let component = render(
+        <Wrapper>
+          <ReducedOrNoFee
+            { ...props }
+            reducedFee = {props.IDApp.reducedFee}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.find('.summary-section'), false);
+    });
+  });
+});
\ No newline at end of file
diff --git a/test/client/presentations/conclusion/summary/my-basics-test.js b/test/client/presentations/conclusion/summary/my-basics-test.js
new file mode 100644
index 00000000..e123115a
--- /dev/null
+++ b/test/client/presentations/conclusion/summary/my-basics-test.js
@@ -0,0 +1,219 @@
+'use strict';
+
+import assert           from 'assert';
+import React            from 'react';
+import configure        from '../../../support/configure-enzyme';
+import { render }       from 'enzyme';
+import { spy }          from 'sinon';
+import store            from '../../../support/page-store';
+import wrapperGenerator from '../../../support/wrapper';
+import data             from '../../../../../server/models/parsers/client-default-state.js';
+import translations     from '../../../../../client/i18n';
+
+import MyBasics         from '../../../../../client/presentations/conclusion/summary/my-basics.jsx';
+import {
+  Empty,
+  LegalName,
+  DateOfBirth,
+  Address,
+  TraitsHeightWeight,
+  PhysicalTraits,
+  SocialSecurity
+} from '../../../../../client/presentations/conclusion/summary/my-basics/index';
+
+const Wrapper = wrapperGenerator(store);
+let locale = 'en';
+
+describe('Summary My Basics section', function() {
+  let props;
+  beforeEach(function() {
+    props = {
+      application: Object.assign({}, data.application),
+      onSubmit: spy(),
+      ui: { locale }
+    };
+  });
+
+  describe('#My basics accordion', function() {
+    it('shows an opened accordion with text "My basics"', function() {
+      let component = render(
+        <Wrapper>
+          <MyBasics { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('My basics'));
+    });
+  });
+});
+
+describe('Summary My basics section components', function() {
+  let props;
+  beforeEach(function() {
+    props = Object.assign({}, data.application);
+    props.locale = locale;
+    props.editKey = '';
+  });
+
+  describe('#Empty', function() {
+    it('returns null when no value', function() {
+      let component = render(
+        <Wrapper>
+          <Empty { ...props } />
+        </Wrapper>
+      );
+
+      assert.ok(component.text().includes('No information has been entered yet'));
+    });
+  });
+  describe('#LegalName', function() {
+    it('shows name when name entered', function() {
+      props.legalName = {
+        firstName: 'this',
+        middleName: 'is',
+        lastName: 'my',
+        suffix: 'III'
+      };
+      props.editKey = 'legalName';
+      let component = render(
+        <Wrapper>
+          <LegalName
+            { ...props }
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Name'), true);
+      assert.equal(component.text().includes('this is my III'), true);
+    });
+  });
+
+  describe('#DateOfBirth', function() {
+    it('shows date of birth fields', function(){
+      props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      props.editKey = 'dateOfBirth';
+      let component = render(
+        <Wrapper>
+          <DateOfBirth
+            { ...props }
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Date of birth'), true);
+      assert.equal(component.text().includes('11/11/1999'), true);
+    });
+  });
+  describe('#Address', function() {
+    it('shows address fields', function(){
+      props.basics.address.homeAddressSameAsMailing = 'No';
+      props.basics.address.home = {
+        street_1: '111 Main Street',
+        street_2: '',
+        city: 'Sacramento',
+        state: 'CA',
+        zip: '95814'
+      };
+
+      props.basics.address.mailing = {
+        street_1: '222 High Street',
+        street_2: '',
+        city: 'Beverly Hills',
+        state: 'CA',
+        zip: '90210'
+      };
+
+      props.editKey = 'addresses';
+
+      let component = render(
+        <Wrapper>
+          <Address
+            { ...props }
+            address = {props.basics.address}
+          />
+        </Wrapper>
+      )
+
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.myBasics.homeAddress}`), true);
+      assert.equal(component.text().includes('111 Main Street'), true);
+      assert.equal(component.text().includes('Sacramento, CA 95814'), true);
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.myBasics.mailingAddress}`), true);
+      assert.equal(component.text().includes('222 High Street'), true);
+      assert.equal(component.text().includes('Beverly Hills, CA 90210'), true);
+    });
+  });
+  describe('#TraitsHeightWeight', function() {
+    it('shows height and weight traits', function(){
+      props.traitsHeightWeight = {
+        weight: '200',
+        heightFeet: '6',
+        heightInches: '3'
+      };
+
+      props.editKey = 'heightWeight';
+
+      let component = render(
+        <Wrapper>
+          <TraitsHeightWeight
+            { ...props }
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Height'), true);
+      assert.equal(component.text().includes('6 feet 3 inches'), true);
+      assert.equal(component.text().includes('Weight'), true);
+      assert.equal(component.text().includes('200 pounds'), true);
+    });
+  });
+  describe('#PhysicalTraits', function() {
+    it('shows physical traits', function(){
+      props.physicalTraits = {
+        sex: 'Female',
+        eyeColor: 'Green',
+        hairColor: 'Black'
+      };
+
+      props.editKey = 'sexEyeHair';
+
+      let component = render(
+        <Wrapper>
+          <PhysicalTraits
+            { ...props }
+          />
+        </Wrapper>
+      );
+
+      assert.equal(component.text().includes('Sex'), true);
+      assert.equal(component.text().includes('Female'), true);
+      assert.equal(component.text().includes('Eye color'), true);
+      assert.equal(component.text().includes('Green'), true);
+      assert.equal(component.text().includes('Hair color'), true);
+      assert.equal(component.text().includes('Black'), true);
+    });
+  });
+  describe('#SocialSecurity', function() {
+    it('shows social security number when user has entered data', function(){
+      let socialSecurity = {
+        hasSocialSecurity: 'Yes',
+        part1: '234',
+        part2: '56',
+        part3: '1293'
+      };
+
+      props.editKey = 'socialSecurity';
+
+      let component = render(
+        <Wrapper>
+          <SocialSecurity
+            { ...props }
+            socialSecurity={socialSecurity}
+          />
+        </Wrapper>
+      )
+
+      assert.equal(component.text().includes('Social Security number'), true);
+      assert.equal(component.text().includes('xxx-xx-1293'), true);
+    });
+  });
+});
\ No newline at end of file
diff --git a/test/client/presentations/conclusion/summary/my-history-test.js b/test/client/presentations/conclusion/summary/my-history-test.js
new file mode 100644
index 00000000..430b6ce2
--- /dev/null
+++ b/test/client/presentations/conclusion/summary/my-history-test.js
@@ -0,0 +1,316 @@
+'use strict';
+
+import assert           from 'assert';
+import React            from 'react';
+import configure        from '../../../support/configure-enzyme';
+import { render }       from 'enzyme';
+import { spy }          from 'sinon';
+import store            from '../../../support/page-store';
+import wrapperGenerator from '../../../support/wrapper';
+import data             from '../../../../../server/models/parsers/client-default-state.js';
+import translations     from '../../../../../client/i18n';
+
+import MyHistory        from '../../../../../client/presentations/conclusion/summary/my-history.jsx';
+import {
+  LicenseIssues,
+  LicenseAndIdHistory,
+  NamesHistory,
+  MedicalHistory,
+  VeteransService
+} from '../../../../../client/presentations/conclusion/summary/my-history/index';
+
+const Wrapper = wrapperGenerator(store);
+let locale = 'en';
+
+describe('Summary My History section', function() {
+
+  describe('#My history accordion', function() {
+    it('shows a closed accordion with text "My history"', function() {
+      let props = {
+        application: Object.assign({}, data.application),
+        onSubmit: spy(),
+        ui: { locale }
+      };
+
+      let component = render(
+        <Wrapper>
+          <MyHistory { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('My history'));
+    });
+  });
+});
+
+describe('Summary My history section components', function() {
+  let props;
+  beforeEach(function() {
+    props = Object.assign({}, data.application);
+    props.locale = locale;
+  });
+
+  describe('#LicenseAndIDHistory', function() {
+    it('shows "None" when no license and id history', function() {
+      let licenseAndIdHistory = {
+        DLIDNumber: '',
+        issuedBy: '',
+        month: '',
+        day: '',
+        year: '',
+        isIssued: 'No'
+      };
+
+      let component = render(
+        <Wrapper>
+          <LicenseAndIdHistory
+            { ...props }
+            title = 'Previous DL/ID card number'
+            editKey = 'cardHistory'
+            licenseAndIdHistory={licenseAndIdHistory}
+            title = 'Previous DL/ID card number'
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Previous DL/ID card number'), true);
+      assert.equal(component.text().includes('None'), true);
+    });
+
+    it('shows license and id history selections', function(){
+      let licenseAndIdHistory = {
+        DLIDNumber: '111',
+        issuedBy: 'CA',
+        month: '1',
+        day: '1',
+        year: '2018',
+        isIssued: 'Yes'
+      };
+
+      let component = render(
+        <Wrapper>
+          <LicenseAndIdHistory
+            { ...props }
+            title = 'Previous DL/ID card number'
+            editKey = 'cardHistory'
+            licenseAndIdHistory={licenseAndIdHistory}
+            title = 'Previous DL/ID card number'
+
+          />
+        </Wrapper>
+      )
+
+      assert.equal(component.text().includes('Previous DL/ID card number'), true);
+      assert.equal(component.text().includes('111'), true);
+      assert.equal(component.text().includes('Issued in'), true);
+      assert.equal(component.text().includes('CA'), true);
+      assert.equal(component.text().includes('Expiration date'), true);
+      assert.equal(component.text().includes('1/1/2018'), true);
+    });
+  });
+
+  describe('#NamesHistory', function() {
+    it('shows "None" when no names history', function(){
+      props.namesHistory = {
+        hasUsedPreviousNames: 'No',
+        previousNames: ''
+      };
+      let component = render(
+        <Wrapper>
+          <NamesHistory
+            { ...props }
+            editKey='nameHistory'
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Previous names'), true);
+      assert.equal(component.text().includes('None'), true);
+    });
+
+    it('shows names history', function(){
+      props.namesHistory = {
+        hasUsedPreviousNames: 'Yes',
+        previousNames: 'John Doe'
+      };
+
+      let component = render(
+        <Wrapper>
+          <NamesHistory
+            { ...props }
+            editKey='nameHistory'
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Previous names'), true);
+      assert.equal(component.text().includes('John Doe'), true);
+    });
+  });
+
+  describe('#MedicalHistory', function() {
+    describe('when not getting a DL', function() {
+      it('does not show medical history', function() {
+        let medicalHistory = {
+          hasMedicalCondition: 'Yes',
+          medicalInfo: 'blind'
+        };
+
+        props.DLApp.isApplying = false;
+
+        let component = render(
+          <Wrapper>
+            <MedicalHistory
+              { ...props }
+              medicalHistory={medicalHistory}
+              editKey = 'medicalHistory'
+            />
+          </Wrapper>
+        )
+        assert.equal(component.text().includes('Medical conditions'), false);
+        assert.equal(component.text().includes('None'), false);
+      });
+    });
+
+    describe('when getting a DL', function() {
+      it('shows "None" when no medical history', function() {
+        let medicalHistory = {
+          hasMedicalCondition: 'No',
+          medicalInfo: ''
+        };
+        props.DLApp = {
+          isApplying: true,
+          action: 'new'
+        };
+
+        let component = render(
+          <Wrapper>
+            <MedicalHistory
+              { ...props }
+              editKey = 'medicalHistory'
+              showIf = {true}
+              medicalHistory={medicalHistory}
+            />
+          </Wrapper>
+        )
+        assert.equal(component.text().includes('Medical conditions'), true);
+        assert.equal(component.text().includes('None'), true);
+      });
+
+    it('shows medical history', function(){
+      let medicalHistory = {
+        hasMedicalCondition: 'Yes',
+        medicalInfo: 'Blind'
+      };
+      props.DLApp = {
+        isApplying: true,
+        action: 'new'
+      };
+
+      let component = render(
+          <Wrapper>
+          <MedicalHistory
+          { ...props }
+          editKey = 'medicalHistory'
+          showIf = {true}
+          medicalHistory={medicalHistory}
+          />
+          </Wrapper>
+        )
+        assert.equal(component.text().includes('Medical conditions'), true);
+        assert.equal(component.text().includes('Blind'), true);
+      });
+    })
+  });
+  describe('#LicenseIssues', function() {
+    it('shows "None" when no license issues', function(){
+      let licenseIssues = {
+        isSuspended: 'No',
+        month: '',
+        day: '',
+        year: '',
+        reason: ''
+      };
+
+      let component = render(
+        <Wrapper>
+          <LicenseIssues
+            { ...props }
+            editKey = 'licenseIssues'
+            licenseIssues={licenseIssues}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Driving record'), true);
+      assert.equal(component.text().includes('None'), true);
+    });
+
+    it('shows license issues selections', function(){
+      let licenseIssues = {
+        isSuspended: 'Yes',
+        month: '11',
+        day: '11',
+        year: '2015',
+        reason: 'DUI'
+      };
+
+      let component = render(
+        <Wrapper>
+          <LicenseIssues
+            { ...props }
+            editKey = 'licenseIssues'
+            licenseIssues={licenseIssues}
+          />
+        </Wrapper>
+      )
+
+      assert.equal(component.text().includes('Driving record'), true);
+      assert.equal(component.text().includes('DUI'), true);
+      assert.equal(component.text().includes('Record date'), true);
+      assert.equal(component.text().includes('11/11/2015'), true);
+    });
+  });
+
+  describe('#VeteransService', function() {
+    it('shows veterans service selections', function(){
+      let veteransService = {
+        isVeteran: 'Yes',
+        receiveBenefits: 'No',
+        previouslyDesignated: 'Yes',
+        veteransIdentifier: 'Yes'
+      };
+
+      let component = render(
+        <Wrapper>
+          <VeteransService
+            { ...props }
+            editKey = 'veterans'
+            veteransService={veteransService}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Veteran:'), true);
+      assert.equal(component.text().includes('Yes'), true);
+      assert.equal(component.text().includes('Get benefit information:'), true);
+      assert.equal(component.text().includes('No'), true);
+      assert.equal(component.text().includes('"Veteran" printed on card(s):'), true);
+    });
+
+    it('shows only isVeteran answer if answer is No', function() {
+      let veteransService = {
+        isVeteran: 'No',
+        receiveBenefits: '',
+        previouslyDesignated: '',
+        veteransIdentifier: ''
+      };
+      let component = render(
+        <Wrapper>
+          <VeteransService
+            { ...props }
+            editKey = 'veterans'
+            veteransService={veteransService}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Veteran:No'), true);
+      assert.equal(component.text().includes('Get benefit information:'), false);
+      assert.equal(component.text().includes('"Veteran" printed on card(s):'), false);
+    });
+  });
+});
\ No newline at end of file
diff --git a/test/client/presentations/conclusion/summary/voting-test.js b/test/client/presentations/conclusion/summary/voting-test.js
new file mode 100644
index 00000000..5d11b560
--- /dev/null
+++ b/test/client/presentations/conclusion/summary/voting-test.js
@@ -0,0 +1,361 @@
+'use strict';
+
+import assert           from 'assert';
+import React            from 'react';
+import configure        from '../../../support/configure-enzyme';
+import { render }       from 'enzyme';
+import { spy }          from 'sinon';
+import store            from '../../../support/page-store';
+import wrapperGenerator from '../../../support/wrapper';
+import data             from '../../../../../server/models/parsers/client-default-state.js';
+import translations     from '../../../../../client/i18n';
+
+import Voting           from '../../../../../client/presentations/conclusion/summary/voting.jsx';
+import {
+  CitizenStatus,
+  EligibilityRequirements,
+  BallotByMail,
+  PoliticalPartyChoose,
+  BallotLanguage,
+  ContactMethods,
+  OptOut
+} from '../../../../../client/presentations/conclusion/summary/voting/index';
+
+const Wrapper = wrapperGenerator(store);
+let locale = 'en';
+
+describe('Summary Voting section', function() {
+  let props;
+  beforeEach(function() {
+    props = {
+      application: Object.assign({}, data.application),
+      onSubmit: spy(),
+      ui: { locale }
+    };
+  });
+
+  describe('#Voting accordion', function() {
+    it('shows a closed accordion with text "Voter registration"', function() {
+      let component = render(
+        <Wrapper>
+          <Voting { ...props } />
+        </Wrapper>
+      );
+      assert.ok(component.text().includes('Voter registration'));
+    });
+  });
+});
+
+describe('Summary Voter registration section components', function() {
+  let props;
+  beforeEach(function() {
+    props = Object.assign({}, data.application);
+    props.locale = locale;
+    props.editKey = '';
+  });
+
+  describe('#CitizenStatus', function() {
+    it('shows citizens status', function(){
+       props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      let citizenStatus = 'Yes';
+      props.editKey = 'citizenship'
+
+      let component = render(
+        <Wrapper>
+          <CitizenStatus
+            { ...props }
+            citizenStatus={citizenStatus}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.citizen}`), true);
+      assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
+    });
+    it('shows decline to answer text when user has declined to answer', function() {
+      let citizenStatus = 'decline';
+       props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      props.editKey = 'citizenship'
+
+      let component = render(
+        <Wrapper>
+          <CitizenStatus
+            { ...props }
+            citizenStatus={citizenStatus}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.citizen}`), true);
+      assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.declineToAnswer}`), true);
+    });
+     it('citizenship shows not available because youth cannot preregister', function() {
+       let youthYear = new Date().getFullYear() - 14;
+       let citizenStatus = 'Decline to answer';
+       props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: youthYear
+      };
+      props.editKey = 'citizenship'
+
+      let component = render(
+        <Wrapper>
+          <CitizenStatus
+            { ...props }
+            citizenStatus={citizenStatus}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.citizen}`), true);
+      assert.equal(component.text().includes('Not Available'), true);
+    });
+  });
+
+  describe('#EligibilityRequirements', function() {
+    beforeEach(function() {
+      props.editKey = 'votingEligibility';
+    });
+    it('eligibility shows not available because youth cannot preregister', function(){
+      let eligibilityRequirements = 'Decline to answer';
+      let youthYear = new Date().getFullYear() - 14;
+       props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: youthYear
+      };
+
+      let component = render(
+        <Wrapper>
+          <EligibilityRequirements
+            { ...props }
+            eligibilityRequirements={eligibilityRequirements}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.eligible}`), true);
+      assert.equal(component.text().includes('Not Available'), true);
+    });
+     it('shows eligibility', function(){
+      let eligibilityRequirements = 'Yes';
+       props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+
+      let component = render(
+        <Wrapper>
+          <EligibilityRequirements
+            { ...props }
+            eligibilityRequirements={eligibilityRequirements}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.eligible}`), true);
+      assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
+    });
+  });
+
+  describe('#OptOut', function() {
+    beforeEach(function() {
+      props.editKey = 'votingOptOut';
+    });
+    it('shows opt out', function(){
+      props.citizenStatus = 'Yes';
+      props.eligibilityRequirements = 'Yes';
+      props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      let optOut = 'new';
+
+      let component = render(
+        <Wrapper>
+          <OptOut
+            { ...props }
+            optOut={optOut}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.registrationChoice}`), true);
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.choiceYes}`), true);
+    });
+  });
+
+  describe('#PoliticalPartyChoose', function() {
+    beforeEach(function() {
+      props.editKey = 'choosePoliticalParty';
+    });
+    it('shows political party selections', function(){
+        props.citizenStatus = 'Yes';
+        props.eligibilityRequirements = 'Yes';
+        props.dateOfBirth = {
+          month: '11',
+          day: '11',
+          year: '1999'
+        };
+      let politicalPartyChoose = {
+        isSelected: 'Yes',
+        politicalPartyChoose: 'Green Party'
+      };
+
+      let component = render(
+        <Wrapper>
+          <PoliticalPartyChoose
+            { ...props }
+            politicalPartyChoose={politicalPartyChoose}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.politicalParty}`), true);
+      assert.equal(component.text().includes('Green Party'), true);
+    });
+
+    it('shows No Answer after user has switched answer', function() {
+        props.citizenStatus = 'Yes';
+        props.eligibilityRequirements = 'Yes';
+        props.dateOfBirth = {
+          month: '11',
+          day: '11',
+          year: '1999'
+        };
+      let politicalPartyChoose = {
+        isSelected: 'Skip',
+        politicalPartyChoose: 'Green Party'
+      };
+
+      let component = render(
+        <Wrapper>
+          <PoliticalPartyChoose
+            { ...props }
+            politicalPartyChoose={politicalPartyChoose}
+          />
+        </Wrapper>
+      );
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.politicalParty}`), true);
+      assert.equal(component.text().includes('No answer'), true);
+    });
+
+    it('shows the other party typed into the form', function() {
+      props.citizenStatus = 'Yes';
+      props.eligibilityRequirements = 'Yes';
+      props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      let politicalPartyChoose = {
+        isSelected: 'Yes',
+        politicalPartyChoose: 'Other',
+        otherParty: 'the French Canadians'
+      };
+
+      let component = render(
+        <Wrapper>
+          <PoliticalPartyChoose
+            { ...props }
+            politicalPartyChoose={politicalPartyChoose}
+          />
+        </Wrapper>
+      );
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.politicalParty}`), true);
+      assert.equal(component.text().includes('the French Canadians'), true);
+    });
+  });
+
+  describe('#BallotLanguage', function() {
+    beforeEach(function() {
+      props.editKey = 'chooseBallotLanguage';
+    });
+
+    it('shows ballot language selection', function(){
+      props.citizenStatus = 'Yes';
+      props.eligibilityRequirements = 'Yes';
+      props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      let ballotLanguage = 'ko';
+
+      let component = render(
+        <Wrapper>
+          <BallotLanguage
+            { ...props }
+            ballotLanguage={ballotLanguage}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.ballotLanguage}`), true);
+      assert.equal(component.text().includes('Korean'), true);
+    });
+  });
+
+  describe('#BallotByMail', function() {
+    it('shows ballot by mail selection', function(){
+      props.citizenStatus = 'Yes';
+      props.eligibilityRequirements = 'Yes';
+      props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      props.editKey = 'ballotByMail';
+      let ballotByMail = 'Yes';
+
+      let component = render(
+        <Wrapper>
+          <BallotByMail
+            { ...props }
+            ballotByMail={ballotByMail}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.voteByMail}`), true);
+      assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
+    });
+  });
+
+  describe('#ContactMethods', function() {
+    it('shows contact methods selections', function () {
+      props.citizenStatus = 'Yes';
+      props.eligibilityRequirements = 'Yes';
+      props.dateOfBirth = {
+        month: '11',
+        day: '11',
+        year: '1999'
+      };
+      props.editKey = 'contactMethods';
+      let contactMethods = {
+        shouldContact: 'Yes',
+        emailAddress: 'email@email.com',
+        phoneNumber1: '111',
+        phoneNumber2: '111',
+        phoneNumber3: '1111'
+      };
+
+      let component = render(
+        <Wrapper>
+          <ContactMethods
+            { ...props }
+            contactMethods={contactMethods}
+          />
+        </Wrapper>
+      )
+      assert.equal(component.text().includes('Should Contact'), true);
+      assert.equal(component.text().includes(`${translations[locale].shared.commonAnswers.yes}`), true);
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.email}`), true);
+      assert.equal(component.text().includes('email@email.com'), true);
+      assert.equal(component.text().includes(`${translations[locale].summaryPage.voterRegistration.phone}`), true);
+      assert.equal(component.text().includes('(111) 111-1111'), true);
+    });
+  });
+});
\ No newline at end of file
diff --git a/test/client/presentations/getStarted/date-of-birth-page-test.js b/test/client/presentations/getStarted/date-of-birth-page-test.js
index d3bfc61a..8d06a3e1 100644
--- a/test/client/presentations/getStarted/date-of-birth-page-test.js
+++ b/test/client/presentations/getStarted/date-of-birth-page-test.js
@@ -68,7 +68,7 @@ describe('DateOfBirthPage', function() {
         month: '04',
         year: (new Date().getFullYear() - 18).toString()
       };
-      props.addApp = 'cdl';
+      props.chooseApp = 'cdl';
       let component = render(
         <Wrapper>
           <DateOfBirthPage {...props} />
diff --git a/test/client/presentations/getStarted/intro-page/updating-id-info-test.js b/test/client/presentations/getStarted/intro-page/updating-id-info-test.js
index 6fd4fa3e..640de0cd 100644
--- a/test/client/presentations/getStarted/intro-page/updating-id-info-test.js
+++ b/test/client/presentations/getStarted/intro-page/updating-id-info-test.js
@@ -111,7 +111,7 @@ describe('UpdatingIDInfo', function() {
 
       let component = render(
         <Wrapper>
-        <GetStartedPage {...props} />
+          <GetStartedPage {...props} />
         </Wrapper>
       );
       assert.equal(component.text().includes(translations[locale].intro.getStartedPage.whatYouAreDoing.updatingReducedFeeID), true);
@@ -122,7 +122,7 @@ describe('UpdatingIDInfo', function() {
 
       let component = render(
         <Wrapper>
-        <GetStartedPage {...props} />
+          <GetStartedPage {...props} />
         </Wrapper>
       );
       assert.equal(component.text().includes(translations[locale].intro.getStartedPage.whatYouAreDoing.updatingSeniorID), true);
diff --git a/test/client/reducers/application/DL-app-action-test.js b/test/client/reducers/application/DL-app-action-test.js
index b9dd8b97..5c0cab2d 100644
--- a/test/client/reducers/application/DL-app-action-test.js
+++ b/test/client/reducers/application/DL-app-action-test.js
@@ -129,6 +129,17 @@ describe('DL app action reducer', function() {
 
       assert.deepEqual(newState, radioDL.payload.name);
     });
+
+    it('returns existing state when update_card_type is called from onFlowChange handler', function() {
+      let newState = updateCardType(state, {
+        type: 'UPDATE_CARD_TYPE',
+        payload: {
+          name: 'addFromSummary',
+          value: 'DL'
+        }
+      });
+      assert.deepEqual(newState, state);
+    });
   });
 
   describe('#cardAction', function() {
@@ -151,17 +162,6 @@ describe('DL app action reducer', function() {
 
   });
 
-  describe('#addApp', function() {
-    it('returns existing state when user clicks button to add a DL after completing ID app', function() {
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'driver-license'
-        }
-      });
-      assert.equal(newState, state);
-    });
-  });
 });
 
 
diff --git a/test/client/reducers/application/DL-app-test.js b/test/client/reducers/application/DL-app-test.js
index f4f60d9d..fe66935a 100644
--- a/test/client/reducers/application/DL-app-test.js
+++ b/test/client/reducers/application/DL-app-test.js
@@ -126,6 +126,16 @@ describe('DLApp isApplying reducer', function() {
 
       assert.deepEqual(newState, true);
     });
+    it('returns true if payload name if "addFromSummary"', function(){
+      let newState = updateCardType(state, {
+        type: 'UPDATE_CARD_TYPE',
+        payload: {
+          name: 'addFromSummary',
+          value: 'DL'
+        }
+      });
+      assert.equal(newState, true);
+    });
   });
 
   describe('#cardAction', function() {
@@ -164,29 +174,6 @@ describe('DLApp isApplying reducer', function() {
 
   });
 
-  describe('#addApp', function() {
-    it('returns true when user has clicked button to add DL application', function() {
-      state = false;
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'driver-license'
-        }
-      });
-      assert.equal(newState, true);
-    });
-
-    it('maintains state when has clicked button to add ID application', function() {
-      state = false;
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'id-card'
-        }
-      });
-      assert.equal(newState, state);
-    });
-  });
 });
 
 
diff --git a/test/client/reducers/application/ID-app-action-test.js b/test/client/reducers/application/ID-app-action-test.js
index 9604706c..c02930ac 100644
--- a/test/client/reducers/application/ID-app-action-test.js
+++ b/test/client/reducers/application/ID-app-action-test.js
@@ -197,19 +197,18 @@ describe('IDApp action reducer', function() {
       });
       assert.equal(newState, state);
     });
-  });
-
-  describe('#addApp', function() {
-    it('returns existing state when user clicks button to add a DL after completing ID app', function() {
+    it('returns existing state when update_card_type is called from onFlowChange handler', function() {
       let newState = updateCardType(state, {
-        type: 'ADD_APP',
+        type: 'UPDATE_CARD_TYPE',
         payload: {
-          value: 'driver-license'
+          name: 'addFromSummary',
+          value: 'ID'
         }
       });
-      assert.equal(newState, state);
+      assert.deepEqual(newState, state);
     });
   });
+
 });
 
 
diff --git a/test/client/reducers/application/ID-app-test.js b/test/client/reducers/application/ID-app-test.js
index 8bfdcb79..8c3fef94 100644
--- a/test/client/reducers/application/ID-app-test.js
+++ b/test/client/reducers/application/ID-app-test.js
@@ -164,6 +164,17 @@ describe('IDApp isApplying reducer', function() {
 
       assert.deepEqual(newState, false);
     });
+
+    it('returns true if payload name if "addFromSummary"', function(){
+      let newState = updateCardType(state, {
+        type: 'UPDATE_CARD_TYPE',
+        payload: {
+          name: 'addFromSummary',
+          value: 'ID'
+        }
+      });
+      assert.equal(newState, true);
+    });
   });
 
   describe('#cardAction', function() {
@@ -199,30 +210,6 @@ describe('IDApp isApplying reducer', function() {
 
   });
 
-
-  describe('#addApp', function() {
-    it('returns true when user has clicked button to add ID application', function() {
-      state = false;
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'id-card'
-        }
-      });
-      assert.equal(newState, true);
-    });
-
-    it('maintains state when has clicked button to add DL application', function() {
-      state = false;
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'driver-license'
-        }
-      });
-      assert.equal(newState, state);
-    });
-  });
 });
 
 
diff --git a/test/client/reducers/application/card-type-test.js b/test/client/reducers/application/card-type-test.js
index 288220e3..8cecde78 100644
--- a/test/client/reducers/application/card-type-test.js
+++ b/test/client/reducers/application/card-type-test.js
@@ -162,6 +162,19 @@ describe('cardTypeReducer', function() {
       assert.ok(newState.includes('ID'));
       assert.ok(newState.includes('DL'));
     });
+
+    it('returns existing state when payload name is addFromSummary and action.payload.value matches the current state', function() {
+      let action = {
+        type: 'UPDATE_CARD_TYPE',
+        payload: {
+          name: 'addFromSummary',
+          value: 'DL'
+        }
+      };
+      let newState = updateCardType(state, action);
+      assert.deepEqual(newState, state);
+    });
+
   });
 
   describe('#cardAction', function() {
@@ -207,29 +220,6 @@ describe('cardTypeReducer', function() {
     });
   });
 
-  describe('#addApp', function() {
-    it('changes state to ["DL"] if user clicks button to add a DL application', function() {
-      state = ['ID'];
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'driver-license'
-        }
-      });
-      assert.deepEqual(newState, ['DL']);
-    });
-
-    it('changes state to ["ID"] if user clicks button to add an ID application', function() {
-      state = ['DL'];
-      let newState = updateCardType(state, {
-        type: 'ADD_APP',
-        payload: {
-          value: 'id-card'
-        }
-      });
-      assert.deepEqual(newState, ['ID']);
-    });
-  });
 });
 
 
diff --git a/test/client/reducers/ui/add-app-test.js b/test/client/reducers/ui/add-app-test.js
deleted file mode 100644
index ab0c0271..00000000
--- a/test/client/reducers/ui/add-app-test.js
+++ /dev/null
@@ -1,25 +0,0 @@
-'use strict';
-
-import assert           from 'assert';
-import addAppReducer    from '../../../../client/reducers/ui/add-app';
-
-describe('addApp reducer', function() {
-  let state;
-  beforeEach(function() {
-    state = '';
-  });
-
-  it('does not update addApp for non ADD_APP actions', function() {
-    assert.deepEqual(addAppReducer(state, {type: 'WHATEVER'}), state);
-  });
-
-  it('on value "driver-license" updates state to value', function() {
-    let action = {
-      type: 'ADD_APP',
-      payload: {
-        value: 'driver-license'
-      }
-    };
-    assert.equal(addAppReducer(state, action), 'driver-license');
-  });
-});
diff --git a/test/client/reducers/ui/flow-test.js b/test/client/reducers/ui/flow-test.js
new file mode 100644
index 00000000..04797ddc
--- /dev/null
+++ b/test/client/reducers/ui/flow-test.js
@@ -0,0 +1,21 @@
+'use strict';
+
+import assert             from 'assert';
+import appTypeReducer     from '../../../../client/reducers/ui/app-type';
+
+describe('app type reducer', function() {
+  let state;
+  beforeEach(function() {
+    state = '';
+  });
+
+  it('on value "ID" updates state to value', function() {
+    let action = {
+      type: 'ADD_APP',
+      payload: {
+        value: 'ID'
+      }
+    };
+    assert.equal(appTypeReducer(state, action), 'ID');
+  });
+});
diff --git a/test/features/add-card.feature b/test/features/add-card.feature
index 46c60918..d416625d 100644
--- a/test/features/add-card.feature
+++ b/test/features/add-card.feature
@@ -5,33 +5,33 @@ So that my process is efficient and I have a better experience with government s
 
 Scenario: Choosing to add a new DL
   Given I have already filled out my ID application
-  When I visit the page to add a DL
+  When I click to add a DL
   Then I will see a WDYWTDT page with only the new DL option
   Then I will see that the validations work the same as the WDYWTDT page
   When I choose to add a new DL
   And I click "Next" to continue
-  Then I will be on the page to add license type
+  Then I will be on the add license type page
   Then I will see that the page looks the same as the normal license type page
   And I will see that the validations work the same as the normal license type page
   When I click to go back
-  Then I will be on the page to add a DL
+  Then I will see a WDYWTDT page with only the new DL option
   And I click "Next" to continue
   When I click on the car checkbox
   Then I click to not need endorsements
   And I click "Next" to continue
-  Then I will be on the page to add medical history
+  Then I will be taken to add medical history page
   Then I will see that the page looks like the current medical history page
   And I will see that the page validations behave the same as the current medical history page
   When I click to go back
-  Then I will be on the page to add license type
+  Then I will be on the add license type page
   And I click "Next" to continue
   When I select No to having reportable medical history
   And I click "Next" to continue
-  Then I will be on the page to add license history
+  Then I will be on the page to add existing license and id
   Then I will see a page that looks and acts like the existing DL license and ID history page
   When I select existing DL/ID Yes
   And I click "Next" to continue
-  Then I will be on the page to add license issues
+  Then I will be taken to the add license issues page
   When I select suspended license No
   And I click "Next" to continue
   Then I will be on the page with my summary
@@ -42,23 +42,23 @@ Scenario: Choosing to add a new DL
 
 Scenario: Adding a DL renewal
   Given I have already filled out my ID application
-  When I visit the page to add a DL
+  When I click to add a DL
   And I choose to renew a DL
   And I click "Next" to continue
-  Then I will be on the page to add current card info
+  Then I will be on the add current card info page
   When I click to go back
-  Then I will be on the page to add a DL
+  Then I will see a WDYWTDT page with only the new DL option
   And I click "Next" to continue
   When I enter my current card data
   And I click "Next" to continue
-  Then I will be on the page to add license type
+  Then I will be on the add license type page
   When I click on the car checkbox
   Then I click to not need endorsements
   And I click "Next" to continue
-  Then I will be on the page to add medical history
+  Then I will be taken to add medical history page
   When I select No to having reportable medical history
   And I click "Next" to continue
-  Then I will be on the page to add license issues
+  Then I will be taken to the add license issues page
   When I select suspended license No
   And I click "Next" to continue
   Then I will be on the page with my summary
@@ -68,24 +68,24 @@ Scenario: Adding a DL renewal
 
 Scenario: Adding a DL update/correct
   Given I have already filled out my ID application
-  When I visit the page to add a DL
+  When I click to add a DL
   And I choose to change a DL
   And I click "Next" to continue
-  Then I will be on the page to add current card info
+  Then I will be on the add current card info page
   When I enter my current card data
   And I click "Next" to continue
-  Then I will be on the page to add update/correct info
+  Then I will be on the page to add choosing to update or correct my card
   And I choose to update my DL
   And I check the box to update my name
   When I click "Next" to continue
-  Then I will be on the page to add license type
+  Then I will be on the add license type page
   When I click on the car checkbox
   Then I click to not need endorsements
   And I click "Next" to continue
-  Then I will be on the page to add medical history
+  Then I will be taken to add medical history page
   When I select No to having reportable medical history
   And I click "Next" to continue
-  Then I will be on the page to add license issues
+  Then I will be taken to the add license issues page
   When I select suspended license No
   And I click "Next" to continue
   Then I will be on the page with my summary
@@ -93,28 +93,32 @@ Scenario: Adding a DL update/correct
   Then I will see that I am updating my DL
 
 Scenario: Adding a DL replacement after replacing an ID
-  Given I have already filled out my ID application
-  When I visit the current card info page
+  Given I go to the new online DL application
+  When I go to the page with my summary
+  When I click to add an ID
+  And I choose to add a replacement ID
+  When I click "Next" to continue
   And I enter my current card data
-  When I visit the page to add a DL
+  When I go to the page with my summary
+  And I click to add a DL
   And I choose to replace an added DL
   And I click "Next" to continue
-  Then I will be on the page to add replacement details
+  Then I will be on the page to add choosing reason for replacement
   And I select the DL was damaged
   When I click "Next" to continue
-  Then I will be on the page to add license type
+  Then I will be on the add license type page
   When I go to the page with my summary
   Then I will not see a card history section
   And I will see that I am replacing my DL
 
 Scenario: Choosing to add a new ID
   Given I have already filled out my DL application
-  When I visit the page to add an ID
+  When I click to add an ID
   Then I will see a WDYWTDT page with the new ID option
   Then I will see that the validations work the same as the WDYWTDT page
   When I choose to add a new ID
   And I click "Next" to continue
-  Then I will be on the page to add reduced fee
+  And Then I will be on the add reduced fee page
   When I select No to getting a reduced fee
   And I click "Next" to continue
   Then I will be on the page with my summary
@@ -123,64 +127,66 @@ Scenario: Choosing to add a new ID
 
 Scenario: Choosing to add a renewal ID
   Given I have already filled out my DL application
-  When I visit the page to add an ID
+  When I click to add an ID
   Then I choose to add a renewal ID
   And I click "Next" to continue
-  Then I will be on the page to add current ID info
+  Then I will be on the add current card info page
   When I enter my current card data
   And I click "Next" to continue
-  Then I will be on the page to add reduced fee
+  Then I will be on the add reduced fee page
   When I go to the page with my summary
   Then I will see the info of the ID card saved
 
 Scenario: Adding a renewal ID after renewing a DL
-  Given I have already filled out my DL application
-  When I visit the current card info page
+  Given I go to the new online DL application
+  When I go to the page with my summary
+  When I click to add a DL
+  Then I choose to renew a DL
+  When I click "Next" to continue
   And I enter my current card data
-  When I visit the page to add an ID
+  When I go to the page with my summary
+  And I click to add an ID
   And I choose to add a renewal ID
   And I click "Next" to continue
-  Then I will be on the page to add reduced fee
+  Then I will be on the add reduced fee page
 
 Scenario: Choosing to add a correct/updated ID
   Given I have already filled out my DL application
-  When I visit the page to add an ID
+  When I click to add an ID
   Then I choose to add a change ID
   And I click "Next" to continue
-  Then I will be on the page to add current ID info
   When I enter my current card data
   And I click "Next" to continue
-  Then I will be on the page to add correct/update details
   Then I choose to update my ID
   And I check the box to update my name
   When I go to the page with my summary
   Then I will see that I am updating the name on my ID
   And I will see the info of the ID card saved
 
-Scenario: Choosing to add a replacement ID
-  Given I have already filled out my DL application
-  When I visit the page to add an ID
-  Then I choose to add a replacement ID
-  And I click "Next" to continue
-  Then I will be on the page to add current ID info
-  When I enter my current card data
-  And I click "Next" to continue
-  Then I will be on the page to add ID replacement details
-
-Scenario: Adding a replacement ID after replacing a DL
-  Given I have already filled out my DL application
-  When I visit the current card info page
+Scenario: Adding a replacement ID after replacing a DL skips current card data
+  Given I go to the new online DL application
+  When I go to the page with my summary
+  When I click to add a DL
+  And I choose to replace an added DL
+  When I click "Next" to continue
   And I enter my current card data
-  When I visit the page to add an ID
-  And I choose to add a replacement ID
   And I click "Next" to continue
-  Then I will be on the page to add ID replacement details
+  Then I will be on the page to add choosing reason for replacement
+  When I go to the page with my summary
+  And I click to add an ID
+  Then I choose to add a replacement ID
+  And I click "Next" to continue
+  Then I will be on the page to add choosing reason for replacement
 
-Scenario: Adding a correct/update ID after correcting/updating a DL
-  Given I have already filled out my DL application
-  When I visit the current card info page
+Scenario: Adding a correct/update ID after correcting/updating a DL skips current card data
+  Given I go to the new online DL application
+  When I go to the page with my summary
+  When I click to add a DL
+  And I choose to change a DL
+  When I click "Next" to continue
   And I enter my current card data
-  When I visit the page to add an ID
+  When I go to the page with my summary
+  And I click to add an ID
   And I choose to add a change ID
   And I click "Next" to continue
-  Then I will be on the page to add correct/update details
+  Then I will be on the page to add choosing to update or correct my card
diff --git a/test/features/cdl-app.feature b/test/features/cdl-app.feature
index 32d8bc7e..7295c186 100644
--- a/test/features/cdl-app.feature
+++ b/test/features/cdl-app.feature
@@ -10,7 +10,7 @@ Scenario: Navigating to the start of the CDL or ID/DL application after choosing
   Then I will be on the page to choose application
   When I select a commercial DL application
   And I click "Next" to continue
-  Then I will be on the CDL true name page
+  Then I will be on the CDL name page
   When I click to go back
   Then I will be on the page to choose application
   When I select a regular ID or DL application
@@ -108,12 +108,12 @@ Scenario: New CDL
   Then I will see that I am driving interstate
 
   When I click to edit my CDL name
-  Then I will be on the CDL name page
+  Then I will be on the CDL edit name page
   When I change my first name
   And I click "Next" to continue
   Then I will be on the CDL summary
   When I click to edit my CDL date of birth
-  Then I will be on the CDL dob page
+  Then I will be on the CDL edit dob page
   When I click "Next" to continue
   Then I will be on the CDL summary
 
diff --git a/test/features/edit-card.feature b/test/features/edit-card.feature
new file mode 100644
index 00000000..436fd413
--- /dev/null
+++ b/test/features/edit-card.feature
@@ -0,0 +1,124 @@
+Feature: Editing a card and needing additional info
+As a DMV customer who is editing WDYWTDT to correct/update
+I want to get the right remaining data points
+So that I have a complete and valid application
+
+  Scenario: Switching from new DL/ID to correct/update
+    Given I have already filled out my DL application
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a new card is already selected
+    When I choose to change a DL
+    And I click "Next" to continue
+    Then I will be on the edit current card info page
+    And I click "Next" to continue
+    Then I will be on the page to edit choosing to update or correct my card
+    When I choose to update my DL
+    And I check the box to update my name
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am updating my DL
+
+  Scenario: Switching from renew/replace to correct/update
+    Given I have already filled out an application to replace a DL
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a replacement card is already selected
+    When I choose to change a DL
+    And I click "Next" to continue
+    And I will be on the page to edit choosing to update or correct my card
+    When I choose to update my DL
+    And I check the box to update my name
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am updating my DL
+
+  Scenario: Switching from correct to update, or the opposite
+    Given I have already filled out an application to correct a DL
+    And I will be on the page with my summary
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to change a card is already selected
+    And I click "Next" to continue
+    And I will be on the page to edit choosing to update or correct my card
+    When I choose to update my DL
+    And I check the box to update my name
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am updating my DL
+
+  Scenario: Switching from new DL/ID to replace
+    Given I have already filled out my DL application
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a new card is already selected
+    When I choose to replace an added DL
+    And I click "Next" to continue
+    Then I will be on the edit current card info page
+    When I click "Next" to continue
+    Then I will be on the page to edit choosing reason for replacement
+    When I select the DL was damaged
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am replacing my DL
+
+  Scenario: Switching from renew/correct/update to replace
+    Given I have already filled out an application to replace a DL
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a replacement card is already selected
+    When I choose to replace an added DL
+    And I click "Next" to continue
+    And I will be on the page to edit choosing reason for replacement
+    When I select the DL was damaged
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am replacing my DL
+
+  Scenario: Affirming replacement, changing reason
+    Given I have already filled out an application to replace a DL
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a replacement card is already selected
+    When I click "Next" to continuet
+    And I will be on the page to edit choosing reason for replacement
+    When I select the DL was damaged
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am replacing my DL
+
+  Scenario: Switching from new DL/ID to renew
+    Given I have already filled out my DL application
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a new card is already selected
+    When I choose to renew a DL
+    And I click "Next" to continue
+    Then I will be on the edit current card info page
+    When I enter my current card data
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am renewing my DL
+
+  Scenario: Switching from correct/update/replace (or renew) to renew
+    Given I have already filled out an application to replace a DL
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    And I will see that my selection to get a replacement card is already selected
+    When I choose to renew a DL
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am renewing my DL
+
+  Scenario: Editing the WDYWTDT and selecting new
+    Given I have already filled out an application to replace a DL
+    When I click to edit my DL
+    Then I will see a WDYWTDT page with only the new DL option
+    When I choose to add a new DL
+    And I click "Next" to continue
+    Then I will be on the page to edit existing license and id
+    When I select existing DL/ID No
+    Then I click "Next" to continue
+    Then I will be on the page with my summary
+    And I will see that I am getting a new DL
+    And I will see No in my existing DL/ID selection
diff --git a/test/features/save-user-data.feature b/test/features/save-user-data.feature
index ca8a18a8..6acdcb32 100644
--- a/test/features/save-user-data.feature
+++ b/test/features/save-user-data.feature
@@ -3,171 +3,7 @@ Feature: Save user data
   I want to save my user data to my application from the summary screen
   So that my application can be used in the field office to enable my request
 
-  Scenario: applying for one new DL
-    Given I go to the new online DL application page
-    Then I visit the legal name page
-    And I enter my full name
-    When I click "Next" to continue
-    Then I will be on the page for entering my date of birth
-    And I enter my full date of birth into the form
-    When I click "Next" to continue
-    Then I will be on the what do you want to do today page
-    And I choose to get a new card
-    When I click "Next" to continue
-    Then I will be on the ID and DL selection page
-    Then I will see the application title says "DMV Card application"
-    And I will see the application header says "Card application"
-    And I click on the DL checkbox
-    Then I will see the application title says "DMV Drivers license application"
-    And I will see the application header says "Drivers license application"
-    When I click "Next" to continue
-    Then I will be on the page for choosing real id
-    And I click no to getting a real id
-    And I click "Next" to continue
-    Then I will be on the license type page
-    And I click on the car checkbox
-    And I click to not need endorsements
-    When I click "Next" to continue
-    Then I will be on the get started page
-    When I click "Next" to continue
-    Then I will be on the page for entering my address
-    Then I will see the page title has postfix " - My basics"
-    And I enter my home address
-    And I select address interstitial No
-    And I enter my mailing address
-    When I click "Next" to continue
-    Then I will be on the page for entering my physical traits
-    When I click to go back
-    Then I will see the home address I entered
-    And I change my home zip
-    When I click "Next" to continue
-    And I select my sex
-    And I select an eye color
-    And I select a hair color
-    When I click "Next" to continue
-    Then I will be on the page for entering my height and weight
-    And I enter my feet
-    And I enter my inches
-    And I enter my weight
-    When I click "Next" to continue
-    Then I will be on the page for entering my social security
-    And I select Yes for social security
-    And I enter my full social security number
-    When I click "Next" to continue
-    Then I will be taken to medical history page
-    Then I will see the page title has postfix " - My history"
-    And I select Yes to having reportable medical history
-    And I enter my medical conditions into the textarea
-    When I click "Next" to continue
-    Then I will be on the page to enter existing license and id
-    And I select existing DL/ID Yes
-    And I enter my existing DL/ID card number
-    And I enter the issuing state or country
-    And I enter the date of DL/ID expiration
-    When I click "Next" to continue
-    Then I will be taken to previous names page
-    And I select previously used names Yes
-    And I enter my previously used names
-    When I click "Next" to continue
-    Then I will be taken to the license issues page
-    And I select suspended license Yes
-    And I enter date of my license suspension
-    And I enter the reason for my license suspension
-    When I click "Next" to continue
-    Then Then I will be on the page for veteran related services
-    And I click Yes for veteran
-    And I click Yes to receiving additional information about benefits
-    And I click Yes about having my license labeled with Veteran
-    And I click "Next" to continue
-    Then I will be on the page for organ donation
-    Then I will see the page title has postfix " - Organ donation"
-    And I choose to donate my organs
-    And I choose to contribute
-    And I click "Next" to continue
-    Then I will be on the page for voter citizen status entry
-    And I will see the page title has postfix " - Voting registration"
-    And I select citizen Yes
-    When I click "Next" to continue
-    Then I will be on the eligibility page
-    And I select voter registration Yes
-    When I click "Next" to continue
-    Then I will be on the page for entering voter opt-out
-    And I select I am a new voter in California
-    When I click "Next" to continue
-    Then I will be taken to voter preferences info page
-    When I click "Next" to continue
-    Then I will be taken to the political party choose page
-    And I select choose party Yes
-    And I select a political party button
-    When I click "Next" to continue
-    Then I will be taken to ballot language page
-    And I select a language
-    When I click "Next" to continue
-    Then I will be on the page for ballot by mail
-    And I select ballot by mail Yes
-    When I click "Next" to continue
-    Then I will be taken to contact methods page
-    And I select contact methods Yes
-    And I enter my email
-    And I enter my phone number
-    When I click "Next" to continue
-    Then I will be taken to voter registration complete page
-    And I click "Next" to continue
-    Then I will be on the page with my summary
-    When I visit the required documents page
-    Then I will not see a section about RealID information
-    And I will see a section about medical information
-    Then I will see an additional bullet for medical information
-    Then I will see an additional bullet for proving my veterans status
-    And I will see a section letting me know what I need to do to prove my status
-    Then I will see proof of social security section
-    When I visit contact methods details page
-    Then I will see my email and phone number
-    And I go to the page with my summary
-    When I click to edit my name
-    Then I will be taken to the names page
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    When I click to edit my date of birth
-    Then I will be on the page for entering my date of birth
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    When I click to edit my address
-    Then I will be on the page for entering my address
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    When I click to edit my height and weight
-    Then I will be on the page for entering my height and weight
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    When I click to edit my physical traits
-    Then I will be on the page for entering my physical traits
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    When I click to edit my social security
-    Then I will be on the page for entering my social security
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    Then I click to edit my license and id history
-    Then I will be on the page to add license history
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    Then I click to edit my previous names
-    Then I will be taken to previous names page
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    Then I click to edit my medical history
-    Then I will be on the page to add medical history
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    Then I click to edit my license issues
-    Then I will be taken to the license issues page
-    When I click "Next" to continue
-    Then I will be on the page with my summary
-    Then I click to edit my veterans service
-    Then I will be on the page for veteran related services
-
-  Scenario: renewing one ID and no social
+Scenario: renewing one ID and no social
     Given I go to the new online DL application page
     When I visit the date of birth page
     And I enter my full date of birth into the form
@@ -207,7 +43,8 @@ Feature: Save user data
     And I decline to answer
     When I click "Next" to continue
     Then I will be on the page with my summary
-    When I visit the date of birth page
+    When I click to edit my date of birth
+    Then I will be taken to edit date of birth page
     Then I will see the date of birth that I entered
     When I change my year of birth
     And I go to the page with my summary
@@ -322,11 +159,11 @@ Feature: Save user data
     Then I will see that I declined to choose a political party
     Then I will see my social security on that summary
     When I click to edit my name
-    Then I will be taken to the names page
+    Then I will be taken to the edit names page
     When I click "Next" to continue
     Then I will be on the page with my summary
     When I click to edit my date of birth
-    Then I will be on the page for entering my date of birth
+    Then I will be taken to edit date of birth page
     When I click "Next" to continue
     Then I will be on the page with my summary
     When I click "Next" to continue
@@ -365,3 +202,167 @@ Feature: Save user data
     Then I go to the page with my summary
     When I click "Next" to continue
     Then I will be on the page for appointment preparation
+
+  Scenario: applying for one new DL
+    Given I go to the new online DL application page
+    Then I visit the legal name page
+    And I enter my full name
+    When I click "Next" to continue
+    Then I will be on the page for entering my date of birth
+    And I enter my full date of birth into the form
+    When I click "Next" to continue
+    Then I will be on the what do you want to do today page
+    And I choose to get a new card
+    When I click "Next" to continue
+    Then I will be on the ID and DL selection page
+    Then I will see the application title says "DMV Card application"
+    And I will see the application header says "Card application"
+    And I click on the DL checkbox
+    Then I will see the application title says "DMV Drivers license application"
+    And I will see the application header says "Drivers license application"
+    When I click "Next" to continue
+    Then I will be on the page for choosing real id
+    And I click no to getting a real id
+    And I click "Next" to continue
+    Then I will be on the license type page
+    And I click on the car checkbox
+    And I click to not need endorsements
+    When I click "Next" to continue
+    Then I will be on the get started page
+    When I click "Next" to continue
+    Then I will be on the page for entering my address
+    Then I will see the page title has postfix " - My basics"
+    And I enter my home address
+    And I select address interstitial No
+    And I enter my mailing address
+    When I click "Next" to continue
+    Then I will be on the page for entering my physical traits
+    When I click to go back
+    Then I will see the home address I entered
+    And I change my home zip
+    When I click "Next" to continue
+    And I select my sex
+    And I select an eye color
+    And I select a hair color
+    When I click "Next" to continue
+    Then I will be on the page for entering my height and weight
+    And I enter my feet
+    And I enter my inches
+    And I enter my weight
+    When I click "Next" to continue
+    Then I will be on the page for entering my social security
+    And I select Yes for social security
+    And I enter my full social security number
+    When I click "Next" to continue
+    Then I will be taken to medical history page
+    Then I will see the page title has postfix " - My history"
+    And I select Yes to having reportable medical history
+    And I enter my medical conditions into the textarea
+    When I click "Next" to continue
+    Then I will be on the page to enter existing license and id
+    And I select existing DL/ID Yes
+    And I enter my existing DL/ID card number
+    And I enter the issuing state or country
+    And I enter the date of DL/ID expiration
+    When I click "Next" to continue
+    Then I will be taken to previous names page
+    And I select previously used names Yes
+    And I enter my previously used names
+    When I click "Next" to continue
+    Then I will be taken to the license issues page
+    And I select suspended license Yes
+    And I enter date of my license suspension
+    And I enter the reason for my license suspension
+    When I click "Next" to continue
+    Then Then I will be on the page for veteran related services
+    And I click Yes for veteran
+    And I click Yes to receiving additional information about benefits
+    And I click Yes about having my license labeled with Veteran
+    And I click "Next" to continue
+    Then I will be on the page for organ donation
+    Then I will see the page title has postfix " - Organ donation"
+    And I choose to donate my organs
+    And I choose to contribute
+    And I click "Next" to continue
+    Then I will be on the page for voter citizen status entry
+    And I will see the page title has postfix " - Voting registration"
+    And I select citizen Yes
+    When I click "Next" to continue
+    Then I will be on the eligibility page
+    And I select voter registration Yes
+    When I click "Next" to continue
+    Then I will be on the page for entering voter opt-out
+    And I select I am a new voter in California
+    When I click "Next" to continue
+    Then I will be taken to voter preferences info page
+    When I click "Next" to continue
+    Then I will be taken to the political party choose page
+    And I select choose party Yes
+    And I select a political party button
+    When I click "Next" to continue
+    Then I will be taken to ballot language page
+    And I select a language
+    When I click "Next" to continue
+    Then I will be on the page for ballot by mail
+    And I select ballot by mail Yes
+    When I click "Next" to continue
+    Then I will be taken to contact methods page
+    And I select contact methods Yes
+    And I enter my email
+    And I enter my phone number
+    When I click "Next" to continue
+    Then I will be taken to voter registration complete page
+    And I click "Next" to continue
+    Then I will be on the page with my summary
+    When I visit the required documents page
+    Then I will not see a section about RealID information
+    And I will see a section about medical information
+    Then I will see an additional bullet for medical information
+    Then I will see an additional bullet for proving my veterans status
+    And I will see a section letting me know what I need to do to prove my status
+    Then I will see proof of social security section
+    When I visit contact methods details page
+    Then I will see my email and phone number
+    And I go to the page with my summary
+    When I click to edit my name
+    Then I will be taken to the edit names page
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    When I click to edit my date of birth
+    Then I will be taken to edit date of birth page
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    When I click to edit my address
+    Then I will be on the page for editing my address
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    When I click to edit my height and weight
+    Then I will be on the page for editing my height and weight
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    When I click to edit my physical traits
+    Then I will be on the page for editing my physical traits
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    When I click to edit my social security
+    Then I will be on the page for editing my social security
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    Then I click to edit my license and id history
+    Then I will be on the page to edit existing license and id
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    Then I click to edit my previous names
+    Then I will be taken to edit previous names page
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    Then I click to edit my medical history
+    Then I will be taken to edit medical history page
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    Then I click to edit my license issues
+    Then I will be taken to the edit license issues page
+    When I click "Next" to continue
+    Then I will be on the page with my summary
+    Then I click to edit my veterans service
+    Then I will be on the page for editing veteran related services
diff --git a/test/features/senior-id.feature b/test/features/senior-id.feature
index e0e40996..85b4b24c 100644
--- a/test/features/senior-id.feature
+++ b/test/features/senior-id.feature
@@ -99,10 +99,11 @@ Feature: Customers can get a senior ID for free
     When I click "Next" to continue
     When I visit the ID or DL selection page
     And I choose to replace a DL
-    When I visit the page to add an ID
+    When I go to the page with my summary
+    And I click to add an ID
     When I choose to add a new ID
     And I click "Next" to continue
-    Then I will be on the page to add senior id
+    Then I will be on the add senior id page
     When I select yes to get a senior id
     And I click "Next" to continue
     Then I will be on the page with my summary
@@ -112,16 +113,17 @@ Feature: Customers can get a senior ID for free
     Given I go to the new online DL application
     When I visit the date of birth page
     And I indicate that I am turning 62 today
-    When I visit the page to add an ID
+    When I go to the page with my summary
+    And I click to add an ID
     And I choose to add a replacement ID
     And I click "Next" to continue
-    Then I will be on the page to add current ID info
+    Then I will be on the add current card info page
     When I enter my current card data
     And I click "Next" to continue
-    Then I will be on the page to add ID replacement details
+    Then I will be on the page to add choosing reason for replacement
     When I select the ID was damaged
     And I click "Next" to continue
-    Then I will be on the page to add senior id
+    Then I will be on the add senior id page
     When I select yes to get a senior id
     And I click "Next" to continue
     Then I will be on the page with my summary
diff --git a/test/features/step_definitions/add-card-steps.js b/test/features/step_definitions/add-card-steps.js
index f3480848..882fc54b 100644
--- a/test/features/step_definitions/add-card-steps.js
+++ b/test/features/step_definitions/add-card-steps.js
@@ -17,96 +17,29 @@ module.exports = function(world) {
       .catch(done);
   };
 
-  world.given('I have already filled out my ID application', function(done) {
-    browser
-      .on('consoleMessage', function( msg ){
-        console.log('log', msg);
-      })
-      .on('error', function( err ){
-        console.log('error', err);
-      })
-      .open(world.url('/'))
-      .waitForSelector('.choose-application-form')
-      .then(() => { done(); })
-      .catch(done);
-  });
 
-  world.given('I have already filled out my DL application', function(done) {
-    browser
-      .on('consoleMessage', function( msg ){
-        console.log('log', msg);
-      })
-      .on('error', function( err ){
-        console.log('error', err);
-      })
-      .open(world.url('/'))
-      .waitForSelector('.choose-application-form')
-      .then(done)
-      .catch(done);
-  });
-
-  world.when('I choose to add a new DL', function(done) {
-    browser
-      .click('label[for=DLAction-new]')
-      .then(() => { done(); })
-      .catch(done);
-  });
 
-  world.when('I choose to renew a DL', function(done) {
+  world.when('I click to add an ID', function(done) {
     browser
-      .click('label[for=DLAction-renew]')
+      .click('.wdywtdt.ID')
       .then(done)
       .catch(done);
   });
 
-  world.when('I choose to add a new ID', function(done) {
-    browser
-      .click('label[for=IDAction-new]')
-      .then(() => { done(); })
-      .catch(done);
-  });
-
-  world.when('I choose to change a DL', function(done) {
+  world.when('I click to add a DL', function(done) {
     browser
-      .click('label[for=DLAction-change]')
+      .click('.wdywtdt.DL')
       .then(done)
       .catch(done);
   });
 
-  world.when('I choose to replace an added DL', function(done) {
-    browser
-      .click('label[for=DLAction-replace]')
-      .then(done)
-      .catch(done);
-  });
-
-  world.when('I choose to add a change ID', function(done) {
-    browser
-      .click('label[for=IDAction-change]')
-      .then(() => { done(); })
-      .catch(done);
-  });
-
-  world.when('I choose to add a renewal ID', function(done) {
-    browser
-      .click('label[for=IDAction-renew]')
-      .then(() => { done(); })
-      .catch(done);
-  });
-
-  world.when('I choose to add a replacement ID', function(done) {
-    browser
-      .click('label[for=IDAction-replace]')
-      .then(() => { done(); })
-      .catch(done);
-  });
-
   world.then('I will see a WDYWTDT page with only the new DL option', function(done) {
     browser
+      .waitForSelector('.choose-card-action')
       .text()
       .then((text) => {
         assert.ok(text.includes('Get a driver license for the first time'), 'DL text not on page');
-        assert.ok(!text.includes('Get a card for the first time'), 'generic wdywtd today language on page');
+        assert.ok(!text.includes('Get a card for the first time'), 'generic wdywtdt today language on page');
       })
       .then(done)
       .catch(done);
@@ -114,6 +47,7 @@ module.exports = function(world) {
 
   world.then('I will see a WDYWTDT page with the new ID option', function(done) {
     browser
+      .waitForSelector('.choose-card-action')
       .text()
       .then((text) => {
         assert.ok(text.includes('Get an ID card for the first time'), 'ID-specific text not on page');
diff --git a/test/features/step_definitions/choose-card-type.js b/test/features/step_definitions/choose-card-type.js
index 386515e6..4991ec08 100644
--- a/test/features/step_definitions/choose-card-type.js
+++ b/test/features/step_definitions/choose-card-type.js
@@ -12,6 +12,13 @@ module.exports = function(world) {
       .catch(done);
   });
 
+  world.and('I click to edit my DL', function(done) {
+    browser
+      .click('.wdywtdt.DL')
+      .then(done)
+      .catch(done);
+  });
+
   world.and('I choose to renew a card', function(done) {
     browser
       .click('label[for="cardAction-renew"]')
@@ -74,7 +81,61 @@ module.exports = function(world) {
       .then(() => {done(); })
       .catch(done);
   });
+  world.when('I choose to add a new DL', function(done) {
+    browser
+      .click('label[for=DLAction-new]')
+      .then(() => { done(); })
+      .catch(done);
+  });
+
+  world.when('I choose to renew a DL', function(done) {
+    browser
+      .click('label[for=DLAction-renew]')
+      .then(done)
+      .catch(done);
+  });
+
+  world.when('I choose to add a new ID', function(done) {
+    browser
+      .click('label[for=IDAction-new]')
+      .then(() => { done(); })
+      .catch(done);
+  });
+
+  world.when('I choose to replace an added DL', function(done) {
+    browser
+      .click('label[for=DLAction-replace]')
+      .then(done)
+      .catch(done);
+  });
+
+  world.when('I choose to add a change ID', function(done) {
+    browser
+      .click('label[for=IDAction-change]')
+      .then(() => { done(); })
+      .catch(done);
+  });
+
+  world.when('I choose to add a renewal ID', function(done) {
+    browser
+      .click('label[for=IDAction-renew]')
+      .then(() => { done(); })
+      .catch(done);
+  });
+
+  world.when('I choose to add a replacement ID', function(done) {
+    browser
+      .click('label[for=IDAction-replace]')
+      .then(() => { done(); })
+      .catch(done);
+  });
 
+  world.when('I choose to change a DL', function(done) {
+    browser
+      .click('label[for="DLAction-change"]')
+      .then(() => {done(); })
+      .catch(done);
+  });
   world.and('I choose to update my DL', function(done) {
     browser
       .click('label[for="DL-correctOrUpdate-update"]')
@@ -143,6 +204,28 @@ module.exports = function(world) {
       .catch(done);
   });
 
+  world.then('I will see that I am renewing my DL', function(done) {
+    browser
+      .text()
+      .then( text => {
+        assert(text.includes('My Driver License'), 'my driver license section not shown in summary');
+        assert(text.includes('Renewing'), 'renewing not shown in summary');
+      })
+      .then(done)
+      .catch(done);
+  });
+
+  world.then('I will see that I am getting a new DL', function(done) {
+    browser
+      .text()
+      .then( text => {
+        assert(text.includes('My Driver License'), 'my driver license section not shown in summary');
+        assert(text.includes('Applying for the first time'), 'card action not shown in summary');
+      })
+      .then(done)
+      .catch(done);
+  });
+
   world.then('I will see that I am replacing my ID', function(done) {
     browser
       .text()
@@ -289,4 +372,25 @@ module.exports = function(world) {
       .then(() => { done(); })
       .catch(done);
   });
+
+  world.then('I will see that my selection to get a new card is already selected', function(done) {
+    browser
+      .waitForSelector('.selected label[for="DLAction-new"]')
+      .then(done)
+      .catch(done);
+  });
+
+  world.then('I will see that my selection to get a replacement card is already selected', function(done) {
+    browser
+      .waitForSelector('.selected label[for="DLAction-replace"]')
+      .then(done)
+      .catch(done);
+  });
+
+  world.then('I will see that my selection to change a card is already selected', function(done) {
+    browser
+      .waitForSelector('.selected label[for="DLAction-change"]')
+      .then(done)
+      .catch(done);
+  });
 };
diff --git a/test/features/step_definitions/dlid-history-steps.js b/test/features/step_definitions/dlid-history-steps.js
index 9540438f..85e4cc6e 100644
--- a/test/features/step_definitions/dlid-history-steps.js
+++ b/test/features/step_definitions/dlid-history-steps.js
@@ -133,7 +133,7 @@ module.exports = function (world) {
 
   world.when('I click to edit my license and id history', function(done) {
     browser
-      .click('.addLicenseHistory.button.summary')
+      .click('.cardHistory.button.summary')
       .then(done)
       .catch(done);
   });
diff --git a/test/features/step_definitions/enter-medical-history-steps.js b/test/features/step_definitions/enter-medical-history-steps.js
index caa2e010..eb7e0557 100644
--- a/test/features/step_definitions/enter-medical-history-steps.js
+++ b/test/features/step_definitions/enter-medical-history-steps.js
@@ -40,7 +40,7 @@ module.exports = function(world) {
     browser
       .text()
       .then((text) => {
-        assert.ok(text.includes('Medical conditions:None'), 'Medical conditions not saved in summary');
+        assert.ok(text.includes('Medical conditionsNone'), 'Medical conditions not saved in summary');
       })
       .then(() => { done(); })
       .catch(done);
@@ -58,7 +58,7 @@ module.exports = function(world) {
 
   world.when('I click to edit my medical history', function(done) {
     browser
-      .click('.addMedicalHistory.button.summary')
+      .click('.medicalHistory.button.summary')
       .then(done)
       .catch(done);
   });
diff --git a/test/features/step_definitions/enter-physical-traits-steps.js b/test/features/step_definitions/enter-physical-traits-steps.js
index 1af5fcc1..c75b5d7f 100644
--- a/test/features/step_definitions/enter-physical-traits-steps.js
+++ b/test/features/step_definitions/enter-physical-traits-steps.js
@@ -55,7 +55,7 @@ module.exports = function (world) {
       .then(() => { done(); })
       .catch(done);
   });
-  
+
   world.then('I will see labels for sex, eye color and hair color', function(done){
     browser
     .text()
diff --git a/test/features/step_definitions/given-steps.js b/test/features/step_definitions/given-steps.js
new file mode 100644
index 00000000..2c211a15
--- /dev/null
+++ b/test/features/step_definitions/given-steps.js
@@ -0,0 +1,118 @@
+'use strict';
+
+const assert = require('assert');
+
+module.exports = function(world) {
+  let browser = world.browser;
+  world.given('I go to the new online DL application', function(done) {
+    browser
+      .on('consoleMessage', function( msg ){
+        console.log('log', msg);
+      })
+      .on('error', function( err ){
+        console.log('error', err);
+      })
+      .open(world.url('/'))
+      .waitForSelector('.choose-application-form')
+      .then(() => { done(); })
+      .catch(done);
+  });
+
+  world.given('I have already filled out my ID application', function(done) {
+    browser
+      .on('consoleMessage', function( msg ){
+        console.log('log', msg);
+      })
+      .on('error', function( err ){
+        console.log('error', err);
+      })
+      .open(world.url('/'))
+      .evaluate(function() {
+        window.__reactHistory.push(('/apply/id-and-license/what-do-you-want-to-do-today'));
+      })
+      .click('label[for="cardAction-new"]')
+      .click('.forward')
+      .click('label[for="ID"]')
+      .evaluate(function() {
+        window.__reactHistory.push('/apply/id-and-license/summary')
+      })
+      .then(() => { done(); })
+      .catch(done);
+  });
+
+  world.given('I have already filled out my DL application', function(done) {
+    browser
+      .on('consoleMessage', function( msg ){
+        console.log('log', msg);
+      })
+      .on('error', function( err ){
+        console.log('error', err);
+      })
+      .open(world.url('/'))
+      .evaluate(function() {
+        window.__reactHistory.push(('/apply/id-and-license/what-do-you-want-to-do-today'));
+      })
+      .click('label[for="cardAction-new"]')
+      .click('.forward')
+      .click('label[for="DL"]')
+      .evaluate(function() {
+        window.__reactHistory.push('/apply/id-and-license/summary')
+      })
+      .then(done)
+      .catch(done);
+  });
+
+  world.given('I have already filled out an application to replace a DL', function(done) {
+    browser
+      .on('consoleMessage', function( msg ){
+        console.log('log', msg);
+      })
+      .on('error', function( err ){
+        console.log('error', err);
+      })
+      .open(world.url('/'))
+      .evaluate(function() {
+        window.__reactHistory.push(('/apply/id-and-license/what-do-you-want-to-do-today'));
+      })
+      .click('label[for="cardAction-replace"]')
+      .click('.forward')
+      .click('label[for="replace-DL"]')
+      .click('.forward')
+      .type(
+        '#number', '1111zae'
+      )
+      .evaluate(function() {
+        window.__reactHistory.push('/apply/id-and-license/summary')
+      })
+      .then(done)
+      .catch(done);
+  });
+
+  world.given('I have already filled out an application to correct a DL', function(done) {
+    browser
+      .on('consoleMessage', function( msg ){
+        console.log('log', msg);
+      })
+      .on('error', function( err ){
+        console.log('error', err);
+      })
+      .open(world.url('/'))
+      .evaluate(function() {
+        window.__reactHistory.push(('/apply/id-and-license/what-do-you-want-to-do-today'));
+      })
+      .click('label[for="cardAction-change"]')
+      .click('.forward')
+      .click('label[for="change-DL"]')
+      .click('.forward')
+      .type(
+        '#number', '1111zae'
+      )
+      .click('.forward')
+      .click('label[for="DL-correctOrUpdate-correct"]')
+      .evaluate(function() {
+        window.__reactHistory.push('/apply/id-and-license/summary')
+      })
+      .then(done)
+      .catch(done);
+  });
+};
\ No newline at end of file
diff --git a/test/features/step_definitions/license-issues-steps.js b/test/features/step_definitions/license-issues-steps.js
index 73baa756..87a0de35 100644
--- a/test/features/step_definitions/license-issues-steps.js
+++ b/test/features/step_definitions/license-issues-steps.js
@@ -75,7 +75,7 @@ module.exports = function(world) {
     browser
       .text()
       .then((text) => {
-        assert(text.includes('Driving record:None'), 'is license suspended value missing');
+        assert(text.includes('Driving recordNone'), 'is license suspended value missing');
       })
       .then(() => { done(); })
       .catch(done);
diff --git a/test/features/step_definitions/navigation-steps.js b/test/features/step_definitions/navigation-steps.js
index a8a159d6..d69eca6f 100644
--- a/test/features/step_definitions/navigation-steps.js
+++ b/test/features/step_definitions/navigation-steps.js
@@ -2,6 +2,7 @@
 
 const assert = require('assert');
 
+
 module.exports = function(world) {
   let browser = world.browser;
 
@@ -22,82 +23,15 @@ module.exports = function(world) {
       .then((url) => {
         assert.ok(url.match(pageRegex), `Not on page with selector: ${pageSelector}`);
       })
-      .then(done)
-      .catch(done);
-  }
-
-  world.given('I go to the new online DL application', function(done) {
-    browser
-      .on('consoleMessage', function( msg ){
-        console.log('log', msg);
-      })
-      .on('error', function( err ){
-        console.log('error', err);
-      })
-      .open(world.url('/'))
-      .waitForSelector('.choose-application-form')
       .then(() => { done(); })
       .catch(done);
-  });
-
-  world.when('I go to the page with my summary', function(done){
-    navigateToPath('/apply/id-and-license/summary', '.summary', done);
-  });
-
-  world.when('I go to the CDL summary', function(done){
-    navigateToPath('/apply/cdl/summary', '.summary', done);
-  });
-
-  world.when('I visit the CDL name page', function(done) {
-    navigateToPath('/apply/cdl/true-name', '.legal-name-form', done);
-  });
-
-  world.when('I visit the CDL dob page', function(done) {
-    navigateToPath('/apply/cdl/date-of-birth', '.date-of-birth-form', done);
-  });
-
-  world.when('I visit the CDL WDYWTDT page', function(done) {
-    navigateToPath('/apply/cdl/what-do-you-want-to-do-today', '.choose-card-action', done);
-  });
-
-  world.when('I visit the CDL page to enter my current DL', function(done) {
-    navigateToPath('/apply/cdl/current-ca-license/', '.cdl-current-dl-yes-no', done);
-  });
-
-  world.when('I visit the endorsements page', function(done) {
-    navigateToPath('/apply/cdl/endorsements/', '.cdl-endorsements-form', done);
-  });
-
-  world.when('I go to the page to specify my changes to my CDL', function(done) {
-    navigateToPath('/apply/cdl/change-details', '.choose-card-change', done);
-  });
-
-  world.when('I go to the page to specify my changes to my CDL', function(done) {
-    navigateToPath('/apply/cdl/change-details', '.choose-card-change', done);
-  });
+  };
 
-  world.when('I visit the CDL motorcycle license page', function(done) {
-    navigateToPath('/apply/cdl/motorcycle', '.cdl-class-m', done);
-  });
-
-  world.when('I visit the CDL class page', function(done) {
-    navigateToPath('/apply/cdl/license-class', '.cdl-class-form', done);
-  });
-
-  world.when('I visit the self cert page for CDL', function(done) {
-    navigateToPath('/apply/cdl/self-certification', '.cdl-self-certification', done);
-  });
-
-  world.when('I visit the CDL name history page', function(done) {
-    navigateToPath('/apply/cdl/my-history/names', '.names-history-form', done);
-  });
 
-  world.when('I visit the CDL Social Security page', function(done) {
-    navigateToPath('/apply/cdl/social-security', '.social-security-form', done);
-  });
 
-  world.and('I return to the home page', function(done) {
-    navigateToPath('/apply/id-and-license/links', '.section-links', done);
+  /* IDDL NavigateToPath */
+  world.when('I go to the page with my summary', function(done){
+    navigateToPath('/apply/id-and-license/summary', '.summary', done);
   });
 
   world.when('I visit the page to choose application language', function(done) {
@@ -164,388 +98,435 @@ module.exports = function(world) {
     navigateToPath('/apply/id-and-license/my-basics/social-security', '.social-security-option-form', done);
   });
 
+
   world.when('I visit the veteran services page', function(done){
     navigateToPath('/apply/id-and-license/my-history/veterans-service', '.veterans-questionnaire-form', done);
   });
-
-  world.when('I visit voter citizen status page', function(done) {
-    navigateToPath('/apply/id-and-license/voting-registration/citizenship', '.citizen-status-form', done);
+  world.when('I visit the license issues page', function(done){
+    navigateToPath('/apply/id-and-license/my-history/license-issues', '.license-issues-form', done);
   });
-
-  world.when('I visit ballot by mail option page', function(done) {
-    navigateToPath('/apply/id-and-license/voting-registration/vote-by-mail', '.ballot-by-mail-form', done);
+  world.when('I visit the page to choose if I ever had previous names', function(done) {
+    navigateToPath('/apply/id-and-license/my-history/names', '.previous-names-form', done);
   });
-
-  world.when('I visit the voter eligibility requirements page', function(done) {
-    navigateToPath('/apply/id-and-license/voting-registration/eligibility', '.eligibility-requirements-form', done);
+  world.when('I visit the medical history page', function(done) {
+    navigateToPath('/apply/id-and-license/my-history/medical', '.medical-history-form', done);
   });
-
-  world.when('I visit voter preferences intro page', function(done){
-    navigateToPath('/apply/id-and-license/voting-registration/preferences', '.voter-preferences-intro', done);
+  world.when('I visit the page to enter existing license and id', function(done) {
+    navigateToPath('/apply/id-and-license/my-history/license-and-id', '.license-and-id-history-form', done);
   });
 
-  world.when('I visit updated voter preferences intro page', function(done){
-    navigateToPath('/apply/id-and-license/voting-registration/updated-preferences', '.updating-voter-preferences', done);
+  world.when('I will be on the CDL other state licenses page', function(done) {
+    assertOnPage('.other-state-licenses-form', /apply\/cdl\/my-history\/other-state-licenses/, done);
   });
 
-  world.when('I visit voter registration complete page', function(done){
-    navigateToPath('/apply/id-and-license/voting-registration/confirmation', '.voter-reg-complete', done);
+  world.when('I visit contact methods details page', function(done){
+    navigateToPath('/apply/id-and-license/voting-registration/contact-methods', '.contact-methods-choice-form', done);
+  });
+  world.when('I visit voter opt out page', function(done) {
+    navigateToPath('/apply/id-and-license/voting-registration/opt-out', '.opt-out-form', done);
   });
-
   world.when('I visit ballot language page', function(done) {
     navigateToPath('/apply/id-and-license/voting-registration/language', '.ballot-language-form', done);
   });
-
   world.when('I visit the political party choose page', function(done) {
     navigateToPath('/apply/id-and-license/voting-registration/choose-party', '.choose-party-form', done);
   });
-
-  world.and('I visit appointment preparation page', function(done) {
-    navigateToPath('/apply/id-and-license/appointment-preparation', '.appointment-preparation', done);
+  world.when('I visit the voter eligibility requirements page', function(done) {
+    navigateToPath('/apply/id-and-license/voting-registration/eligibility', '.eligibility-requirements-form', done);
   });
-
-  world.when('I visit voter opt out page', function(done) {
-    navigateToPath('/apply/id-and-license/voting-registration/opt-out', '.opt-out-form', done);
+  world.when('I visit voter preferences intro page', function(done){
+    navigateToPath('/apply/id-and-license/voting-registration/preferences', '.voter-preferences-intro', done);
   });
-
-  world.when('I visit the license issues page', function(done){
-    navigateToPath('/apply/id-and-license/my-history/license-issues', '.license-issues-form', done);
+  world.when('I visit voter citizen status page', function(done) {
+    navigateToPath('/apply/id-and-license/voting-registration/citizenship', '.citizen-status-form', done);
   });
 
-  world.when('I visit the page to choose if I ever had previous names', function(done) {
-    navigateToPath('/apply/id-and-license/my-history/names', '.previous-names-form', done);
+  world.when('I visit ballot by mail option page', function(done) {
+    navigateToPath('/apply/id-and-license/voting-registration/vote-by-mail', '.ballot-by-mail-form', done);
   });
 
-  world.when('I visit the page to enter existing license and id', function(done) {
-    navigateToPath('/apply/id-and-license/my-history/license-and-id', '.license-and-id-history-form', done);
+  world.when('I visit updated voter preferences intro page', function(done){
+    navigateToPath('/apply/id-and-license/voting-registration/updated-preferences', '.updating-voter-preferences', done);
   });
 
-  world.when('I visit contact methods details page', function(done){
-    navigateToPath('/apply/id-and-license/voting-registration/contact-methods', '.contact-methods-choice-form', done);
+  world.when('I visit voter registration complete page', function(done){
+    navigateToPath('/apply/id-and-license/voting-registration/confirmation', '.voter-reg-complete', done);
   });
 
+
+  world.and('I visit appointment preparation page', function(done) {
+    navigateToPath('/apply/id-and-license/appointment-preparation', '.appointment-preparation', done);
+  });
   world.when('I visit the required documents page', function(done){
     navigateToPath('/apply/id-and-license/appointment-preparation/documents', '.required-documents', done);
   });
 
-  world.when('I visit the medical history page', function(done) {
-    navigateToPath('/apply/id-and-license/my-history/medical', '.medical-history-form', done);
+  /* IDDL assertOnPage */
+  world.when('I will be on the IDDL welcome page', function(done) {
+    assertOnPage('.welcome-page', /apply\/id-and-license\/welcome/, done);
   });
 
-  world.when('I visit the page to add a DL', function(done){
-    navigateToPath('/add/driver-license', '.choose-card-action', done);
-  });
-  world.when('I visit the page to add an ID', function(done){
-    navigateToPath('/add/id-card', '.choose-card-action', done);
+  world.then('I will be taken to date of birth page', function(done) {
+    assertOnPage('.date-of-birth-form', /id-and-license\/my-basics\/date-of-birth/, done);
   });
-  world.when('I visit the page to add license type', function(done) {
-    navigateToPath('/add/driver-license/type', 'license-type-form', done);
+  world.then('I will be taken to edit date of birth page', function(done) {
+    assertOnPage('.date-of-birth-form', /id-and-license\/edit\/my-basics\/date-of-birth/, done);
   });
-
-  world.when('I visit the CDL page for entering my physical traits', function(done) {
-    navigateToPath('/apply/cdl/physical-traits', '.physical-traits-form', done);
+  world.then('I will be on the page for entering my legal name', function(done) {
+    assertOnPage('.legal-name-form', /apply\/id-and-license\/my-basics\/legal-name/, done);
   });
-
-  world.when('I visit the CDL page for Organ Donation', function(done) {
-    navigateToPath('/apply/cdl/organ-donation', '.donate-organ-form', done);
+  world.then('I will be taken to the names page', function(done) {
+    assertOnPage('.legal-name-form', /id-and-license\/my-basics\/legal-name/, done);
   });
-
-  world.when('I will be on the page to choose application', function(done) {
-    assertOnPage('.choose-application-form', /apply\/choose-application/, done);
+  world.then('I will be taken to the edit names page', function(done) {
+    assertOnPage('.legal-name-form', /id-and-license\/edit\/my-basics\/legal-name/, done);
   });
-
-  world.when('I will be on the CDL true name page', function(done) {
-    assertOnPage('.legal-name-form', /apply\/cdl\/true-name/, done);
+  world.then('I will be on the page for entering my date of birth', function(done) {
+    assertOnPage('.date-of-birth-form', /apply\/id-and-license\/my-basics\/date-of-birth/, done);
   });
 
-  world.when('I will be on the CDL license issues page', function(done) {
-    assertOnPage('.license-issues-form', /apply\/cdl\/my-history\/issues/, done);
-  });
 
-  world.when('I will be on the id.me page', function(done) {
-    assertOnPage('.id-me', /apply\/sign-in/, done);
+  world.then('I will be on the what do you want to do today page', function(done) {
+    assertOnPage('.choose-card-action', /apply\/id-and-license\/what-do-you-want-to-do-today/, done);
   });
 
-  world.when('I will be on the CDL other state licenses page', function(done) {
-    assertOnPage('.other-state-licenses-form', /apply\/cdl\/my-history\/other-state-licenses/, done);
+  world.then('I will be on the current card info page', function(done) {
+    assertOnPage('.current-card-form', /apply\/id-and-license\/current-card-information/, done);
   });
-
-
-  world.when('I will be on the CDL name page', function(done) {
-    assertOnPage('.legal-name-form', /apply\/cdl\/true-name/, done);
+  world.then('I will be on the add current card info page', function(done) {
+    assertOnPage('.current-card-form', /apply\/id-and-license\/add\/current-card-information/, done);
   });
-  world.when('I will be on the CDL dob page', function(done) {
-    assertOnPage('.date-of-birth-form', /apply\/cdl\/date-of-birth/, done);
+  world.then('I will be on the edit current card info page', function(done) {
+    assertOnPage('.current-card-form', /apply\/id-and-license\/edit\/current-card-information/, done);
   });
-
-  world.when('I will be on the CDL WDYWTDT page', function(done) {
-    assertOnPage('.choose-card-action', /apply\/cdl\/what-do-you-want-to-do-today/, done);
+  world.then('I will be on the ID and DL selection page', function(done) {
+    assertOnPage('.choose-card-form', /apply\/id-and-license\/select-id-dl/, done);
   });
-
-  world.when('I will be on the current CDL page', function(done) {
-    assertOnPage('.enter-current-card-info', /apply\/cdl\/current-card-information/, done);
+  world.then('I will be on the page for choosing to update or correct my card', function(done) {
+    assertOnPage('.choose-card-change', /apply\/id-and-license\/updates-and-corrections/, done);
   });
-
-  world.when('I will be on the CDL page to enter my current DL', function(done) {
-    assertOnPage('.current-card-form', /apply\/cdl\/current-ca-license/, done);
+  world.then('I will be on the page to add choosing to update or correct my card', function(done) {
+    assertOnPage('.choose-card-change', /apply\/id-and-license\/add\/updates-and-corrections/, done);
   });
-
-  world.when('I will be on the CDL endorsements page', function(done) {
-    assertOnPage('.cdl-endorsements-form', /apply\/cdl\/endorsements/, done);
+  world.then('I will be on the page to edit choosing to update or correct my card', function(done) {
+    assertOnPage('.choose-card-change', /apply\/id-and-license\/edit\/updates-and-corrections/, done);
   });
-
-  world.when('I will be on the CDL certificates page', function(done) {
-    assertOnPage('.cdl-certificates-form', /apply\/cdl\/certificates/, done);
+  world.then('I will be on the page for choosing reason for replacement', function(done) {
+    assertOnPage('.choose-replacement-detail', /apply\/id-and-license\/replacement-details/, done);
   });
-
-  world.when('I will be on the residency page', function(done) {
-    assertOnPage('.cdl-residency', /apply\/cdl\/california-residency/, done);
+  world.then('I will be on the page to add choosing reason for replacement', function(done) {
+    assertOnPage('.choose-replacement-detail', /apply\/id-and-license\/add\/replacement-details/, done);
   });
-
-  world.when('I will be on the page to specify my changes to my CDL', function(done) {
-    assertOnPage('.choose-card-change', /apply\/cdl\/change-details/, done);
+  world.then('I will be on the page to edit choosing reason for replacement', function(done) {
+    assertOnPage('.choose-replacement-detail', /apply\/id-and-license\/edit\/replacement-details/, done);
   });
-
-  world.when('I will be on the page to select reason for replacing my CDL', function(done) {
-    assertOnPage('.choose-replacement-detail', /apply\/cdl\/replacement-details/, done);
+  world.then('I will be on the youth license notification page', function(done) {
+    assertOnPage('.youth-license-notification', /apply\/id-and-license\/youth-license-notification/, done);
   });
-
-  world.when('I will be on the CDL Social Security page', function(done) {
-    assertOnPage('.social-security-form', /apply\/cdl\/social-security/, done);
+  world.then('I will be on the page for choosing real id', function(done) {
+    assertOnPage('.real-id-form', /apply\/id-and-license\/real-id/, done);
   });
-
-  world.when('I will be on the CDL Real ID page', function(done) {
-    assertOnPage('.real-id-form', /apply\/cdl\/real-id/, done);
+  world.then('I will be on the license type page', function(done) {
+    assertOnPage('.license-type-form', /apply\/id-and-license\/license-type/, done);
   });
-
-  world.when('I will be on the page to add a motorcycle class', function(done) {
-    assertOnPage('.cdl-class-m', /apply\/cdl\/motorcycle/, done);
+  world.then('I will be on the add license type page', function(done) {
+    assertOnPage('.license-type-form', /apply\/id-and-license\/add\/license-type/, done);
   });
-
-  world.when('I will be on the ID.me page', function(done) {
-    assertOnPage('.id-me', /apply\/sign-in/, done);
+  world.then('I will be on the senior id page', function(done) {
+    assertOnPage('.senior-id-form', /id-and-license\/senior-id/, done);
   });
-
-  world.then('I will be on the page to add current card info', function(done) {
-    assertOnPage('.current-card-form', /add\/driver-license\/current-card-information/, done);
+  world.then('I will be on the add senior id page', function(done) {
+    assertOnPage('.senior-id-form', /id-and-license\/add\/senior-id/, done);
   });
-  world.then('I will be on the page to add update/correct info', function(done) {
-    assertOnPage('.choose-card-change', /add\/driver-license\/updates-and-corrections/, done);
+  world.then('I will be on the reduced fee page', function(done) {
+    assertOnPage('.reduced-fee-form', /apply\/id-and-license\/reduced-fee/, done);
   });
-  world.then('I will be on the page to add replacement details', function(done) {
-    assertOnPage('.choose-replacement-detail', /add\/driver-license\/replacement-details/, done);
+  world.then('I will be on the add reduced fee page', function(done) {
+    assertOnPage('.reduced-fee-form', /apply\/id-and-license\/add\/reduced-fee/, done);
   });
-  world.then('I will be on the page to add license type', function(done) {
-    assertOnPage('.license-type-form', /add\/driver-license\/type/, done);
+
+  world.then('I will be on the get started page', function(done) {
+    assertOnPage('.intro-info', /id-and-license\/get-started/, done);
   });
-  world.then('I will be on the page to add a DL', function(done) {
-    assertOnPage('.choose-card-action', /add\/driver-license/, done);
+
+  world.then('I will be on the page for entering my address', function(done) {
+    assertOnPage('.home-address-form', /id-and-license\/my-basics\/address/, done);
   });
-  world.then('I will be on the page to add medical history', function(done) {
-    assertOnPage('.medical-history-form', /add\/driver-license\/medical-history/, done);
+  world.then('I will be on the page for editing my address', function(done) {
+    assertOnPage('.home-address-form', /id-and-license\/edit\/my-basics\/address/, done);
   });
-  world.then('I will be on the page to add license history', function(done) {
-    assertOnPage('.card-history-form', /add\/driver-license\/license-history/, done);
+  world.then('I will be on the page for entering my physical traits', function(done) {
+    assertOnPage('.physical-traits-form', /id-and-license\/my-basics\/physical-traits/, done);
   });
-  world.then('I will be on the page to add license issues', function(done) {
-    assertOnPage('.license-issues-form', /add\/driver-license\/issue-history/, done);
+  world.then('I will be on the page for editing my physical traits', function(done) {
+    assertOnPage('.physical-traits-form', /id-and-license\/edit\/my-basics\/physical-traits/, done);
   });
-  world.then('I will be on the page to add reduced fee', function(done) {
-    assertOnPage('.reduced-fee-form', /add\/id-card\/reduced-fee/, done);
+  world.then('I will be on the page for entering my height and weight', function(done) {
+    assertOnPage('.traits-height-weight-form', /id-and-license\/my-basics\/traits-height-weight/, done);
   });
-  world.then('I will be on the page to add senior id', function(done) {
-    assertOnPage('.senior-id-form', /add\/id-card\/senior-id/, done);
+  world.then('I will be on the page for editing my height and weight', function(done) {
+    assertOnPage('.traits-height-weight-form', /id-and-license\/edit\/my-basics\/traits-height-weight/, done);
   });
-  world.then('I will be on the page to add current ID info', function(done) {
-    assertOnPage('.current-card-form', /add\/id-card\/current-card-information/, done);
+  world.then('I will be on the page for entering my social security', function(done) {
+    assertOnPage('.social-security-option-form', /id-and-license\/my-basics\/social-security/, done);
   });
-  world.then('I will be on the page to add correct/update details', function(done) {
-    assertOnPage('.choose-card-change', /add\/id-card\/updates-and-corrections/, done);
+  world.then('I will be on the page for editing my social security', function(done) {
+    assertOnPage('.social-security-option-form', /id-and-license\/edit\/my-basics\/social-security/, done);
   });
-  world.then('I will be on the page to add ID replacement details', function(done) {
-    assertOnPage('.choose-replacement-detail', /add\/id-card\/replacement-details/, done);
+
+
+  world.then('I will be on the page to enter existing license and id', function(done) {
+    assertOnPage('.license-and-id-history-form', /apply\/id-and-license\/my-history\/license-and-id/, done);
   });
-  world.then('I will be on the page for entering my legal name', function(done) {
-    assertOnPage('.legal-name-form', /apply\/id-and-license\/my-basics\/legal-name/, done);
+  world.then('I will be on the page to add existing license and id', function(done) {
+    assertOnPage('.license-and-id-history-form', /apply\/id-and-license\/add\/my-history\/license-and-id/, done);
   });
-
-  world.then('I will be on the page for entering my date of birth', function(done) {
-    assertOnPage('.date-of-birth-form', /apply\/id-and-license\/my-basics\/date-of-birth/, done);
+  world.then('I will be on the page to edit existing license and id', function(done) {
+    assertOnPage('.license-and-id-history-form', /apply\/id-and-license\/edit\/my-history\/license-and-id/, done);
   });
-
-  world.then('I will be on the what do you want to do today page', function(done) {
-    assertOnPage('.choose-card-action', /apply\/id-and-license\/what-do-you-want-to-do-today/, done);
+  world.then('I will be taken to previous names page', function(done) {
+    assertOnPage('.previous-names-form', /id-and-license\/my-history\/names/, done);
   });
-
-  world.then('I will be on the current card info page', function(done) {
-    assertOnPage('.current-card-form', /apply\/id-and-license\/current-card-information/, done);
+  world.then('I will be taken to edit previous names page', function(done) {
+    assertOnPage('.previous-names-form', /id-and-license\/edit\/my-history\/names/, done);
   });
-
-  world.then('I will be on the ID and DL selection page', function(done) {
-    assertOnPage('.choose-card-form', /apply\/id-and-license\/select-id-dl/, done);
+  world.then('I will be taken to medical history page', function(done){
+    assertOnPage('.medical-history-form', /id-and-license\/my-history\/medical/, done);
   });
-
-  world.then('I will be on the page for choosing to update or correct my card', function(done) {
-    assertOnPage('.choose-card-change', /apply\/id-and-license\/updates-and-corrections/, done);
+  world.then('I will be taken to add medical history page', function(done){
+    assertOnPage('.medical-history-form', /id-and-license\/add\/my-history\/medical/, done);
   });
-
-  world.then('I will be on the page for choosing reason for replacement', function(done) {
-    assertOnPage('.choose-replacement-detail', /apply\/id-and-license\/replacement-details/, done);
+  world.then('I will be taken to edit medical history page', function(done){
+    assertOnPage('.medical-history-form', /id-and-license\/edit\/my-history\/medical/, done);
   });
-
-  world.then('I will be on the youth license notification page', function(done) {
-    assertOnPage('.youth-license-notification', /apply\/id-and-license\/youth-license-notification/, done);
+  world.then('I will be taken to the license issues page', function(done){
+    assertOnPage('.license-issues-form', /id-and-license\/my-history\/license-issues/, done);
   });
-
-  world.then('I will be on the page for choosing real id', function(done) {
-    assertOnPage('.real-id-form', /apply\/id-and-license\/real-id/, done);
+  world.then('I will be taken to the add license issues page', function(done){
+    assertOnPage('.license-issues-form', /id-and-license\/add\/my-history\/license-issues/, done);
   });
-
-  world.then('I will be on the license type page', function(done) {
-    assertOnPage('.license-type-form', /apply\/id-and-license\/license-type/, done);
+  world.then('I will be taken to the edit license issues page', function(done){
+    assertOnPage('.license-issues-form', /id-and-license\/edit\/my-history\/license-issues/, done);
   });
-
-  world.then('I will be on the reduced fee page', function(done) {
-    assertOnPage('.reduced-fee-form', /apply\/id-and-license\/reduced-fee/, done);
+  world.then('I will be on the page for veteran related services', function(done) {
+    assertOnPage('.veterans-questionnaire-form', /id-and-license\/my-history\/veterans-service/, done);
   });
-
-  world.then('I will be on the page for entering my address', function(done) {
-    assertOnPage('.home-address-form', /apply\/id-and-license\/my-basics\/address/, done);
+  world.then('I will be on the page for editing veteran related services', function(done) {
+    assertOnPage('.veterans-questionnaire-form', /id-and-license\/edit\/my-history\/veterans-service/, done);
   });
 
-  world.then('I will be on the page for entering my physical traits', function(done) {
-    assertOnPage('.physical-traits-form', /id-and-license\/my-basics\/physical-traits/, done);
-  });
 
-  world.then('I will be on the page for entering my height and weight', function(done) {
-    assertOnPage('.traits-height-weight-form', /id-and-license\/my-basics\/traits-height-weight/, done);
-  });
 
   world.then('I will be on the page for organ donation', function(done) {
-    assertOnPage('.donate-organ-form', /id-and-license\/organ-donation/, done);
+    assertOnPage('.donate-organ-form', /organ-donation/, done);
   });
-
   world.then('I will be on the page for donate contribution', function(done) {
     assertOnPage('.donate-contribution-form', /id-and-license\/about-me\/donate-contribution/, done);
   });
 
-  world.then('I will be on the page for entering my social security', function(done) {
-    assertOnPage('.social-security-option-form', /id-and-license\/my-basics\/social-security/, done);
-  });
 
-  world.then('I will be on the page for veteran related services', function(done) {
-    assertOnPage('.veterans-questionnaire-form', /id-and-license\/my-history\/veterans-service/, done);
+  world.then('I will be taken to political party page', function(done){
+    assertOnPage('.political-party-preference', /id-and-license\/voter\/political-party/, done);
+  });
+  world.then('I will be taken to the political party choose page', function(done){
+    assertOnPage('.choose-political-party', /id-and-license\/voting-registration\/choose-party/, done);
+  });
+  world.then('I will be taken to voter preferences info page', function(done) {
+    assertOnPage('.voter-preferences-intro', /id-and-license\/voting-registration\/preferences/, done);
+  });
+  world.then('I will be taken to updated voter preferences info page', function(done) {
+    assertOnPage('.updating-voter-preferences', /id-and-license\/voting-registration\/preferences-updated/, done);
+  });
+  world.then('I will be taken to voter registration complete page', function(done) {
+    assertOnPage('.voter-reg-complete', /id-and-license\/voting-registration\/confirmation/, done);
   });
-
   world.then('I will be on the page for voter citizen status entry', function(done) {
     assertOnPage('.citizen-status-form', /id-and-license\/voting-registration\/citizenship/, done);
   });
-
   world.then('I will be on the page for ballot by mail', function(done) {
     assertOnPage('.ballot-by-mail-form', /id-and-license\/voting-registration\/vote-by-mail/, done);
   });
-
   world.then('I will be on the eligibility page', function(done) {
     assertOnPage('.eligibility-requirements-form', /id-and-license\/voting-registration\/eligibility/, done);
   });
-
   world.then('I will be taken to contact methods page', function(done){
     assertOnPage('.contact-methods-choice-form', /id-and-license\/voting-registration\/contact-methods/, done);
   });
-
   world.then('I will be taken to ballot language page', function(done){
     assertOnPage('.ballot-language-form', /id-and-license\/voting-registration\/language/, done);
   });
-
   world.then('I will be on the page for entering voter opt-out', function(done) {
     assertOnPage('.opt-out-form', /id-and-license\/voting-registration\/opt-out/, done);
   });
+  world.then('I will be on the page for guardian signature', function(done){
+    assertOnPage('.guardian-signature-form', /id-and-license\/guardian-signature/, done);
+  });
+
 
+  world.then('I will be on the page with my summary', function(done) {
+    assertOnPage('.summary', /apply\/id-and-license\/summary/, done);
+  });
+  world.then('I will see a blank page with the loading icon', function(done) {
+    assertOnPage('.loading', /id-and-license\/summary/, done);
+  });
+  world.then('I will be on the page for appointment preparation', function(done) {
+    assertOnPage('.appointment-preparation', /apply\/id-and-license\/appointment-preparation/, done);
+  });
   world.then('I will be on the required documents page', function(done) {
     assertOnPage('.required-documents', /apply\/id-and-license\/appointment-preparation\/documents/, done);
   });
+  world.then('I will be taken to the success visit page', function(done){
+    assertOnPage('.success-visit-info', /id-and-license\/about-me\/success-visit/, done);
+  });
 
-  world.then('I will be on the page to enter existing license and id', function(done) {
-    assertOnPage('.license-and-id-history-form', /id-and-license\/my-history\/license-and-id/, done);
+
+  /* CDL NavigateToPath */
+
+  world.when('I go to the CDL summary', function(done){
+    navigateToPath('/apply/cdl/summary', '.summary', done);
   });
 
-  world.then('I will be on the page with my summary', function(done) {
-    assertOnPage('.summary', /apply\/id-and-license\/summary/, done);
+  world.when('I visit the CDL name page', function(done) {
+    navigateToPath('/apply/cdl/true-name', '.legal-name-form', done);
   });
 
-  world.then('I will be on the CDL summary', function(done) {
-    assertOnPage('.summary', /apply\/cdl\/summary/, done);
+  world.when('I visit the CDL dob page', function(done) {
+    navigateToPath('/apply/cdl/date-of-birth', '.date-of-birth-form', done);
   });
 
-  world.then('I will be on the CDL current card page', function(done) {
-    assertOnPage('.current-card-form', /apply\/cdl\/current-ca-license/, done);
+  world.when('I visit the CDL WDYWTDT page', function(done) {
+    navigateToPath('/apply/cdl/what-do-you-want-to-do-today', '.choose-card-action', done);
   });
 
-  world.then('I will be on the page for appointment preparation', function(done) {
-    assertOnPage('.appointment-preparation', /apply\/id-and-license\/appointment-preparation/, done);
+  world.when('I visit the CDL page to enter my current DL', function(done) {
+    navigateToPath('/apply/cdl/current-ca-license/', '.cdl-current-dl-yes-no', done);
   });
 
-  world.then('I will be taken to the license issues page', function(done){
-    assertOnPage('.license-issues-form', /id-and-license\/my-history\/license-issues/, done);
+  world.when('I visit the endorsements page', function(done) {
+    navigateToPath('/apply/cdl/endorsements/', '.cdl-endorsements-form', done);
   });
 
-  world.then('I will be taken to political party page', function(done){
-    assertOnPage('.political-party-preference', /id-and-license\/voter\/political-party/, done);
+  world.when('I go to the page to specify my changes to my CDL', function(done) {
+    navigateToPath('/apply/cdl/change-details', '.choose-card-change', done);
   });
 
-  world.then('I will be taken to the political party choose page', function(done){
-    assertOnPage('.choose-political-party', /id-and-license\/voting-registration\/choose-party/, done);
+  world.when('I go to the page to specify my changes to my CDL', function(done) {
+    navigateToPath('/apply/cdl/change-details', '.choose-card-change', done);
   });
 
-  world.then('I will be taken to the success visit page', function(done){
-    assertOnPage('.success-visit-info', /id-and-license\/about-me\/success-visit/, done);
+  world.when('I visit the CDL motorcycle license page', function(done) {
+    navigateToPath('/apply/cdl/motorcycle', '.cdl-class-m', done);
   });
 
-  world.then('I will be taken to voter preferences info page', function(done) {
-    assertOnPage('.voter-preferences-intro', /id-and-license\/voting-registration\/preferences/, done);
+  world.when('I visit the CDL class page', function(done) {
+    navigateToPath('/apply/cdl/license-class', '.cdl-class-form', done);
   });
 
-  world.then('I will be taken to updated voter preferences info page', function(done) {
-    assertOnPage('.updating-voter-preferences', /id-and-license\/voting-registration\/preferences-updated/, done);
+  world.when('I visit the self cert page for CDL', function(done) {
+    navigateToPath('/apply/cdl/self-certification', '.cdl-self-certification', done);
   });
 
-  world.then('I will be taken to voter registration complete page', function(done) {
-    assertOnPage('.voter-reg-complete', /id-and-license\/voting-registration\/confirmation/, done);
+  world.when('I visit the CDL name history page', function(done) {
+    navigateToPath('/apply/cdl/my-history/names', '.names-history-form', done);
   });
 
-  world.then('I will be taken to the names page', function(done) {
-    assertOnPage('.legal-name-form', /apply\/id-and-license\/my-basics\/legal-name/, done);
+  world.when('I visit the CDL Social Security page', function(done) {
+    navigateToPath('/apply/cdl/social-security', '.social-security-form', done);
   });
 
-  world.then('I will be taken to previous names page', function(done) {
-    assertOnPage('.previous-names-form', /id-and-license\/my-history\/names/, done);
+  world.and('I return to the home page', function(done) {
+    navigateToPath('/apply/id-and-license/links', '.section-links', done);
   });
 
-  world.then('I will be taken to date of birth page', function(done) {
-    assertOnPage('.date-of-birth-form', /id-and-license\/my-basics\/date-of-birth/, done);
+  world.when('I visit the page about what I can do in the CDL application', function(done) {
+    navigateToPath('/apply/cdl', '.apply-cdl', done);
   });
 
-  world.then('I will be on the get started page', function(done) {
-    assertOnPage('.intro-info', /id-and-license\/get-started/, done);
+  world.when('I visit the CDL page for entering my physical traits', function(done) {
+    navigateToPath('/apply/cdl/physical-traits', '.physical-traits-form', done);
   });
 
-  world.then('I will be taken to medical history page', function(done){
-    assertOnPage('.medical-history-form', /id-and-license\/my-history\/medical/, done);
+  world.when('I visit the CDL page for Organ Donation', function(done) {
+    navigateToPath('/apply/cdl/organ-donation', '.donate-organ-form', done);
   });
 
-  world.then('I will be on the senior id page', function(done) {
-    assertOnPage('.senior-id-form', /id-and-license\/senior-id/, done);
+  /* CDL AssertOnPage */
+  world.when('I will be on the page to choose application', function(done) {
+    assertOnPage('.choose-application-form', /apply\/choose-application/, done);
+  });
+  world.when('I will be on the ID.me page', function(done) {
+    assertOnPage('.id-me', /apply\/sign-in/, done);
   });
 
-  world.then('I will be on the page for guardian signature', function(done){
-    assertOnPage('.guardian-signature-form', /id-and-license\/guardian-signature/, done);
+  world.when('I will be on the CDL welcome page', function(done) {
+    assertOnPage('.apply-cdl', /apply\/cdl/, done);
+  });
+  world.when('I will be on the CDL name page', function(done) {
+    assertOnPage('.legal-name-form', /apply\/cdl\/true-name/, done);
+  });
+  world.when('I will be on the CDL edit name page', function(done) {
+    assertOnPage('.legal-name-form', /apply\/cdl\/edit\/true-name/, done);
+  });
+  world.when('I will be on the CDL dob page', function(done) {
+    assertOnPage('.date-of-birth-form', /apply\/cdl\/date-of-birth/, done);
+  });
+  world.when('I will be on the CDL edit dob page', function(done) {
+    assertOnPage('.date-of-birth-form', /apply\/cdl\/edit\/date-of-birth/, done);
+  });
+  world.when('I will be on the CDL WDYWTDT page', function(done) {
+    assertOnPage('.choose-card-action', /apply\/cdl\/what-do-you-want-to-do-today/, done);
+  });
+  world.when('I will be on the current CDL page', function(done) {
+    assertOnPage('.enter-current-card-info', /apply\/cdl\/current-card-information/, done);
   });
 
-  world.then('I will see a blank page with the loading icon', function(done) {
-    assertOnPage('.loading', /id-and-license\/summary/, done);
+  world.then('I will be on the CDL current card page', function(done) {
+    assertOnPage('.current-card-form', /apply\/cdl\/current-ca-license/, done);
+  });
+  world.when('I will be on the page to specify my changes to my CDL', function(done) {
+    assertOnPage('.choose-card-change', /apply\/cdl\/change-details/, done);
+  });
+  world.when('I will be on the page to select reason for replacing my CDL', function(done) {
+    assertOnPage('.choose-replacement-detail', /apply\/cdl\/replacement-details/, done);
+  });
+
+  world.when('I will be on the CDL page to enter my current DL', function(done) {
+    assertOnPage('.current-card-form', /apply\/cdl\/current-ca-license/, done);
+  });
+  world.when('I will be on the residency page', function(done) {
+    assertOnPage('.cdl-residency', /apply\/cdl\/california-residency/, done);
   });
 
   world.then('I will be on the CDL page for entering my height and weight', function(done) {
     assertOnPage('.traits-height-weight-form', /cdl\/traits-height-weight/, done);
   });
+
+  world.when('I will be on the CDL license issues page', function(done) {
+    assertOnPage('.license-issues-form', /apply\/cdl\/my-history\/issues/, done);
+  });
+
+  world.when('I will be on the CDL endorsements page', function(done) {
+    assertOnPage('.cdl-endorsements-form', /apply\/cdl\/endorsements/, done);
+  });
+
+  world.when('I will be on the CDL certificates page', function(done) {
+    assertOnPage('.cdl-certificates-form', /apply\/cdl\/certificates/, done);
+  });
+
+  world.when('I will be on the CDL Social Security page', function(done) {
+    assertOnPage('.social-security-form', /apply\/cdl\/social-security/, done);
+  });
+
+  world.when('I will be on the CDL Real ID page', function(done) {
+    assertOnPage('.real-id-form', /apply\/cdl\/real-id/, done);
+  });
+
+  world.when('I will be on the page to add a motorcycle class', function(done) {
+    assertOnPage('.cdl-class-m', /apply\/cdl\/motorcycle/, done);
+  });
+
+  world.then('I will be on the CDL summary', function(done) {
+    assertOnPage('.summary', /apply\/cdl\/summary/, done);
+  });
+
 };
diff --git a/test/features/youth-users.feature b/test/features/youth-users.feature
index 0ae81f5b..ef2077a9 100644
--- a/test/features/youth-users.feature
+++ b/test/features/youth-users.feature
@@ -68,6 +68,7 @@ Feature: Happy path for youth users
     When I visit the political party choose page
     When I select choose party Yes
     When I select a political party button
+    And I click "Next" to continue
     When I go to the page with my summary
     And I will see I would like to pre-register to vote in summary
     Then I will see my language in the summary
